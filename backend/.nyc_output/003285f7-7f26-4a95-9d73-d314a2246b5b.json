{"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/controllers/product.controller.spec.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/controllers/product.controller.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":131}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},"18":{"start":{"line":17,"column":99},"end":{"line":17,"column":131}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":62}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":62}},"24":{"start":{"line":25,"column":17},"end":{"line":25,"column":42}},"25":{"start":{"line":26,"column":15},"end":{"line":26,"column":44}},"26":{"start":{"line":27,"column":20},"end":{"line":27,"column":57}},"27":{"start":{"line":28,"column":21},"end":{"line":28,"column":55}},"28":{"start":{"line":29,"column":24},"end":{"line":29,"column":61}},"29":{"start":{"line":30,"column":13},"end":{"line":30,"column":43}},"30":{"start":{"line":31,"column":15},"end":{"line":31,"column":47}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":40}},"32":{"start":{"line":34,"column":17},"end":{"line":50,"column":1}},"33":{"start":{"line":51,"column":17},"end":{"line":67,"column":1}},"34":{"start":{"line":68,"column":14},"end":{"line":86,"column":1}},"35":{"start":{"line":87,"column":17},"end":{"line":103,"column":1}},"36":{"start":{"line":104,"column":0},"end":{"line":366,"column":3}},"37":{"start":{"line":106,"column":4},"end":{"line":111,"column":7}},"38":{"start":{"line":107,"column":8},"end":{"line":110,"column":11}},"39":{"start":{"line":108,"column":12},"end":{"line":108,"column":24}},"40":{"start":{"line":109,"column":12},"end":{"line":109,"column":19}},"41":{"start":{"line":112,"column":4},"end":{"line":182,"column":7}},"42":{"start":{"line":113,"column":8},"end":{"line":123,"column":11}},"43":{"start":{"line":114,"column":12},"end":{"line":122,"column":15}},"44":{"start":{"line":115,"column":16},"end":{"line":121,"column":19}},"45":{"start":{"line":119,"column":20},"end":{"line":119,"column":43}},"46":{"start":{"line":120,"column":20},"end":{"line":120,"column":27}},"47":{"start":{"line":124,"column":8},"end":{"line":149,"column":11}},"48":{"start":{"line":125,"column":12},"end":{"line":148,"column":15}},"49":{"start":{"line":142,"column":16},"end":{"line":142,"column":50}},"50":{"start":{"line":143,"column":16},"end":{"line":143,"column":55}},"51":{"start":{"line":144,"column":16},"end":{"line":144,"column":62}},"52":{"start":{"line":145,"column":16},"end":{"line":145,"column":72}},"53":{"start":{"line":146,"column":16},"end":{"line":146,"column":101}},"54":{"start":{"line":147,"column":16},"end":{"line":147,"column":23}},"55":{"start":{"line":150,"column":8},"end":{"line":160,"column":11}},"56":{"start":{"line":151,"column":12},"end":{"line":159,"column":15}},"57":{"start":{"line":155,"column":16},"end":{"line":155,"column":50}},"58":{"start":{"line":156,"column":16},"end":{"line":156,"column":55}},"59":{"start":{"line":157,"column":16},"end":{"line":157,"column":99}},"60":{"start":{"line":158,"column":16},"end":{"line":158,"column":23}},"61":{"start":{"line":161,"column":8},"end":{"line":171,"column":11}},"62":{"start":{"line":162,"column":12},"end":{"line":170,"column":15}},"63":{"start":{"line":166,"column":16},"end":{"line":166,"column":50}},"64":{"start":{"line":167,"column":16},"end":{"line":167,"column":55}},"65":{"start":{"line":168,"column":16},"end":{"line":168,"column":102}},"66":{"start":{"line":169,"column":16},"end":{"line":169,"column":23}},"67":{"start":{"line":172,"column":8},"end":{"line":181,"column":11}},"68":{"start":{"line":173,"column":12},"end":{"line":180,"column":15}},"69":{"start":{"line":176,"column":16},"end":{"line":176,"column":50}},"70":{"start":{"line":177,"column":16},"end":{"line":177,"column":55}},"71":{"start":{"line":178,"column":16},"end":{"line":178,"column":92}},"72":{"start":{"line":179,"column":16},"end":{"line":179,"column":23}},"73":{"start":{"line":183,"column":4},"end":{"line":219,"column":7}},"74":{"start":{"line":184,"column":8},"end":{"line":207,"column":11}},"75":{"start":{"line":185,"column":12},"end":{"line":206,"column":15}},"76":{"start":{"line":202,"column":16},"end":{"line":202,"column":50}},"77":{"start":{"line":203,"column":16},"end":{"line":203,"column":55}},"78":{"start":{"line":204,"column":16},"end":{"line":204,"column":92}},"79":{"start":{"line":205,"column":16},"end":{"line":205,"column":23}},"80":{"start":{"line":208,"column":8},"end":{"line":218,"column":11}},"81":{"start":{"line":209,"column":12},"end":{"line":217,"column":15}},"82":{"start":{"line":213,"column":16},"end":{"line":213,"column":50}},"83":{"start":{"line":214,"column":16},"end":{"line":214,"column":55}},"84":{"start":{"line":215,"column":16},"end":{"line":215,"column":90}},"85":{"start":{"line":216,"column":16},"end":{"line":216,"column":23}},"86":{"start":{"line":220,"column":4},"end":{"line":248,"column":7}},"87":{"start":{"line":221,"column":8},"end":{"line":229,"column":11}},"88":{"start":{"line":222,"column":12},"end":{"line":228,"column":15}},"89":{"start":{"line":224,"column":16},"end":{"line":224,"column":50}},"90":{"start":{"line":225,"column":16},"end":{"line":225,"column":55}},"91":{"start":{"line":226,"column":16},"end":{"line":226,"column":88}},"92":{"start":{"line":227,"column":16},"end":{"line":227,"column":23}},"93":{"start":{"line":230,"column":8},"end":{"line":238,"column":11}},"94":{"start":{"line":231,"column":12},"end":{"line":237,"column":15}},"95":{"start":{"line":233,"column":16},"end":{"line":233,"column":50}},"96":{"start":{"line":234,"column":16},"end":{"line":234,"column":55}},"97":{"start":{"line":235,"column":16},"end":{"line":235,"column":90}},"98":{"start":{"line":236,"column":16},"end":{"line":236,"column":23}},"99":{"start":{"line":239,"column":8},"end":{"line":247,"column":11}},"100":{"start":{"line":240,"column":12},"end":{"line":246,"column":15}},"101":{"start":{"line":242,"column":16},"end":{"line":242,"column":50}},"102":{"start":{"line":243,"column":16},"end":{"line":243,"column":55}},"103":{"start":{"line":244,"column":16},"end":{"line":244,"column":90}},"104":{"start":{"line":245,"column":16},"end":{"line":245,"column":23}},"105":{"start":{"line":249,"column":4},"end":{"line":355,"column":7}},"106":{"start":{"line":250,"column":8},"end":{"line":263,"column":11}},"107":{"start":{"line":251,"column":12},"end":{"line":262,"column":15}},"108":{"start":{"line":252,"column":16},"end":{"line":254,"column":19}},"109":{"start":{"line":253,"column":20},"end":{"line":253,"column":61}},"110":{"start":{"line":256,"column":16},"end":{"line":261,"column":19}},"111":{"start":{"line":260,"column":20},"end":{"line":260,"column":27}},"112":{"start":{"line":264,"column":8},"end":{"line":271,"column":11}},"113":{"start":{"line":265,"column":12},"end":{"line":270,"column":15}},"114":{"start":{"line":266,"column":16},"end":{"line":266,"column":50}},"115":{"start":{"line":267,"column":16},"end":{"line":267,"column":55}},"116":{"start":{"line":268,"column":16},"end":{"line":268,"column":65}},"117":{"start":{"line":269,"column":16},"end":{"line":269,"column":23}},"118":{"start":{"line":272,"column":8},"end":{"line":279,"column":11}},"119":{"start":{"line":273,"column":12},"end":{"line":278,"column":15}},"120":{"start":{"line":274,"column":16},"end":{"line":274,"column":50}},"121":{"start":{"line":275,"column":16},"end":{"line":275,"column":55}},"122":{"start":{"line":276,"column":16},"end":{"line":276,"column":65}},"123":{"start":{"line":277,"column":16},"end":{"line":277,"column":23}},"124":{"start":{"line":280,"column":8},"end":{"line":287,"column":11}},"125":{"start":{"line":281,"column":12},"end":{"line":286,"column":15}},"126":{"start":{"line":282,"column":16},"end":{"line":282,"column":50}},"127":{"start":{"line":283,"column":16},"end":{"line":283,"column":55}},"128":{"start":{"line":284,"column":16},"end":{"line":284,"column":65}},"129":{"start":{"line":285,"column":16},"end":{"line":285,"column":23}},"130":{"start":{"line":288,"column":8},"end":{"line":295,"column":11}},"131":{"start":{"line":289,"column":12},"end":{"line":294,"column":15}},"132":{"start":{"line":290,"column":16},"end":{"line":290,"column":50}},"133":{"start":{"line":291,"column":16},"end":{"line":291,"column":55}},"134":{"start":{"line":292,"column":16},"end":{"line":292,"column":65}},"135":{"start":{"line":293,"column":16},"end":{"line":293,"column":23}},"136":{"start":{"line":296,"column":8},"end":{"line":303,"column":11}},"137":{"start":{"line":297,"column":12},"end":{"line":302,"column":15}},"138":{"start":{"line":298,"column":16},"end":{"line":298,"column":50}},"139":{"start":{"line":299,"column":16},"end":{"line":299,"column":55}},"140":{"start":{"line":300,"column":16},"end":{"line":300,"column":65}},"141":{"start":{"line":301,"column":16},"end":{"line":301,"column":23}},"142":{"start":{"line":304,"column":8},"end":{"line":311,"column":11}},"143":{"start":{"line":305,"column":12},"end":{"line":310,"column":15}},"144":{"start":{"line":306,"column":16},"end":{"line":306,"column":50}},"145":{"start":{"line":307,"column":16},"end":{"line":307,"column":55}},"146":{"start":{"line":308,"column":16},"end":{"line":308,"column":62}},"147":{"start":{"line":309,"column":16},"end":{"line":309,"column":23}},"148":{"start":{"line":312,"column":8},"end":{"line":319,"column":11}},"149":{"start":{"line":313,"column":12},"end":{"line":318,"column":15}},"150":{"start":{"line":314,"column":16},"end":{"line":314,"column":50}},"151":{"start":{"line":315,"column":16},"end":{"line":315,"column":55}},"152":{"start":{"line":316,"column":16},"end":{"line":316,"column":65}},"153":{"start":{"line":317,"column":16},"end":{"line":317,"column":23}},"154":{"start":{"line":320,"column":8},"end":{"line":327,"column":11}},"155":{"start":{"line":321,"column":12},"end":{"line":326,"column":15}},"156":{"start":{"line":322,"column":16},"end":{"line":322,"column":50}},"157":{"start":{"line":323,"column":16},"end":{"line":323,"column":55}},"158":{"start":{"line":324,"column":16},"end":{"line":324,"column":65}},"159":{"start":{"line":325,"column":16},"end":{"line":325,"column":23}},"160":{"start":{"line":328,"column":8},"end":{"line":335,"column":11}},"161":{"start":{"line":329,"column":12},"end":{"line":334,"column":15}},"162":{"start":{"line":330,"column":16},"end":{"line":330,"column":50}},"163":{"start":{"line":331,"column":16},"end":{"line":331,"column":55}},"164":{"start":{"line":332,"column":16},"end":{"line":332,"column":63}},"165":{"start":{"line":333,"column":16},"end":{"line":333,"column":23}},"166":{"start":{"line":336,"column":8},"end":{"line":346,"column":11}},"167":{"start":{"line":337,"column":12},"end":{"line":345,"column":15}},"168":{"start":{"line":338,"column":16},"end":{"line":338,"column":50}},"169":{"start":{"line":339,"column":16},"end":{"line":339,"column":55}},"170":{"start":{"line":340,"column":16},"end":{"line":340,"column":66}},"171":{"start":{"line":341,"column":16},"end":{"line":341,"column":81}},"172":{"start":{"line":342,"column":29},"end":{"line":342,"column":122}},"173":{"start":{"line":343,"column":16},"end":{"line":343,"column":75}},"174":{"start":{"line":344,"column":16},"end":{"line":344,"column":23}},"175":{"start":{"line":347,"column":8},"end":{"line":354,"column":11}},"176":{"start":{"line":348,"column":12},"end":{"line":353,"column":15}},"177":{"start":{"line":349,"column":16},"end":{"line":349,"column":50}},"178":{"start":{"line":350,"column":16},"end":{"line":350,"column":55}},"179":{"start":{"line":351,"column":16},"end":{"line":351,"column":86}},"180":{"start":{"line":352,"column":16},"end":{"line":352,"column":23}},"181":{"start":{"line":356,"column":4},"end":{"line":365,"column":7}},"182":{"start":{"line":357,"column":8},"end":{"line":360,"column":11}},"183":{"start":{"line":361,"column":8},"end":{"line":364,"column":30}},"184":{"start":{"line":364,"column":22},"end":{"line":364,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":56},"end":{"line":21,"column":57}},"loc":{"start":{"line":21,"column":71},"end":{"line":23,"column":1}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":104,"column":35},"end":{"line":104,"column":36}},"loc":{"start":{"line":104,"column":41},"end":{"line":366,"column":1}},"line":104},"8":{"name":"(anonymous_8)","decl":{"start":{"line":106,"column":23},"end":{"line":106,"column":24}},"loc":{"start":{"line":106,"column":39},"end":{"line":111,"column":5}},"line":106},"9":{"name":"(anonymous_9)","decl":{"start":{"line":107,"column":41},"end":{"line":107,"column":42}},"loc":{"start":{"line":107,"column":50},"end":{"line":110,"column":9}},"line":107},"10":{"name":"(anonymous_10)","decl":{"start":{"line":112,"column":26},"end":{"line":112,"column":27}},"loc":{"start":{"line":112,"column":32},"end":{"line":182,"column":5}},"line":112},"11":{"name":"(anonymous_11)","decl":{"start":{"line":113,"column":50},"end":{"line":113,"column":51}},"loc":{"start":{"line":113,"column":66},"end":{"line":123,"column":9}},"line":113},"12":{"name":"(anonymous_12)","decl":{"start":{"line":114,"column":49},"end":{"line":114,"column":50}},"loc":{"start":{"line":114,"column":55},"end":{"line":122,"column":13}},"line":114},"13":{"name":"(anonymous_13)","decl":{"start":{"line":118,"column":23},"end":{"line":118,"column":24}},"loc":{"start":{"line":118,"column":43},"end":{"line":121,"column":17}},"line":118},"14":{"name":"(anonymous_14)","decl":{"start":{"line":124,"column":51},"end":{"line":124,"column":52}},"loc":{"start":{"line":124,"column":67},"end":{"line":149,"column":9}},"line":124},"15":{"name":"(anonymous_15)","decl":{"start":{"line":141,"column":19},"end":{"line":141,"column":20}},"loc":{"start":{"line":141,"column":39},"end":{"line":148,"column":13}},"line":141},"16":{"name":"(anonymous_16)","decl":{"start":{"line":150,"column":50},"end":{"line":150,"column":51}},"loc":{"start":{"line":150,"column":66},"end":{"line":160,"column":9}},"line":150},"17":{"name":"(anonymous_17)","decl":{"start":{"line":154,"column":21},"end":{"line":154,"column":22}},"loc":{"start":{"line":154,"column":41},"end":{"line":159,"column":13}},"line":154},"18":{"name":"(anonymous_18)","decl":{"start":{"line":161,"column":74},"end":{"line":161,"column":75}},"loc":{"start":{"line":161,"column":90},"end":{"line":171,"column":9}},"line":161},"19":{"name":"(anonymous_19)","decl":{"start":{"line":165,"column":21},"end":{"line":165,"column":22}},"loc":{"start":{"line":165,"column":41},"end":{"line":170,"column":13}},"line":165},"20":{"name":"(anonymous_20)","decl":{"start":{"line":172,"column":70},"end":{"line":172,"column":71}},"loc":{"start":{"line":172,"column":86},"end":{"line":181,"column":9}},"line":172},"21":{"name":"(anonymous_21)","decl":{"start":{"line":175,"column":21},"end":{"line":175,"column":22}},"loc":{"start":{"line":175,"column":41},"end":{"line":180,"column":13}},"line":175},"22":{"name":"(anonymous_22)","decl":{"start":{"line":183,"column":25},"end":{"line":183,"column":26}},"loc":{"start":{"line":183,"column":31},"end":{"line":219,"column":5}},"line":183},"23":{"name":"(anonymous_23)","decl":{"start":{"line":184,"column":51},"end":{"line":184,"column":52}},"loc":{"start":{"line":184,"column":67},"end":{"line":207,"column":9}},"line":184},"24":{"name":"(anonymous_24)","decl":{"start":{"line":201,"column":19},"end":{"line":201,"column":20}},"loc":{"start":{"line":201,"column":39},"end":{"line":206,"column":13}},"line":201},"25":{"name":"(anonymous_25)","decl":{"start":{"line":208,"column":77},"end":{"line":208,"column":78}},"loc":{"start":{"line":208,"column":93},"end":{"line":218,"column":9}},"line":208},"26":{"name":"(anonymous_26)","decl":{"start":{"line":212,"column":21},"end":{"line":212,"column":22}},"loc":{"start":{"line":212,"column":41},"end":{"line":217,"column":13}},"line":212},"27":{"name":"(anonymous_27)","decl":{"start":{"line":220,"column":28},"end":{"line":220,"column":29}},"loc":{"start":{"line":220,"column":34},"end":{"line":248,"column":5}},"line":220},"28":{"name":"(anonymous_28)","decl":{"start":{"line":221,"column":50},"end":{"line":221,"column":51}},"loc":{"start":{"line":221,"column":66},"end":{"line":229,"column":9}},"line":221},"29":{"name":"(anonymous_29)","decl":{"start":{"line":223,"column":21},"end":{"line":223,"column":22}},"loc":{"start":{"line":223,"column":41},"end":{"line":228,"column":13}},"line":223},"30":{"name":"(anonymous_30)","decl":{"start":{"line":230,"column":51},"end":{"line":230,"column":52}},"loc":{"start":{"line":230,"column":67},"end":{"line":238,"column":9}},"line":230},"31":{"name":"(anonymous_31)","decl":{"start":{"line":232,"column":21},"end":{"line":232,"column":22}},"loc":{"start":{"line":232,"column":41},"end":{"line":237,"column":13}},"line":232},"32":{"name":"(anonymous_32)","decl":{"start":{"line":239,"column":62},"end":{"line":239,"column":63}},"loc":{"start":{"line":239,"column":78},"end":{"line":247,"column":9}},"line":239},"33":{"name":"(anonymous_33)","decl":{"start":{"line":241,"column":21},"end":{"line":241,"column":22}},"loc":{"start":{"line":241,"column":41},"end":{"line":246,"column":13}},"line":241},"34":{"name":"(anonymous_34)","decl":{"start":{"line":249,"column":25},"end":{"line":249,"column":26}},"loc":{"start":{"line":249,"column":31},"end":{"line":355,"column":5}},"line":249},"35":{"name":"(anonymous_35)","decl":{"start":{"line":250,"column":36},"end":{"line":250,"column":37}},"loc":{"start":{"line":250,"column":52},"end":{"line":263,"column":9}},"line":250},"36":{"name":"(anonymous_36)","decl":{"start":{"line":251,"column":58},"end":{"line":251,"column":59}},"loc":{"start":{"line":251,"column":64},"end":{"line":255,"column":13}},"line":251},"37":{"name":"(anonymous_37)","decl":{"start":{"line":252,"column":62},"end":{"line":252,"column":63}},"loc":{"start":{"line":252,"column":68},"end":{"line":254,"column":17}},"line":252},"38":{"name":"(anonymous_38)","decl":{"start":{"line":255,"column":20},"end":{"line":255,"column":21}},"loc":{"start":{"line":255,"column":26},"end":{"line":262,"column":13}},"line":255},"39":{"name":"(anonymous_39)","decl":{"start":{"line":259,"column":25},"end":{"line":259,"column":26}},"loc":{"start":{"line":259,"column":45},"end":{"line":261,"column":17}},"line":259},"40":{"name":"(anonymous_40)","decl":{"start":{"line":264,"column":51},"end":{"line":264,"column":52}},"loc":{"start":{"line":264,"column":67},"end":{"line":271,"column":9}},"line":264},"41":{"name":"(anonymous_41)","decl":{"start":{"line":265,"column":61},"end":{"line":265,"column":62}},"loc":{"start":{"line":265,"column":81},"end":{"line":270,"column":13}},"line":265},"42":{"name":"(anonymous_42)","decl":{"start":{"line":272,"column":60},"end":{"line":272,"column":61}},"loc":{"start":{"line":272,"column":76},"end":{"line":279,"column":9}},"line":272},"43":{"name":"(anonymous_43)","decl":{"start":{"line":273,"column":70},"end":{"line":273,"column":71}},"loc":{"start":{"line":273,"column":90},"end":{"line":278,"column":13}},"line":273},"44":{"name":"(anonymous_44)","decl":{"start":{"line":280,"column":62},"end":{"line":280,"column":63}},"loc":{"start":{"line":280,"column":78},"end":{"line":287,"column":9}},"line":280},"45":{"name":"(anonymous_45)","decl":{"start":{"line":281,"column":72},"end":{"line":281,"column":73}},"loc":{"start":{"line":281,"column":92},"end":{"line":286,"column":13}},"line":281},"46":{"name":"(anonymous_46)","decl":{"start":{"line":288,"column":65},"end":{"line":288,"column":66}},"loc":{"start":{"line":288,"column":81},"end":{"line":295,"column":9}},"line":288},"47":{"name":"(anonymous_47)","decl":{"start":{"line":289,"column":78},"end":{"line":289,"column":79}},"loc":{"start":{"line":289,"column":98},"end":{"line":294,"column":13}},"line":289},"48":{"name":"(anonymous_48)","decl":{"start":{"line":296,"column":61},"end":{"line":296,"column":62}},"loc":{"start":{"line":296,"column":77},"end":{"line":303,"column":9}},"line":296},"49":{"name":"(anonymous_49)","decl":{"start":{"line":297,"column":68},"end":{"line":297,"column":69}},"loc":{"start":{"line":297,"column":88},"end":{"line":302,"column":13}},"line":297},"50":{"name":"(anonymous_50)","decl":{"start":{"line":304,"column":55},"end":{"line":304,"column":56}},"loc":{"start":{"line":304,"column":71},"end":{"line":311,"column":9}},"line":304},"51":{"name":"(anonymous_51)","decl":{"start":{"line":305,"column":63},"end":{"line":305,"column":64}},"loc":{"start":{"line":305,"column":83},"end":{"line":310,"column":13}},"line":305},"52":{"name":"(anonymous_52)","decl":{"start":{"line":312,"column":64},"end":{"line":312,"column":65}},"loc":{"start":{"line":312,"column":80},"end":{"line":319,"column":9}},"line":312},"53":{"name":"(anonymous_53)","decl":{"start":{"line":313,"column":68},"end":{"line":313,"column":69}},"loc":{"start":{"line":313,"column":88},"end":{"line":318,"column":13}},"line":313},"54":{"name":"(anonymous_54)","decl":{"start":{"line":320,"column":66},"end":{"line":320,"column":67}},"loc":{"start":{"line":320,"column":82},"end":{"line":327,"column":9}},"line":320},"55":{"name":"(anonymous_55)","decl":{"start":{"line":321,"column":70},"end":{"line":321,"column":71}},"loc":{"start":{"line":321,"column":90},"end":{"line":326,"column":13}},"line":321},"56":{"name":"(anonymous_56)","decl":{"start":{"line":328,"column":62},"end":{"line":328,"column":63}},"loc":{"start":{"line":328,"column":78},"end":{"line":335,"column":9}},"line":328},"57":{"name":"(anonymous_57)","decl":{"start":{"line":329,"column":77},"end":{"line":329,"column":78}},"loc":{"start":{"line":329,"column":97},"end":{"line":334,"column":13}},"line":329},"58":{"name":"(anonymous_58)","decl":{"start":{"line":336,"column":74},"end":{"line":336,"column":75}},"loc":{"start":{"line":336,"column":90},"end":{"line":346,"column":9}},"line":336},"59":{"name":"(anonymous_59)","decl":{"start":{"line":337,"column":78},"end":{"line":337,"column":79}},"loc":{"start":{"line":337,"column":98},"end":{"line":345,"column":13}},"line":337},"60":{"name":"(anonymous_60)","decl":{"start":{"line":347,"column":73},"end":{"line":347,"column":74}},"loc":{"start":{"line":347,"column":89},"end":{"line":354,"column":9}},"line":347},"61":{"name":"(anonymous_61)","decl":{"start":{"line":348,"column":78},"end":{"line":348,"column":79}},"loc":{"start":{"line":348,"column":98},"end":{"line":353,"column":13}},"line":348},"62":{"name":"(anonymous_62)","decl":{"start":{"line":356,"column":22},"end":{"line":356,"column":23}},"loc":{"start":{"line":356,"column":38},"end":{"line":365,"column":5}},"line":356},"63":{"name":"(anonymous_63)","decl":{"start":{"line":364,"column":16},"end":{"line":364,"column":17}},"loc":{"start":{"line":364,"column":22},"end":{"line":364,"column":28}},"line":364}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},{"start":{"line":17,"column":4},"end":{"line":17,"column":131}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},{"start":{"line":17,"column":40},"end":{"line":17,"column":131}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":97}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":97}}],"line":17},"12":{"loc":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"type":"binary-expr","locations":[{"start":{"line":21,"column":23},"end":{"line":21,"column":27}},{"start":{"line":21,"column":31},"end":{"line":21,"column":51}},{"start":{"line":21,"column":56},"end":{"line":23,"column":1}}],"line":21},"13":{"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":61}},"type":"cond-expr","locations":[{"start":{"line":22,"column":37},"end":{"line":22,"column":40}},{"start":{"line":22,"column":43},"end":{"line":22,"column":61}}],"line":22},"14":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":15}},{"start":{"line":22,"column":19},"end":{"line":22,"column":33}}],"line":22}},"s":{"0":1,"1":10,"2":10,"3":10,"4":64,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":10,"18":10,"19":1,"20":1,"21":1,"22":3,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1},"f":{"0":10,"1":64,"2":0,"3":1,"4":0,"5":1,"6":3,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1},"b":{"0":[1,1,1],"1":[1,0],"2":[10,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,1],"8":[1,1],"9":[1,0],"10":[10,0],"11":[10,10],"12":[1,1,1],"13":[0,3],"14":[3,3]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/controllers/product.controller.spec.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/controllers/product.controller.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { applicationPromise } from './../../server';\nimport chai, { expect } from 'chai';\nimport chaiHttp from 'chai-http';\nimport { Application } from 'express';\nimport { User, UserAttributes } from '../../models/user.model';\nimport { Product, ProductAttributes } from '../../models/product.model';\nimport fs from 'fs';\nimport path from 'path';\nimport { ProductImage } from '../../models/productimage.model';\n\n// to run the tests, use the command 'npm run test' in the terminal\n\nchai.use(chaiHttp); // add chai-http to chai\nlet app: Application;\n\nconst product1: ProductAttributes = {\n    productId : 1,\n    productName: 'Schoggi',\n    productDescription: 'E feini Schoggi us Guetemala.',\n    productPrice: 10,\n    productCategory: 'food',\n    productLocation: null,\n    productDelivery: true,\n    uploadDate: new Date(Date.now()),\n    sellDate: null,\n    isApproved: false,\n    isService: false,\n    isRentable: false,\n    isAvailable: true,\n    userId: 1,\n    buyerId: null,\n};\nconst product2: ProductAttributes = {\n    productId : 2,\n    productName: 'Massage',\n    productDescription: 'One hour of thai massage.',\n    productPrice: 120,\n    productCategory: 'service',\n    productLocation: null,\n    productDelivery: false,\n    uploadDate: new Date(Date.now()),\n    sellDate: null,\n    isApproved: true,\n    isService: true,\n    isRentable: false,\n    isAvailable: true,\n    userId: 1,\n    buyerId: null,\n};\n\nconst user1: UserAttributes = {\n    userId: 1,\n    admin: true,\n    wallet: 500,\n    userName: 'admin',\n    password: '$2b$12$XVwWZfAd2fjjd.QjrvMJXOh4WPuxJ4.tpNzkg9wpSSNOShAoDOYWC', // adminPW\n    userMail: 'superAdmin@admins.com',\n    firstName: 'Jack',\n    lastName: 'Hammington',\n    gender: 'male',\n    phoneNumber: 796666666,\n    addressStreet: null,\n    addressPin: null,\n    addressCity: null,\n    addressCountry: 'England',\n    gameScore: 0,\n    activityScore: 0,\n    overallScore: 0\n};\n\nconst product3: ProductAttributes = {\n    productId : 3,\n    productName: 'Formaggio',\n    productDescription: 'Un molto buono formaggio di Ticino.',\n    productPrice: 30,\n    productCategory: 'food',\n    productLocation: null,\n    productDelivery: true,\n    uploadDate: new Date(Date.now()),\n    sellDate: null,\n    isApproved: false,\n    isService: false,\n    isRentable: false,\n    isAvailable: false,\n    userId: 1,\n    buyerId: 2\n};\n\ndescribe('ProductController Test', () => { // bundles the tests related to the ProductController\n    let token: string;\n    before('init app', function(done) { // applicationPromise value must be assigned to app!!!\n        applicationPromise.then(value => {\n            app = value;\n            done();\n        });\n    });\n    describe('Test Post', () => { // bundles the tests related to the post method\n       \n        before('add user to db and create token', function(done) {\n            User.create(user1).then(() => {\n                chai.request(app).post('/user/login').send({\n                    userLogin: 'admin',\n                    password: 'adminPW'\n                }).end(function(err, res) {\n                    token = res.body.token;\n                    done();\n                });\n            });\n        });\n        it('should create a product successfully', function(done) {\n            chai.request(app).post('/products').send({\n                productId : 1,\n                productName: 'Schoggi',\n                productDescription: 'E feini Schoggi us Guetemala.',\n                productPrice: 10,\n                productCategory: 'food',\n                productLocation: null,\n                productDelivery: true,\n                uploadDate: new Date(Date.now()),\n                sellDate: null,\n                isApproved: true,\n                isService: false,\n                isRentable: false,\n                isAvailable: true,\n                userId: 1,\n                buyerId: null,\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.productId).to.be.eq(1);\n                expect(res.body.productName).to.be.eq('Schoggi');\n                expect(res.body.productDescription).to.be.eq('E feini Schoggi us Guetemala.');\n                done();\n            });\n        });\n        it('should upload an image successfully', function(done) {\n            chai.request(app).post('/products/images/upload/1')\n            .set({'Authorization': 'Bearer ' + token})\n            .attach('image', fs.readFileSync( path.join(__dirname, '../../test/test.jpeg')), 'test.jpeg')\n            .end(function(err, res){\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.message).to.be.eq('Successfully uploaded Image with id 1!')\n                done();\n            });\n        });\n        it('should not successfully upload an image due to false format', function(done) {\n            chai.request(app).post('/products/images/upload/1')\n            .set({'Authorization': 'Bearer ' + token})\n            .attach('image', fs.readFileSync( path.join(__dirname, '../../test/test.gif')), 'test.gif')\n            .end(function(err, res){\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(400);\n                expect(res.body.message).to.be.eq('Only .png, .jpg and .jpeg format allowed!')\n                done();\n            });\n        });\n        it('should not successfully upload an image due to no token', function(done) {\n            chai.request(app).post('/products/images/upload/1')\n            .attach('image', fs.readFileSync( path.join(__dirname, '../../test/test.jpeg')), 'test.jpeg')\n            .end(function(err, res){\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(403);\n                expect(res.body.message).to.be.eq('Product does not belong to User')\n                done();\n            });\n        });\n    });\n    describe('Test PUT', () => {\n        it('should successfully update a product', function(done) {\n            chai.request(app).put('/products/1').send({\n                productId : 1,\n                productName: 'Schoggi',\n                productDescription: 'E sehr feini Schoggi us Guetemala.',\n                productPrice: 10,\n                productCategory: 'food',\n                productLocation: null,\n                productDelivery: true,\n                uploadDate: new Date(Date.now()),\n                sellDate: null,\n                isApproved: false,\n                isService: false,\n                isRentable: false,\n                isAvailable: true,\n                userId: 1,\n                buyerId: null,\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.message).to.be.eq('Product 1 successfully updated!');\n                done();\n            });\n        });\n        it('should not successfully update a product if wrong body is sent', function(done) {\n            chai.request(app).put('/products/11').send({\n                null: null\n            })\n            .end(function(err, res){\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(400);\n                expect(res.body.message).to.be.eq('Product with id 11 not found!')\n                done();\n            });\n        });\n    });\n    describe('Test Delete', () => {\n        it('should successfully delete an image', function(done) {\n            chai.request(app).delete('/products/images/1')\n            .end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.message).to.be.eq('Image successfully deleted!');\n                done();\n            });\n        });        \n        it('should successfully delete a product', function(done) {\n            chai.request(app).delete('/products/1')\n            .end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.message).to.be.eq('Product successfully deleted!');\n                done();\n            });\n        });\n        it('should not delete a product that does not exist', function(done) {\n            chai.request(app).delete('/products/18')\n            .end(function(err, res){\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(400);\n                expect(res.body.message).to.be.eq('Product with id 18 not found!')\n                done();\n            });\n        });\n    });\n    describe('Test Get', () => {\n        before('init db with user', function(done) {\n            Product.create(product1).then(() => {\n                Product.create(product2).then(() => {\n                     Product.create(product3);\n                })\n            }).then(() => {\n                    chai.request(app).post('/products/images/upload/1')\n                    .set({'Authorization': 'Bearer ' + token})\n                    .attach('image', fs.readFileSync( path.join(__dirname, '../../test/test.jpeg')), 'test.jpeg')\n                    .end(function(err, res){\n                        done();\n                    });\n                });\n            });\n        it('should successfully get all products', function(done){\n            chai.request(app).get('/products').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].productId).to.be.eq(1);\n                done();\n            }); \n        });\n        it('should successfully get all approved products', function(done){\n            chai.request(app).get('/products/approved').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].productId).to.be.eq(2);\n                done();\n            }); \n        });\n        it('should successfully get all unapproved products', function(done){\n            chai.request(app).get('/products/unapproved').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].productId).to.be.eq(1);\n                done();\n            });\n        });\n        it('should successfully get all products of a category', function(done){\n            chai.request(app).get('/products/category/service').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].productId).to.be.eq(2);\n                done();\n            }); \n        });\n        it('should successfully get all products of a user', function(done){\n            chai.request(app).get('/products/user/1').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[1].productId).to.be.eq(2);\n                done();\n            }); \n        });\n        it('should successfully get a products by id', function(done){\n            chai.request(app).get('/products/2').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.productId).to.be.eq(2);\n                done();\n            });\n        });\n        it('should successfully get all sold products of user', function(done){\n            chai.request(app).get('/products/sold/1').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].productId).to.be.eq(3);\n                done();\n            });\n        });\n        it('should successfully get all bought products of user', function(done){\n            chai.request(app).get('/products/bought/2').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].productId).to.be.eq(3);\n                done();\n            });\n        });\n        it('should successfully get the imageIds of product', function(done){\n            chai.request(app).get('/products/images/getIds/1').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].imageId).to.be.eq(2);\n                done();\n            });\n        });\n        it('should successfully get the image file of the given imageId', function(done){\n            chai.request(app).get('/products/images/getById/2').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res).to.have.header('content-type');\n                expect(res.header['content-type']).to.be.eq('image/jpeg');\n                const size = fs.statSync(path.join(__dirname, '../../test/test.jpeg')).size.toString();\n                expect(res.header['content-length']).to.be.eq(size);\n                done();\n            });\n        });\n        it('should successfully throw an error on a non-existant image', function(done){\n            chai.request(app).get('/products/images/getById/1').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(404);\n                expect(res.body.message).to.be.eq('This image does not exist');\n                done();\n            });\n        });\n    });\n    after('clean up', function(done) {\n        User.destroy({\n            truncate: true,\n            restartIdentity: true\n        });\n        Product.destroy({\n            truncate: true,\n            restartIdentity: true\n        }).then(() => done());\n    });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c026ba1481709158b45b5efd27be3f230a973daa","contentHash":"52a1f7918e6966a592060fc9e3da1246a15756049bd48c6af81c7adfb6580ee0"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/server.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/server.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":53}},"16":{"start":{"line":16,"column":24},"end":{"line":16,"column":57}},"17":{"start":{"line":17,"column":18},"end":{"line":17,"column":53}},"18":{"start":{"line":18,"column":17},"end":{"line":18,"column":51}},"19":{"start":{"line":19,"column":26},"end":{"line":19,"column":66}},"20":{"start":{"line":20,"column":20},"end":{"line":20,"column":40}},"21":{"start":{"line":21,"column":21},"end":{"line":21,"column":51}},"22":{"start":{"line":22,"column":28},"end":{"line":22,"column":65}},"23":{"start":{"line":23,"column":33},"end":{"line":23,"column":80}},"24":{"start":{"line":24,"column":15},"end":{"line":24,"column":47}},"25":{"start":{"line":25,"column":29},"end":{"line":25,"column":72}},"26":{"start":{"line":26,"column":29},"end":{"line":26,"column":67}},"27":{"start":{"line":29,"column":8},"end":{"line":29,"column":45}},"28":{"start":{"line":30,"column":8},"end":{"line":30,"column":45}},"29":{"start":{"line":31,"column":8},"end":{"line":31,"column":51}},"30":{"start":{"line":32,"column":8},"end":{"line":32,"column":53}},"31":{"start":{"line":33,"column":8},"end":{"line":33,"column":59}},"32":{"start":{"line":34,"column":8},"end":{"line":34,"column":67}},"33":{"start":{"line":35,"column":8},"end":{"line":35,"column":69}},"34":{"start":{"line":36,"column":8},"end":{"line":36,"column":47}},"35":{"start":{"line":37,"column":8},"end":{"line":37,"column":53}},"36":{"start":{"line":38,"column":8},"end":{"line":38,"column":61}},"37":{"start":{"line":39,"column":8},"end":{"line":39,"column":63}},"38":{"start":{"line":42,"column":24},"end":{"line":54,"column":9}},"39":{"start":{"line":55,"column":8},"end":{"line":64,"column":148}},"40":{"start":{"line":64,"column":36},"end":{"line":64,"column":146}},"41":{"start":{"line":67,"column":8},"end":{"line":67,"column":42}},"42":{"start":{"line":68,"column":8},"end":{"line":74,"column":9}},"43":{"start":{"line":69,"column":12},"end":{"line":73,"column":15}},"44":{"start":{"line":75,"column":8},"end":{"line":79,"column":11}},"45":{"start":{"line":82,"column":8},"end":{"line":86,"column":11}},"46":{"start":{"line":83,"column":12},"end":{"line":85,"column":15}},"47":{"start":{"line":84,"column":16},"end":{"line":84,"column":81}},"48":{"start":{"line":89,"column":8},"end":{"line":95,"column":11}},"49":{"start":{"line":90,"column":12},"end":{"line":93,"column":13}},"50":{"start":{"line":91,"column":16},"end":{"line":91,"column":44}},"51":{"start":{"line":92,"column":16},"end":{"line":92,"column":35}},"52":{"start":{"line":94,"column":12},"end":{"line":94,"column":31}},"53":{"start":{"line":98,"column":0},"end":{"line":98,"column":24}},"54":{"start":{"line":99,"column":15},"end":{"line":99,"column":27}},"55":{"start":{"line":100,"column":0},"end":{"line":100,"column":48}},"56":{"start":{"line":101,"column":0},"end":{"line":103,"column":1}},"57":{"start":{"line":102,"column":4},"end":{"line":102,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":18},"end":{"line":40,"column":5}},"line":28},"9":{"name":"(anonymous_9)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":22},"end":{"line":65,"column":5}},"line":41},"10":{"name":"(anonymous_10)","decl":{"start":{"line":64,"column":22},"end":{"line":64,"column":23}},"loc":{"start":{"line":64,"column":36},"end":{"line":64,"column":146}},"line":64},"11":{"name":"(anonymous_11)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":25},"end":{"line":80,"column":5}},"line":66},"12":{"name":"(anonymous_12)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":12},"end":{"line":87,"column":5}},"line":81},"13":{"name":"(anonymous_13)","decl":{"start":{"line":82,"column":35},"end":{"line":82,"column":36}},"loc":{"start":{"line":82,"column":41},"end":{"line":86,"column":9}},"line":82},"14":{"name":"(anonymous_14)","decl":{"start":{"line":83,"column":42},"end":{"line":83,"column":43}},"loc":{"start":{"line":83,"column":48},"end":{"line":85,"column":13}},"line":83},"15":{"name":"(anonymous_15)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":16},"end":{"line":96,"column":5}},"line":88},"16":{"name":"(anonymous_16)","decl":{"start":{"line":89,"column":47},"end":{"line":89,"column":48}},"loc":{"start":{"line":89,"column":60},"end":{"line":95,"column":9}},"line":89}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":29,"column":20},"end":{"line":29,"column":44}},"type":"binary-expr","locations":[{"start":{"line":29,"column":20},"end":{"line":29,"column":36}},{"start":{"line":29,"column":40},"end":{"line":29,"column":44}}],"line":29},"9":{"loc":{"start":{"line":68,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":74,"column":9}},{"start":{"line":68,"column":8},"end":{"line":74,"column":9}}],"line":68},"10":{"loc":{"start":{"line":90,"column":12},"end":{"line":93,"column":13}},"type":"if","locations":[{"start":{"line":90,"column":12},"end":{"line":93,"column":13}},{"start":{"line":90,"column":12},"end":{"line":93,"column":13}}],"line":90},"11":{"loc":{"start":{"line":101,"column":0},"end":{"line":103,"column":1}},"type":"if","locations":[{"start":{"line":101,"column":0},"end":{"line":103,"column":1}},{"start":{"line":101,"column":0},"end":{"line":103,"column":1}}],"line":101}},"s":{"0":1,"1":1,"2":0,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":2,"11":1,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":0,"41":1,"42":1,"43":1,"44":0,"45":0,"46":0,"47":0,"48":1,"49":1,"50":1,"51":1,"52":0,"53":1,"54":1,"55":1,"56":1,"57":0},"f":{"0":1,"1":1,"2":0,"3":1,"4":1,"5":0,"6":2,"7":3,"8":1,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":1,"16":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[0,3],"7":[3,3],"8":[1,1],"9":[1,0],"10":[1,0],"11":[0,1]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/server.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/server.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,0DAAiD;AACjD,sDAAmE;AACnE,oDAA4B;AAC5B,mEAA+D;AAC/D,yCAAsC;AACtC,oDAA2C;AAC3C,kEAAyD;AACzD,iFAA6E;AAC7E,gDAAwB;AACxB,yEAAqE;AACrE,oEAA2D;AAE3D,MAAa,MAAM;IAKf;QAFQ,SAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;QAGpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACrC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAG3C,iBAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAChC,uBAAO,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACnC,+BAAW,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,iCAAY,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,iBAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,uBAAO,CAAC,kBAAkB,EAAE,CAAC;QAC7B,+BAAW,CAAC,kBAAkB,EAAE,CAAC;QACjC,iCAAY,CAAC,kBAAkB,EAAE,CAAC;IACtC,CAAC;IAEO,eAAe;QAEnB,MAAM,OAAO,GAAqB;YAC9B,cAAc,EAAE;gBACZ,QAAQ;gBACR,kBAAkB;gBAClB,cAAc;gBACd,QAAQ;gBACR,gBAAgB;aACnB;YACD,WAAW,EAAE,IAAI;YACjB,OAAO,EAAE,wCAAwC;YACjD,MAAM,EAAE,oBAAoB,IAAI,CAAC,IAAI,EAAE;YACvC,iBAAiB,EAAE,KAAK;SAC3B,CAAC;QAEF,OAAO,iBAAO,EAAE;aACX,GAAG,CAAC,cAAI,EAAE,CAAC;aACX,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC;aACnB,GAAG,CAAC,gBAAM,CAAC,MAAM,CAAC,CAAC;aACnB,GAAG,CAAC,OAAO,EAAE,gCAAc,CAAC;aAC5B,GAAG,CAAC,WAAW,EAAE,sCAAiB,CAAC;aACnC,GAAG,CAAC,cAAc,EAAE,8CAAqB,CAAC;aAC1C,OAAO,CAAC,GAAG,EAAE,cAAI,CAAC,OAAO,CAAC,CAAC;aAC3B,GAAG,CAAC,iBAAO,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;aAEnC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,oGAAoG,CAAC,CAAC,CAAC;IAChJ,CAAC;IAEO,kBAAkB;QACtB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAClC,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM,EAAE;YACjC,OAAO,IAAI,qBAAS,CAAC;gBACjB,OAAO,EAAE,QAAQ;gBACjB,OAAO,EAAE,UAAU;gBACnB,OAAO,EAAE,KAAK;aACjB,CAAC,CAAC;SACN;QACD,OAAO,IAAI,qBAAS,CAAC;YACjB,OAAO,EAAE,QAAQ;YACjB,OAAO,EAAE,WAAW;YACpB,OAAO,EAAE,KAAK;SACjB,CAAC,CAAC;IACP,CAAC;IAEM,KAAK;QACR,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YAC5B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE;gBAC/B,OAAO,CAAC,GAAG,CAAC,wCAAwC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEY,SAAS;;YAClB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM,EAAE;gBACjC,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;gBAC5B,OAAO,IAAI,CAAC,MAAM,CAAC;aACtB;YACD,OAAO,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;KAAA;CAEJ;AAjFD,wBAiFC;AAED,MAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;AAEf,QAAA,kBAAkB,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;AAErD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,OAAO,EAAE;IAClC,MAAM,CAAC,KAAK,EAAE,CAAC;CAClB","sourcesContent":["import { Product } from './models/product.model';\nimport express, { Application , Request, Response } from 'express';\nimport morgan from 'morgan';\nimport { UserController } from './controllers/user.controller';\nimport { Sequelize } from 'sequelize';\nimport { User } from './models/user.model';\nimport { Transaction } from './models/transaction.model';\nimport { TransactionController } from './controllers/transaction.controller';\nimport cors from 'cors';\nimport { ProductController } from './controllers/product.controller';\nimport { ProductImage } from './models/productimage.model';\n\nexport class Server {\n    private server: Application;\n    private sequelize: Sequelize;\n    private port = process.env.PORT || 3000;\n\n    constructor() {\n        this.server = this.configureServer();\n        this.sequelize = this.configureSequelize();\n\n        // create tables (if they do not already exist)\n        User.initialize(this.sequelize);\n        Product.initialize(this.sequelize);\n        Transaction.initialize(this.sequelize);\n        ProductImage.initialize(this.sequelize);\n        User.createAssociations();\n        Product.createAssociations();\n        Transaction.createAssociations();\n        ProductImage.createAssociations();\n    }\n\n    private configureServer(): Application {\n        // options for cors middleware\n        const options: cors.CorsOptions = {\n            allowedHeaders: [\n                'Origin',\n                'X-Requested-With',\n                'Content-Type',\n                'Accept',\n                'X-Access-Token',\n            ],\n            credentials: true,\n            methods: 'GET,HEAD,OPTIONS,PUT,PATCH,POST,DELETE',\n            origin: `http://localhost:${this.port}`,\n            preflightContinue: false,\n        };\n\n        return express()\n            .use(cors())\n            .use(express.json())                    // parses an incoming json to an object\n            .use(morgan('tiny'))                    // logs incoming requests\n            .use('/user', UserController)\n            .use('/products', ProductController)\n            .use('/transaction', TransactionController)\n            .options('*', cors(options))\n            .use(express.static('./src/public'))\n            // this is the message you get if you open http://localhost:3000/ when the server is running\n            .get('/', (req, res) => res.send('<h1>Welcome to the ESE-2020 Backend Scaffolding <span style=\"font-size:50px\">&#127881;</span></h1>'));\n    }\n\n    private configureSequelize(): Sequelize {\n        console.log(process.env.NODE_ENV);\n        if (process.env.NODE_ENV === 'test') {\n            return new Sequelize({\n                dialect: 'sqlite',\n                storage: ':memory:',\n                logging: false\n            });\n        }\n        return new Sequelize({\n            dialect: 'sqlite',\n            storage: 'db.sqlite',\n            logging: false // can be set to true for debugging\n        });\n    }\n\n    public start() {\n        this.sequelize.sync().then(() => {                           // create connection to the database\n            this.server.listen(this.port, () => {                                   // start server on specified port\n                console.log(`server listening at http://localhost:${this.port}`);   // indicate that the server has started\n            });\n        });\n    }\n\n    public async getServer() {\n        if (process.env.NODE_ENV === 'test') {\n            await this.sequelize.sync();\n            return this.server;\n        }\n        return this.server;\n    }\n\n}\n\nconst server = new Server();\n\nexport const applicationPromise = server.getServer(); // for test purposes only\n\nif (process.env.NODE_ENV === 'local') {\n    server.start(); // starts the server\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"266b65eab02c6fffed3bfd6f083e81153e0e344e","contentHash":"292e211db287327992554dd9b9acb4671d0568a017e091bfa5a2d6e7e240f477"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/product.model.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/product.model.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":40}},"4":{"start":{"line":6,"column":28},"end":{"line":6,"column":58}},"5":{"start":{"line":7,"column":29},"end":{"line":7,"column":60}},"6":{"start":{"line":10,"column":8},"end":{"line":73,"column":53}},"7":{"start":{"line":76,"column":8},"end":{"line":81,"column":11}},"8":{"start":{"line":82,"column":8},"end":{"line":85,"column":11}},"9":{"start":{"line":86,"column":8},"end":{"line":89,"column":11}},"10":{"start":{"line":92,"column":0},"end":{"line":92,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":33},"end":{"line":74,"column":5}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":32},"end":{"line":90,"column":5}},"line":75}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/product.model.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/product.model.ts"],"names":[],"mappings":";;;AAAA,6CAAoC;AACpC,yCAAkE;AAClE,2DAAiD;AACjD,6DAAoD;AAsBpD,MAAa,OAAQ,SAAQ,iBAAmD;IAiBrE,MAAM,CAAC,UAAU,CAAC,SAAoB;QACzC,OAAO,CAAC,IAAI,CAAC;YACT,SAAS,EAAE;gBACP,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,aAAa,EAAE,IAAI;gBACnB,UAAU,EAAE,IAAI;aACnB;YACD,WAAW,EAAE;gBACT,IAAI,EAAE,qBAAS,CAAC,MAAM;gBACtB,SAAS,EAAE,KAAK;aACnB;YACD,kBAAkB,EAAE;gBAChB,IAAI,EAAE,qBAAS,CAAC,IAAI;aACvB;YACD,YAAY,EAAE;gBACV,IAAI,EAAE,qBAAS,CAAC,MAAM;gBACtB,SAAS,EAAE,KAAK;aACnB;YACD,eAAe,EAAE;gBACb,IAAI,EAAE,qBAAS,CAAC,MAAM;gBACtB,SAAS,EAAE,KAAK;aACnB;YACD,eAAe,EAAE;gBACb,IAAI,EAAE,qBAAS,CAAC,MAAM;aACzB;YACD,eAAe,EAAE;gBACb,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,YAAY,EAAE,KAAK;gBACnB,SAAS,EAAE,KAAK;aACnB;YACD,UAAU,EAAE;gBACR,IAAI,EAAE,qBAAS,CAAC,IAAI;gBACpB,SAAS,EAAE,KAAK;aACnB;YACD,QAAQ,EAAE;gBACN,IAAI,EAAE,qBAAS,CAAC,IAAI;aACvB;YACD,UAAU,EAAE;gBACR,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,YAAY,EAAE,KAAK;gBACnB,SAAS,EAAE,KAAK;aACnB;YACD,SAAS,EAAE;gBACP,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,YAAY,EAAE,KAAK;gBACnB,SAAS,EAAE,KAAK;aACnB;YACD,UAAU,EAAE;gBACR,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,YAAY,EAAE,KAAK;gBACnB,SAAS,EAAE,KAAK;aACnB;YACD,WAAW,EAAE;gBACT,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,YAAY,EAAE,IAAI;gBAClB,SAAS,EAAE,KAAK;aACnB;YACD,MAAM,EAAE;gBACJ,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,SAAS,EAAE,KAAK;aACnB;YACD,OAAO,EAAE;gBACL,IAAI,EAAE,qBAAS,CAAC,OAAO;aAC1B;SACJ,EACD,EAAE,SAAS,EAAE,SAAS,EAAE,cAAc,EAAE,CACvC,CAAC;IAEN,CAAC;IAEM,MAAM,CAAC,kBAAkB;QAC5B,OAAO,CAAC,SAAS,CAAC,iBAAI,EAAE;YACpB,EAAE,EAAG,MAAM;YACX,UAAU,EAAE,QAAQ;YACpB,SAAS,EAAE,QAAQ;YACnB,QAAQ,EAAE,SAAS;SACtB,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,CAAC,+BAAW,EAAE;YACzB,EAAE,EAAE,cAAc;YAClB,UAAU,EAAE,WAAW;SAC1B,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,CAAC,iCAAY,EAAE;YAC1B,EAAE,EAAE,eAAe;YACnB,UAAU,EAAE,WAAW;SAC1B,CAAC,CAAC;IACP,CAAC;CACJ;AAvGD,0BAuGC","sourcesContent":["import { User } from './user.model';\nimport { Optional, Model, Sequelize, DataTypes } from 'sequelize';\nimport { Transaction} from './transaction.model';\nimport { ProductImage } from './productimage.model';\n\nexport interface ProductAttributes {\n    productId: number;\n    productName: string;\n    productDescription: string;\n    productPrice: number;\n    productCategory: string;\n    productLocation: string;\n    productDelivery: boolean;\n    uploadDate: Date;\n    sellDate: Date;\n    isApproved: boolean;\n    isService: boolean;\n    isRentable: boolean;\n    isAvailable: boolean;\n    userId: number;\n    buyerId: number;\n}\n\nexport interface ProductCreationAttributes extends Optional<ProductAttributes, 'productId'> { }\n\nexport class Product extends Model<ProductAttributes, ProductCreationAttributes> implements ProductAttributes {\n    productId!: number;\n    productName!: string;\n    productDescription!: string;\n    productPrice!: number;\n    productCategory!: string;\n    productLocation!: string;\n    productDelivery: boolean;\n    uploadDate!: Date;\n    sellDate!: Date;\n    isApproved!: boolean;\n    isService!: boolean;\n    isRentable!: boolean;\n    isAvailable!: boolean;\n    userId!: number;\n    buyerId!: number;\n\n    public static initialize(sequelize: Sequelize) {\n        Product.init({\n            productId: {\n                type: DataTypes.INTEGER,\n                autoIncrement: true,\n                primaryKey: true\n            },\n            productName: {\n                type: DataTypes.STRING,\n                allowNull: false\n            },\n            productDescription: {\n                type: DataTypes.TEXT\n            },\n            productPrice: {\n                type: DataTypes.NUMBER,\n                allowNull: false\n            },\n            productCategory: {\n                type: DataTypes.STRING,\n                allowNull: false\n            },\n            productLocation: {\n                type: DataTypes.STRING\n            },\n            productDelivery: {\n                type: DataTypes.BOOLEAN,\n                defaultValue: false,\n                allowNull: false\n            },\n            uploadDate: {\n                type: DataTypes.DATE,\n                allowNull: false\n            },\n            sellDate: {\n                type: DataTypes.DATE\n            },\n            isApproved: {\n                type: DataTypes.BOOLEAN,\n                defaultValue: false,\n                allowNull: false\n            },\n            isService: {\n                type: DataTypes.BOOLEAN,\n                defaultValue: false,\n                allowNull: false\n            },\n            isRentable: {\n                type: DataTypes.BOOLEAN,\n                defaultValue: false,\n                allowNull: false\n            },\n            isAvailable: {\n                type: DataTypes.BOOLEAN,\n                defaultValue: true,\n                allowNull: false\n            },\n            userId: {\n                type: DataTypes.INTEGER,\n                allowNull: false\n            },\n            buyerId: {\n                type: DataTypes.INTEGER\n            }\n        },\n        { sequelize, tableName: 'productTable' }\n        );\n\n    }\n\n    public static createAssociations() {\n        Product.belongsTo(User, {\n            as : 'user',\n            foreignKey: 'userId',\n            targetKey: 'userId',\n            onDelete: 'cascade'\n        });\n        Product.hasMany(Transaction, {\n            as: 'transactions',\n            foreignKey: 'productId'\n        });\n        Product.hasMany(ProductImage, {\n            as: 'productImages',\n            foreignKey: 'productId'\n        });\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2a17772da27be59bd5fbfc93a64d80d0c045d744","contentHash":"03681fc85e79e2f876724ebf0ed989ffacf0184da9a504ff43ce1a1dfbd43dc5"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/user.model.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/user.model.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":40}},"4":{"start":{"line":8,"column":8},"end":{"line":85,"column":11}},"5":{"start":{"line":88,"column":8},"end":{"line":91,"column":11}},"6":{"start":{"line":94,"column":0},"end":{"line":94,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":33},"end":{"line":86,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":32},"end":{"line":92,"column":5}},"line":87}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/user.model.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/user.model.ts"],"names":[],"mappings":";;;AAAA,mDAA0C;AAC1C,yCAAkE;AAuClE,MAAa,IAAK,SAAQ,iBAA6C;IAoB5D,MAAM,CAAC,UAAU,CAAC,SAAoB;QACzC,IAAI,CAAC,IAAI,CAAC;YACN,MAAM,EAAE;gBACJ,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,aAAa,EAAE,IAAI;gBACnB,UAAU,EAAE,IAAI;aACnB;YACD,KAAK,EAAE;gBACH,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,YAAY,EAAE,KAAK;gBACnB,SAAS,EAAE,KAAK;aACnB;YACD,MAAM,EAAE;gBACJ,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,YAAY,EAAE,GAAG;aACpB;YACD,QAAQ,EAAE;gBACN,IAAI,EAAE,qBAAS,CAAC,MAAM;gBACtB,SAAS,EAAE,KAAK;aACnB;YACD,QAAQ,EAAE;gBACN,IAAI,EAAE,qBAAS,CAAC,MAAM;gBACtB,SAAS,EAAE,KAAK;aACnB;YACD,QAAQ,EAAE;gBACN,IAAI,EAAE,qBAAS,CAAC,MAAM;gBACtB,SAAS,EAAE,KAAK;aACnB;YACD,SAAS,EAAE;gBACP,IAAI,EAAE,qBAAS,CAAC,MAAM;gBACtB,SAAS,EAAE,KAAK;aACnB;YACD,QAAQ,EAAE;gBACN,IAAI,EAAE,qBAAS,CAAC,MAAM;gBACtB,SAAS,EAAE,KAAK;aACnB;YACD,MAAM,EAAE;gBACJ,IAAI,EAAE,qBAAS,CAAC,MAAM;gBACtB,SAAS,EAAE,IAAI;aAClB;YACD,WAAW,EAAE;gBACT,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,SAAS,EAAE,IAAI;aAClB;YACD,aAAa,EAAE;gBACX,IAAI,EAAE,qBAAS,CAAC,MAAM;gBACtB,SAAS,EAAE,IAAI;aAClB;YACD,UAAU,EAAE;gBACR,IAAI,EAAE,qBAAS,CAAC,MAAM;gBACtB,SAAS,EAAE,IAAI;aAClB;YACD,WAAW,EAAE;gBACT,IAAI,EAAE,qBAAS,CAAC,MAAM;gBACtB,SAAS,EAAE,IAAI;aAClB;YACD,cAAc,EAAE;gBACZ,IAAI,EAAE,qBAAS,CAAC,MAAM;gBACtB,SAAS,EAAE,IAAI;aAClB;YACD,SAAS,EAAE;gBACP,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,SAAS,EAAE,KAAK;gBAChB,YAAY,EAAE,CAAC;aAClB;YACD,aAAa,EAAE;gBACX,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,SAAS,EAAE,KAAK;gBAChB,YAAY,EAAE,CAAC;aAClB;YACD,YAAY,EAAE;gBACV,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,SAAS,EAAE,KAAK;gBAChB,YAAY,EAAE,CAAC;aAClB;SAEJ,EACG;YACI,SAAS;YACT,SAAS,EAAE,OAAO;SACrB,CACJ,CAAC;IACN,CAAC;IAUM,MAAM,CAAC,kBAAkB;QAC5B,IAAI,CAAC,OAAO,CAAC,uBAAO,EAAE;YAClB,EAAE,EAAE,UAAU;YACd,UAAU,EAAE,QAAQ;SACvB,CAAC,CAAC;IACP,CAAC;CACJ;AAtHD,oBAsHC","sourcesContent":["import { Product } from './product.model';\nimport { Optional, Model, Sequelize, DataTypes } from 'sequelize';\n\n\nexport interface UserAttributes {\n    userId: number;\n    admin: boolean;\n    wallet: number;\n    userName: string;\n    password: string;\n    userMail: string;\n    firstName: string;\n    lastName: string;\n    gender: string;\n    phoneNumber: number;\n    addressStreet: string;\n    addressPin: string;\n    addressCity: string;\n    addressCountry: string;\n    gameScore: number;\n    activityScore: number;\n    overallScore: number;\n}\n\nexport interface UserEditingAttributes {\n    userId: number;\n    userName: string;\n    userMail: string;\n    firstName: string;\n    lastName: string;\n    gender: string;\n    phoneNumber: number;\n    addressStreet: string;\n    addressPin: string;\n    addressCity: string;\n    addressCountry: string;\n}\n\nexport interface UserCreationAttributes extends Optional<UserAttributes, 'userId'> { }\n\nexport class User extends Model<UserAttributes, UserCreationAttributes> implements UserAttributes {\n    userId!: number;\n    admin!: boolean;\n    wallet!: number;\n    userName!: string;\n    password!: string;\n    userMail!: string;\n    firstName!: string;\n    lastName!: string;\n    gender!: string;\n    phoneNumber!: number;\n    addressStreet!: string;\n    addressPin!: string;\n    addressCity!: string;\n    addressCountry!: string;\n    gameScore!: number;\n    activityScore!: number;\n    overallScore!: number;\n\n\n    public static initialize(sequelize: Sequelize) {\n        User.init({\n            userId: {\n                type: DataTypes.INTEGER,\n                autoIncrement: true,\n                primaryKey: true\n            },\n            admin: {\n                type: DataTypes.BOOLEAN,\n                defaultValue: false,\n                allowNull: false\n            },\n            wallet: {\n                type: DataTypes.INTEGER,\n                defaultValue: 500,\n            },\n            userName: {\n                type: DataTypes.STRING,\n                allowNull: false\n            },\n            password: {\n                type: DataTypes.STRING,\n                allowNull: false\n            },\n            userMail: {\n                type: DataTypes.STRING,\n                allowNull: false\n            },\n            firstName: {\n                type: DataTypes.STRING,\n                allowNull: false\n            },\n            lastName: {\n                type: DataTypes.STRING,\n                allowNull: false\n            },\n            gender: {\n                type: DataTypes.STRING,\n                allowNull: true\n            },\n            phoneNumber: {\n                type: DataTypes.INTEGER,\n                allowNull: true\n            },\n            addressStreet: {\n                type: DataTypes.STRING,\n                allowNull: true\n            },\n            addressPin: {\n                type: DataTypes.STRING,\n                allowNull: true\n            },\n            addressCity: {\n                type: DataTypes.STRING,\n                allowNull: true\n            },\n            addressCountry: {\n                type: DataTypes.STRING,\n                allowNull: true\n            },\n            gameScore: {\n                type: DataTypes.INTEGER,\n                allowNull: false,\n                defaultValue: 1\n            },\n            activityScore: {\n                type: DataTypes.INTEGER,\n                allowNull: false,\n                defaultValue: 0\n            },\n            overallScore: {\n                type: DataTypes.INTEGER,\n                allowNull: false,\n                defaultValue: 0\n            }\n\n        },\n            {\n                sequelize,\n                tableName: 'users'\n            }\n        );\n    }\n\n    /*\n    public static calculateOverallScore(gameScore: number, activityScore: number) {\n        User.rawAttributes;\n        const overallScore = gameScore + activityScore;\n        return overallScore;\n    }\n    */\n\n    public static createAssociations() {\n        User.hasMany(Product, {\n            as: 'products',\n            foreignKey: 'userId'\n        });\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"651d0d52d59efdc639352e4d9aa6a52e4bb322eb","contentHash":"261678087faa78bc9d0e40d4047f280ca94a8a77d63df3d74a285e2d8dc80e4c"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/transaction.model.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/transaction.model.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":44}},"4":{"start":{"line":6,"column":20},"end":{"line":6,"column":40}},"5":{"start":{"line":9,"column":8},"end":{"line":53,"column":11}},"6":{"start":{"line":56,"column":8},"end":{"line":61,"column":11}},"7":{"start":{"line":62,"column":8},"end":{"line":66,"column":11}},"8":{"start":{"line":67,"column":8},"end":{"line":71,"column":11}},"9":{"start":{"line":74,"column":0},"end":{"line":74,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":33},"end":{"line":54,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":55,"column":4},"end":{"line":55,"column":5}},"loc":{"start":{"line":55,"column":32},"end":{"line":72,"column":5}},"line":55}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/transaction.model.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/transaction.model.ts"],"names":[],"mappings":";;;AAAA,mDAA0C;AAC1C,6CAAoC;AACpC,yCAA+E;AAmB/E,MAAa,WAAY,SAAQ,iBAA2D;IAyBjF,MAAM,CAAC,UAAU,CAAC,SAAoB;QACzC,WAAW,CAAC,IAAI,CAAC;YACb,aAAa,EAAE;gBACX,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,aAAa,EAAE,IAAI;gBACnB,UAAU,EAAE,IAAI;aACnB;YACD,SAAS,EAAE;gBACP,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,SAAS,EAAE,KAAK;aACnB;YACD,MAAM,EAAE;gBACJ,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,SAAS,EAAE,KAAK;aACnB;YACD,OAAO,EAAE;gBACL,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,SAAS,EAAE,KAAK;aACnB;YACD,iBAAiB,EAAE;gBACf,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,YAAY,EAAE,CAAC;gBACf,SAAS,EAAE,KAAK;aACnB;YACD,iBAAiB,EAAE;gBACf,IAAI,EAAE,qBAAS,CAAC,MAAM;aACzB;YACD,gBAAgB,EAAE;gBACd,IAAI,EAAE,qBAAS,CAAC,MAAM;aACzB;YACD,cAAc,EAAE;gBACZ,IAAI,EAAE,qBAAS,CAAC,MAAM;aACzB;YACD,WAAW,EAAE;gBACT,IAAI,EAAE,qBAAS,CAAC,MAAM;aACzB;YACD,YAAY,EAAE;gBACV,IAAI,EAAE,qBAAS,CAAC,MAAM;aACzB;YACD,eAAe,EAAE;gBACb,IAAI,EAAE,qBAAS,CAAC,MAAM;aACzB;SACJ,EACG;YACI,SAAS;YACT,SAAS,EAAE,kBAAkB;SAChC,CACJ,CAAC;IACN,CAAC;IAEM,MAAM,CAAC,kBAAkB;QAC5B,WAAW,CAAC,SAAS,CAAC,uBAAO,EAAE;YAC3B,EAAE,EAAG,SAAS;YACd,UAAU,EAAE,WAAW;YACvB,SAAS,EAAE,WAAW;YACtB,QAAQ,EAAE,SAAS;SACtB,CAAC,CAAC;QAEH,WAAW,CAAC,SAAS,CAAC,iBAAI,EAAE;YACxB,EAAE,EAAE,QAAQ;YACZ,UAAU,EAAE,QAAQ;YACpB,SAAS,EAAE,QAAQ;SACtB,CAAC,CAAC;QAEH,WAAW,CAAC,SAAS,CAAC,iBAAI,EAAE;YACxB,EAAE,EAAE,OAAO;YACX,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,QAAQ;SACtB,CAAC,CAAC;IAEP,CAAC;CAEJ;AAjGD,kCAiGC","sourcesContent":["import { Product } from './product.model';\nimport { User } from './user.model';\nimport { Optional, Model, Sequelize, DataTypes, Association } from 'sequelize';\n\n\nexport interface TransactionAttributes {\n    transactionId: number;\n    productId: number;\n    userId: number;\n    buyerId: number;\n    transactionStatus: number;\n    deliveryFirstName: string;\n    deliveryLastName: string;\n    deliveryStreet: string;\n    deliveryPin: string;\n    deliveryCity: string;\n    deliveryCountry: string;\n}\n\nexport interface TransactionCreationAttributes extends Optional<TransactionAttributes, 'transactionId'> {}\n\nexport class Transaction extends Model<TransactionAttributes, TransactionCreationAttributes> implements TransactionAttributes {\n\n    public static associations: {\n        product: Association<Transaction, Product>;\n        seller: Association<Transaction, User>;\n        buyer: Association<Transaction, User>;\n    };\n\n    transactionId!: number;\n    productId!: number;\n    userId!: number;\n    buyerId!: number;\n    transactionStatus!: number;\n    deliveryFirstName!: string;\n    deliveryLastName!: string;\n    deliveryStreet!: string;\n    deliveryPin!: string;\n    deliveryCity!: string;\n    deliveryCountry!: string;\n\n    public readonly product?: Product;\n    public readonly seller?: User;\n    public readonly buyer?: User;\n\n\n    public static initialize(sequelize: Sequelize) {\n        Transaction.init({\n            transactionId: {\n                type: DataTypes.INTEGER,\n                autoIncrement: true,\n                primaryKey: true\n            },\n            productId: {\n                type: DataTypes.INTEGER,\n                allowNull: false\n            },\n            userId: {\n                type: DataTypes.INTEGER,\n                allowNull: false\n            },\n            buyerId: {\n                type: DataTypes.INTEGER,\n                allowNull: false\n            },\n            transactionStatus: {\n                type: DataTypes.INTEGER,\n                defaultValue: 1,\n                allowNull: false\n            },\n            deliveryFirstName: {\n                type: DataTypes.STRING\n            },\n            deliveryLastName: {\n                type: DataTypes.STRING,\n            },\n            deliveryStreet: {\n                type: DataTypes.STRING\n            },\n            deliveryPin: {\n                type: DataTypes.STRING\n            },\n            deliveryCity: {\n                type: DataTypes.STRING\n            },\n            deliveryCountry: {\n                type: DataTypes.STRING\n            }\n        },\n            {\n                sequelize,\n                tableName: 'transactionTable'\n            }\n        );\n    }\n\n    public static createAssociations() {\n        Transaction.belongsTo(Product, {\n            as : 'product',\n            foreignKey: 'productId',\n            targetKey: 'productId',\n            onDelete: 'cascade'\n        });\n\n        Transaction.belongsTo(User, {\n            as: 'seller',\n            foreignKey: 'userId',\n            targetKey: 'userId'\n        });\n\n        Transaction.belongsTo(User, {\n            as: 'buyer',\n            foreignKey: 'buyerId',\n            targetKey: 'userId'\n        });\n\n    }\n\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"712c0c8f633f0e95d5a4b4ea806bb0fd338b1389","contentHash":"e6639f31306cdf2f6c4975580a659d0f1b8eae2e49469967256369e61f6d6d07"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/productimage.model.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/productimage.model.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":40}},"4":{"start":{"line":8,"column":8},"end":{"line":27,"column":58}},"5":{"start":{"line":30,"column":8},"end":{"line":35,"column":11}},"6":{"start":{"line":38,"column":0},"end":{"line":38,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":33},"end":{"line":28,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":32},"end":{"line":36,"column":5}},"line":29}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/productimage.model.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/models/productimage.model.ts"],"names":[],"mappings":";;;AAAA,mDAA0C;AAC1C,yCAAkE;AAkBlE,MAAa,YAAa,SAAQ,iBAA+C;IAOtE,MAAM,CAAC,UAAU,CAAC,SAAoB;QACzC,YAAY,CAAC,IAAI,CAAC;YACd,OAAO,EAAE;gBACL,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,aAAa,EAAE,IAAI;gBACnB,UAAU,EAAE,IAAI;aACnB;YACD,SAAS,EAAE;gBACP,IAAI,EAAE,qBAAS,CAAC,MAAM;aACzB;YACD,SAAS,EAAE;gBACP,IAAI,EAAE,qBAAS,CAAC,MAAM;aACzB;YACD,IAAI,EAAE;gBACF,IAAI,EAAE,qBAAS,CAAC,IAAI,CAAC,MAAM,CAAC;aAC/B;YACD,SAAS,EAAE;gBACP,IAAI,EAAE,qBAAS,CAAC,OAAO;gBACvB,SAAS,EAAE,KAAK;aACnB;SACJ,EACD,EAAE,SAAS,EAAE,SAAS,EAAE,mBAAmB,EAAE,CAC5C,CAAC;IAEN,CAAC;IAEM,MAAM,CAAC,kBAAkB;QAC5B,YAAY,CAAC,SAAS,CAAC,uBAAO,EAAE;YAC5B,EAAE,EAAG,SAAS;YACd,UAAU,EAAE,WAAW;YACvB,SAAS,EAAE,WAAW;YACtB,QAAQ,EAAE,SAAS;SACtB,CAAC,CAAC;IAEP,CAAC;CACJ;AA1CD,oCA0CC","sourcesContent":["import { Product } from './product.model';\nimport { Optional, Model, Sequelize, DataTypes } from 'sequelize';\n\n\nexport interface ImageAttributes {\n    imageId: number;\n    imageType: string;\n    imageName: string;\n    data: Blob;\n    productId: number;\n}\n\nexport interface ImageGetAttributes {\n    filename: string;\n    path: string;\n}\n\nexport interface ImageCreationAttributes extends Optional<ImageAttributes, 'imageId'> { }\n\nexport class ProductImage extends Model<ImageAttributes, ImageCreationAttributes> implements ImageAttributes {\n    imageId!: number;\n    imageType!: string;\n    imageName!: string;\n    data!: Blob;\n    productId!: number;\n\n    public static initialize(sequelize: Sequelize) {\n        ProductImage.init({\n            imageId: {\n                type: DataTypes.INTEGER,\n                autoIncrement: true,\n                primaryKey: true\n            },\n            imageType: {\n                type: DataTypes.STRING,\n            },\n            imageName: {\n                type: DataTypes.STRING\n            },\n            data: {\n                type: DataTypes.BLOB('long')\n            },\n            productId: {\n                type: DataTypes.INTEGER,\n                allowNull: false\n            },\n        },\n        { sequelize, tableName: 'productImageTable' }\n        );\n\n    }\n\n    public static createAssociations() {\n        ProductImage.belongsTo(Product, {\n            as : 'product',\n            foreignKey: 'productId',\n            targetKey: 'productId',\n            onDelete: 'cascade'\n        });\n\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dc85bb3d196bd5f68937245be6779b548d38875a","contentHash":"b37ae124914c430eb5a70539fbba11929fc1e8af4bf1950367799dc117d69ec2"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/controllers/user.controller.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/controllers/user.controller.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":53}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":58}},"6":{"start":{"line":9,"column":20},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":23},"end":{"line":10,"column":49}},"8":{"start":{"line":11,"column":20},"end":{"line":11,"column":52}},"9":{"start":{"line":12,"column":0},"end":{"line":14,"column":3}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":116}},"11":{"start":{"line":13,"column":54},"end":{"line":13,"column":74}},"12":{"start":{"line":13,"column":89},"end":{"line":13,"column":114}},"13":{"start":{"line":15,"column":0},"end":{"line":17,"column":3}},"14":{"start":{"line":16,"column":4},"end":{"line":16,"column":103}},"15":{"start":{"line":16,"column":46},"end":{"line":16,"column":61}},"16":{"start":{"line":16,"column":76},"end":{"line":16,"column":101}},"17":{"start":{"line":18,"column":0},"end":{"line":20,"column":3}},"18":{"start":{"line":19,"column":4},"end":{"line":19,"column":106}},"19":{"start":{"line":19,"column":50},"end":{"line":19,"column":64}},"20":{"start":{"line":19,"column":79},"end":{"line":19,"column":104}},"21":{"start":{"line":21,"column":0},"end":{"line":23,"column":3}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":96}},"23":{"start":{"line":22,"column":39},"end":{"line":22,"column":54}},"24":{"start":{"line":22,"column":69},"end":{"line":22,"column":94}},"25":{"start":{"line":24,"column":0},"end":{"line":27,"column":3}},"26":{"start":{"line":25,"column":15},"end":{"line":25,"column":49}},"27":{"start":{"line":26,"column":4},"end":{"line":26,"column":103}},"28":{"start":{"line":26,"column":47},"end":{"line":26,"column":61}},"29":{"start":{"line":26,"column":76},"end":{"line":26,"column":101}},"30":{"start":{"line":28,"column":0},"end":{"line":42,"column":3}},"31":{"start":{"line":29,"column":15},"end":{"line":29,"column":49}},"32":{"start":{"line":30,"column":4},"end":{"line":41,"column":49}},"33":{"start":{"line":31,"column":8},"end":{"line":39,"column":9}},"34":{"start":{"line":32,"column":12},"end":{"line":32,"column":68}},"35":{"start":{"line":34,"column":13},"end":{"line":39,"column":9}},"36":{"start":{"line":35,"column":12},"end":{"line":35,"column":78}},"37":{"start":{"line":38,"column":12},"end":{"line":38,"column":81}},"38":{"start":{"line":41,"column":22},"end":{"line":41,"column":47}},"39":{"start":{"line":43,"column":0},"end":{"line":46,"column":3}},"40":{"start":{"line":44,"column":15},"end":{"line":44,"column":49}},"41":{"start":{"line":45,"column":4},"end":{"line":45,"column":103}},"42":{"start":{"line":45,"column":47},"end":{"line":45,"column":61}},"43":{"start":{"line":45,"column":76},"end":{"line":45,"column":101}},"44":{"start":{"line":47,"column":0},"end":{"line":51,"column":3}},"45":{"start":{"line":48,"column":4},"end":{"line":50,"column":51}},"46":{"start":{"line":49,"column":20},"end":{"line":49,"column":91}},"47":{"start":{"line":50,"column":24},"end":{"line":50,"column":49}},"48":{"start":{"line":52,"column":0},"end":{"line":56,"column":3}},"49":{"start":{"line":53,"column":4},"end":{"line":55,"column":108}},"50":{"start":{"line":54,"column":20},"end":{"line":54,"column":100}},"51":{"start":{"line":55,"column":21},"end":{"line":55,"column":106}},"52":{"start":{"line":57,"column":0},"end":{"line":64,"column":3}},"53":{"start":{"line":58,"column":19},"end":{"line":58,"column":57}},"54":{"start":{"line":59,"column":21},"end":{"line":59,"column":61}},"55":{"start":{"line":60,"column":4},"end":{"line":63,"column":49}},"56":{"start":{"line":61,"column":8},"end":{"line":61,"column":78}},"57":{"start":{"line":63,"column":22},"end":{"line":63,"column":47}},"58":{"start":{"line":65,"column":0},"end":{"line":70,"column":3}},"59":{"start":{"line":66,"column":4},"end":{"line":69,"column":49}},"60":{"start":{"line":67,"column":8},"end":{"line":67,"column":36}},"61":{"start":{"line":69,"column":22},"end":{"line":69,"column":47}},"62":{"start":{"line":71,"column":0},"end":{"line":76,"column":3}},"63":{"start":{"line":72,"column":4},"end":{"line":75,"column":49}},"64":{"start":{"line":73,"column":8},"end":{"line":73,"column":36}},"65":{"start":{"line":75,"column":22},"end":{"line":75,"column":47}},"66":{"start":{"line":77,"column":0},"end":{"line":77,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":33},"end":{"line":12,"column":34}},"loc":{"start":{"line":12,"column":47},"end":{"line":14,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":40},"end":{"line":13,"column":41}},"loc":{"start":{"line":13,"column":54},"end":{"line":13,"column":74}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":82},"end":{"line":13,"column":83}},"loc":{"start":{"line":13,"column":89},"end":{"line":13,"column":114}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":30},"end":{"line":15,"column":31}},"loc":{"start":{"line":15,"column":44},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":16,"column":37},"end":{"line":16,"column":38}},"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":61}},"line":16},"6":{"name":"(anonymous_6)","decl":{"start":{"line":16,"column":69},"end":{"line":16,"column":70}},"loc":{"start":{"line":16,"column":76},"end":{"line":16,"column":101}},"line":16},"7":{"name":"(anonymous_7)","decl":{"start":{"line":18,"column":29},"end":{"line":18,"column":30}},"loc":{"start":{"line":18,"column":43},"end":{"line":20,"column":1}},"line":18},"8":{"name":"(anonymous_8)","decl":{"start":{"line":19,"column":42},"end":{"line":19,"column":43}},"loc":{"start":{"line":19,"column":50},"end":{"line":19,"column":64}},"line":19},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":72},"end":{"line":19,"column":73}},"loc":{"start":{"line":19,"column":79},"end":{"line":19,"column":104}},"line":19},"10":{"name":"(anonymous_10)","decl":{"start":{"line":21,"column":49},"end":{"line":21,"column":50}},"loc":{"start":{"line":21,"column":63},"end":{"line":23,"column":1}},"line":21},"11":{"name":"(anonymous_11)","decl":{"start":{"line":22,"column":30},"end":{"line":22,"column":31}},"loc":{"start":{"line":22,"column":39},"end":{"line":22,"column":54}},"line":22},"12":{"name":"(anonymous_12)","decl":{"start":{"line":22,"column":62},"end":{"line":22,"column":63}},"loc":{"start":{"line":22,"column":69},"end":{"line":22,"column":94}},"line":22},"13":{"name":"(anonymous_13)","decl":{"start":{"line":24,"column":27},"end":{"line":24,"column":28}},"loc":{"start":{"line":24,"column":41},"end":{"line":27,"column":1}},"line":24},"14":{"name":"(anonymous_14)","decl":{"start":{"line":26,"column":39},"end":{"line":26,"column":40}},"loc":{"start":{"line":26,"column":47},"end":{"line":26,"column":61}},"line":26},"15":{"name":"(anonymous_15)","decl":{"start":{"line":26,"column":69},"end":{"line":26,"column":70}},"loc":{"start":{"line":26,"column":76},"end":{"line":26,"column":101}},"line":26},"16":{"name":"(anonymous_16)","decl":{"start":{"line":28,"column":55},"end":{"line":28,"column":56}},"loc":{"start":{"line":28,"column":69},"end":{"line":42,"column":1}},"line":28},"17":{"name":"(anonymous_17)","decl":{"start":{"line":30,"column":36},"end":{"line":30,"column":37}},"loc":{"start":{"line":30,"column":46},"end":{"line":40,"column":5}},"line":30},"18":{"name":"(anonymous_18)","decl":{"start":{"line":41,"column":15},"end":{"line":41,"column":16}},"loc":{"start":{"line":41,"column":22},"end":{"line":41,"column":47}},"line":41},"19":{"name":"(anonymous_19)","decl":{"start":{"line":43,"column":62},"end":{"line":43,"column":63}},"loc":{"start":{"line":43,"column":76},"end":{"line":46,"column":1}},"line":43},"20":{"name":"(anonymous_20)","decl":{"start":{"line":45,"column":39},"end":{"line":45,"column":40}},"loc":{"start":{"line":45,"column":47},"end":{"line":45,"column":61}},"line":45},"21":{"name":"(anonymous_21)","decl":{"start":{"line":45,"column":69},"end":{"line":45,"column":70}},"loc":{"start":{"line":45,"column":76},"end":{"line":45,"column":101}},"line":45},"22":{"name":"(anonymous_22)","decl":{"start":{"line":47,"column":42},"end":{"line":47,"column":43}},"loc":{"start":{"line":47,"column":56},"end":{"line":51,"column":1}},"line":47},"23":{"name":"(anonymous_23)","decl":{"start":{"line":49,"column":14},"end":{"line":49,"column":15}},"loc":{"start":{"line":49,"column":20},"end":{"line":49,"column":91}},"line":49},"24":{"name":"(anonymous_24)","decl":{"start":{"line":50,"column":15},"end":{"line":50,"column":16}},"loc":{"start":{"line":50,"column":24},"end":{"line":50,"column":49}},"line":50},"25":{"name":"(anonymous_25)","decl":{"start":{"line":52,"column":73},"end":{"line":52,"column":74}},"loc":{"start":{"line":52,"column":87},"end":{"line":56,"column":1}},"line":52},"26":{"name":"(anonymous_26)","decl":{"start":{"line":54,"column":14},"end":{"line":54,"column":15}},"loc":{"start":{"line":54,"column":20},"end":{"line":54,"column":100}},"line":54},"27":{"name":"(anonymous_27)","decl":{"start":{"line":55,"column":15},"end":{"line":55,"column":16}},"loc":{"start":{"line":55,"column":21},"end":{"line":55,"column":106}},"line":55},"28":{"name":"(anonymous_28)","decl":{"start":{"line":57,"column":57},"end":{"line":57,"column":58}},"loc":{"start":{"line":57,"column":71},"end":{"line":64,"column":1}},"line":57},"29":{"name":"(anonymous_29)","decl":{"start":{"line":60,"column":55},"end":{"line":60,"column":56}},"loc":{"start":{"line":60,"column":61},"end":{"line":62,"column":5}},"line":60},"30":{"name":"(anonymous_30)","decl":{"start":{"line":63,"column":15},"end":{"line":63,"column":16}},"loc":{"start":{"line":63,"column":22},"end":{"line":63,"column":47}},"line":63},"31":{"name":"(anonymous_31)","decl":{"start":{"line":65,"column":39},"end":{"line":65,"column":40}},"loc":{"start":{"line":65,"column":53},"end":{"line":70,"column":1}},"line":65},"32":{"name":"(anonymous_32)","decl":{"start":{"line":66,"column":41},"end":{"line":66,"column":42}},"loc":{"start":{"line":66,"column":50},"end":{"line":68,"column":5}},"line":66},"33":{"name":"(anonymous_33)","decl":{"start":{"line":69,"column":15},"end":{"line":69,"column":16}},"loc":{"start":{"line":69,"column":22},"end":{"line":69,"column":47}},"line":69},"34":{"name":"(anonymous_34)","decl":{"start":{"line":71,"column":42},"end":{"line":71,"column":43}},"loc":{"start":{"line":71,"column":56},"end":{"line":76,"column":1}},"line":71},"35":{"name":"(anonymous_35)","decl":{"start":{"line":72,"column":44},"end":{"line":72,"column":45}},"loc":{"start":{"line":72,"column":53},"end":{"line":74,"column":5}},"line":72},"36":{"name":"(anonymous_36)","decl":{"start":{"line":75,"column":15},"end":{"line":75,"column":16}},"loc":{"start":{"line":75,"column":22},"end":{"line":75,"column":47}},"line":75}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":31,"column":8},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":31,"column":8},"end":{"line":39,"column":9}},{"start":{"line":31,"column":8},"end":{"line":39,"column":9}}],"line":31},"4":{"loc":{"start":{"line":34,"column":13},"end":{"line":39,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":13},"end":{"line":39,"column":9}},{"start":{"line":34,"column":13},"end":{"line":39,"column":9}}],"line":34}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":3,"11":1,"12":2,"13":1,"14":12,"15":10,"16":2,"17":1,"18":3,"19":1,"20":2,"21":1,"22":1,"23":1,"24":0,"25":1,"26":2,"27":2,"28":1,"29":1,"30":1,"31":2,"32":2,"33":2,"34":1,"35":1,"36":1,"37":0,"38":0,"39":1,"40":2,"41":2,"42":1,"43":1,"44":1,"45":2,"46":1,"47":1,"48":1,"49":1,"50":1,"51":0,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":1,"60":1,"61":0,"62":1,"63":1,"64":1,"65":0,"66":1},"f":{"0":1,"1":3,"2":1,"3":2,"4":12,"5":10,"6":2,"7":3,"8":1,"9":2,"10":1,"11":1,"12":0,"13":2,"14":1,"15":1,"16":2,"17":2,"18":0,"19":2,"20":1,"21":1,"22":2,"23":1,"24":1,"25":1,"26":1,"27":0,"28":1,"29":1,"30":0,"31":1,"32":1,"33":0,"34":1,"35":1,"36":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,1],"4":[1,0]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/controllers/user.controller.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/controllers/user.controller.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport express, { Router, Request, Response } from 'express';\nimport { UserService } from '../services/user.service';\nimport { verifyAdmin, verifyToken, verifyPasswordToken } from '../middlewares/checkAuth';\n\n\nconst userController: Router = express.Router();\nconst userService = new UserService();\n\n\nuserController.post('/register',\n    (req: Request, res: Response) => {\n            userService.register(req.body).then(registered => res.send(registered)).catch(err => res.status(400).send(err));\n    }\n);\n\nuserController.post('/login',\n    (req: Request, res: Response) => {\n        userService.login(req.body).then(login => res.send(login)).catch(err => res.status(400).send(err));\n    }\n);\n\nuserController.post('/edit',\n    (req: Request, res: Response) => {\n        userService.changeUser(req.body).then(user => res.send(user)).catch(err => res.status(500).send(err));\n    }\n);\n\nuserController.get('/', verifyToken, // you can add middleware on specific requests like that\n    (req: Request, res: Response) => {\n        userService.getAll().then(users => res.send(users)).catch(err => res.status(404).send(err));\n    }\n);\n\nuserController.get('/:id',\n    (req: Request, res: Response) => {\n        const id = Number.parseInt(req.params.id, 10);\n        userService.getSingleUser(id).then(user => res.send(user)).catch(err => res.status(404).send(err));\n    }\n);\n\nuserController.delete('/:id', verifyAdmin,\n    (req: Request, res: Response) => {\n        const id = Number.parseInt(req.params.id, 10);\n        userService.deleteUser(id).then(number => {\n            if (number === 0) {\n                res.status(202).send({message: 'No entry to delete'});\n            } else if (number === 1) {\n                res.send({message: 'Successfully deleted entry with id=' + id});\n            } else {\n                res.send({message: 'Successfully deleted ' + number + ' entries'});\n            }\n        })\n        .catch(err => res.status(500).send(err));\n    }\n);\n\nuserController.put('/makeAdmin/:id', verifyAdmin,\n    (req: Request, res: Response) => {\n        const id = Number.parseInt(req.params.id, 10);\n        userService.makeUserAdmin(id).then(user => res.send(user)).catch(err => res.status(500).send(err));\n    }\n);\n\n// Request must contain usermail!\nuserController.post('/passwordForgotten',\n    (req: Request, res: Response) => {\n        userService.sendEmailWithResetLink(req.body.userEmail)\n        .then(() => res.send({message: 'We sent you an email, check out your mail box!'}))\n        .catch((err) => res.status(404).send(err));\n    }\n);\n\n// Request gets the Username from the token\nuserController.post('/restorePassword', verifyPasswordToken,\n    (req: Request, res: Response) => {\n        userService.restorePassword(req.body.tokenPayload.userName, req.body.password)\n        .then(() => res.send({message: 'Successfully changed the password, you may now sign in!'}))\n        .catch(() => res.status(500).send({message: 'Failed to change the password, please try again!'}));\n    }\n);\n\nuserController.put('/updateGameScore/:userId/:newScore' ,\n    (req: Request, res: Response) => {\n        const userId = Number.parseInt(req.params.userId, 10);\n        const newScore = Number.parseInt(req.params.newScore, 10);\n        userService.updateGameScore(userId, newScore).then(() => {\n            res.status(200).send({message: 'Game score successfully updated!'});\n        })\n        .catch(err => res.status(500).send(err));\n    }\n);\n\n\nuserController.get('/highscores/game',\n    (req: Request, res: Response) => {\n        userService.getGameHighScores().then(users => {\n            res.status(200).send(users);\n        })\n        .catch(err => res.status(500).send(err));\n    }\n);\n\nuserController.get('/highscores/overall',\n    (req: Request, res: Response) => {\n        userService.getOverallHighScores().then(users => {\n            res.status(200).send(users);\n        })\n        .catch(err => res.status(500).send(err));\n    }\n);\n\nexport const UserController: Router = userController;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"542ff32e4f73e1c5b3a04a118cf8c00991116ab5","contentHash":"dc4131b0f9fe6b9da3da367ff12a1bb7fdce1fd5bde0b2281d55fc526ae97945"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/user.service.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/user.service.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"4":{"start":{"line":7,"column":24},"end":{"line":7,"column":50}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":52}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":51}},"7":{"start":{"line":10,"column":23},"end":{"line":10,"column":63}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":63}},"9":{"start":{"line":16,"column":27},"end":{"line":16,"column":29}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":77}},"11":{"start":{"line":18,"column":23},"end":{"line":18,"column":43}},"12":{"start":{"line":19,"column":8},"end":{"line":32,"column":60}},"13":{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},"14":{"start":{"line":28,"column":16},"end":{"line":28,"column":95}},"15":{"start":{"line":30,"column":12},"end":{"line":30,"column":128}},"16":{"start":{"line":30,"column":67},"end":{"line":30,"column":92}},"17":{"start":{"line":30,"column":107},"end":{"line":30,"column":126}},"18":{"start":{"line":32,"column":26},"end":{"line":32,"column":58}},"19":{"start":{"line":35,"column":23},"end":{"line":35,"column":45}},"20":{"start":{"line":36,"column":23},"end":{"line":36,"column":43}},"21":{"start":{"line":37,"column":8},"end":{"line":59,"column":60}},"22":{"start":{"line":46,"column":12},"end":{"line":57,"column":13}},"23":{"start":{"line":47,"column":16},"end":{"line":53,"column":17}},"24":{"start":{"line":48,"column":34},"end":{"line":48,"column":159}},"25":{"start":{"line":49,"column":20},"end":{"line":49,"column":60}},"26":{"start":{"line":52,"column":20},"end":{"line":52,"column":60}},"27":{"start":{"line":56,"column":16},"end":{"line":56,"column":66}},"28":{"start":{"line":59,"column":26},"end":{"line":59,"column":58}},"29":{"start":{"line":62,"column":8},"end":{"line":62,"column":43}},"30":{"start":{"line":65,"column":8},"end":{"line":67,"column":11}},"31":{"start":{"line":70,"column":8},"end":{"line":78,"column":11}},"32":{"start":{"line":73,"column":12},"end":{"line":75,"column":15}},"33":{"start":{"line":77,"column":12},"end":{"line":77,"column":52}},"34":{"start":{"line":81,"column":8},"end":{"line":88,"column":58}},"35":{"start":{"line":82,"column":12},"end":{"line":87,"column":13}},"36":{"start":{"line":83,"column":16},"end":{"line":83,"column":45}},"37":{"start":{"line":86,"column":16},"end":{"line":86,"column":57}},"38":{"start":{"line":88,"column":24},"end":{"line":88,"column":56}},"39":{"start":{"line":91,"column":8},"end":{"line":92,"column":60}},"40":{"start":{"line":91,"column":73},"end":{"line":91,"column":95}},"41":{"start":{"line":92,"column":26},"end":{"line":92,"column":58}},"42":{"start":{"line":95,"column":23},"end":{"line":95,"column":48}},"43":{"start":{"line":96,"column":8},"end":{"line":107,"column":60}},"44":{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},"45":{"start":{"line":100,"column":16},"end":{"line":100,"column":55}},"46":{"start":{"line":102,"column":26},"end":{"line":102,"column":133}},"47":{"start":{"line":103,"column":12},"end":{"line":103,"column":94}},"48":{"start":{"line":105,"column":12},"end":{"line":105,"column":41}},"49":{"start":{"line":107,"column":26},"end":{"line":107,"column":58}},"50":{"start":{"line":110,"column":23},"end":{"line":110,"column":43}},"51":{"start":{"line":111,"column":27},"end":{"line":111,"column":29}},"52":{"start":{"line":112,"column":31},"end":{"line":112,"column":81}},"53":{"start":{"line":113,"column":8},"end":{"line":120,"column":58}},"54":{"start":{"line":116,"column":12},"end":{"line":118,"column":15}},"55":{"start":{"line":119,"column":12},"end":{"line":119,"column":37}},"56":{"start":{"line":120,"column":24},"end":{"line":120,"column":56}},"57":{"start":{"line":123,"column":8},"end":{"line":132,"column":11}},"58":{"start":{"line":125,"column":36},"end":{"line":125,"column":66}},"59":{"start":{"line":126,"column":12},"end":{"line":129,"column":15}},"60":{"start":{"line":131,"column":12},"end":{"line":131,"column":52}},"61":{"start":{"line":135,"column":8},"end":{"line":143,"column":11}},"62":{"start":{"line":142,"column":12},"end":{"line":142,"column":52}},"63":{"start":{"line":146,"column":8},"end":{"line":152,"column":11}},"64":{"start":{"line":155,"column":0},"end":{"line":155,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":18},"end":{"line":14,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":19},"end":{"line":33,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":16},"end":{"line":26,"column":17}},"loc":{"start":{"line":26,"column":37},"end":{"line":31,"column":9}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":30,"column":55},"end":{"line":30,"column":56}},"loc":{"start":{"line":30,"column":67},"end":{"line":30,"column":92}},"line":30},"5":{"name":"(anonymous_5)","decl":{"start":{"line":30,"column":100},"end":{"line":30,"column":101}},"loc":{"start":{"line":30,"column":107},"end":{"line":30,"column":126}},"line":30},"6":{"name":"(anonymous_6)","decl":{"start":{"line":32,"column":19},"end":{"line":32,"column":20}},"loc":{"start":{"line":32,"column":26},"end":{"line":32,"column":58}},"line":32},"7":{"name":"(anonymous_7)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":26},"end":{"line":60,"column":5}},"line":34},"8":{"name":"(anonymous_8)","decl":{"start":{"line":45,"column":18},"end":{"line":45,"column":19}},"loc":{"start":{"line":45,"column":26},"end":{"line":58,"column":9}},"line":45},"9":{"name":"(anonymous_9)","decl":{"start":{"line":59,"column":19},"end":{"line":59,"column":20}},"loc":{"start":{"line":59,"column":26},"end":{"line":59,"column":58}},"line":59},"10":{"name":"(anonymous_10)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":13},"end":{"line":63,"column":5}},"line":61},"11":{"name":"(anonymous_11)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":19},"end":{"line":68,"column":5}},"line":64},"12":{"name":"(anonymous_12)","decl":{"start":{"line":69,"column":4},"end":{"line":69,"column":5}},"loc":{"start":{"line":69,"column":22},"end":{"line":79,"column":5}},"line":69},"13":{"name":"(anonymous_13)","decl":{"start":{"line":72,"column":16},"end":{"line":72,"column":17}},"loc":{"start":{"line":72,"column":24},"end":{"line":76,"column":9}},"line":72},"14":{"name":"(anonymous_14)","decl":{"start":{"line":76,"column":17},"end":{"line":76,"column":18}},"loc":{"start":{"line":76,"column":24},"end":{"line":78,"column":9}},"line":76},"15":{"name":"(anonymous_15)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":22},"end":{"line":89,"column":5}},"line":80},"16":{"name":"(anonymous_16)","decl":{"start":{"line":81,"column":51},"end":{"line":81,"column":52}},"loc":{"start":{"line":81,"column":59},"end":{"line":88,"column":9}},"line":81},"17":{"name":"(anonymous_17)","decl":{"start":{"line":88,"column":17},"end":{"line":88,"column":18}},"loc":{"start":{"line":88,"column":24},"end":{"line":88,"column":56}},"line":88},"18":{"name":"(anonymous_18)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":21},"end":{"line":93,"column":5}},"line":90},"19":{"name":"(anonymous_19)","decl":{"start":{"line":91,"column":60},"end":{"line":91,"column":61}},"loc":{"start":{"line":91,"column":73},"end":{"line":91,"column":95}},"line":91},"20":{"name":"(anonymous_20)","decl":{"start":{"line":92,"column":19},"end":{"line":92,"column":20}},"loc":{"start":{"line":92,"column":26},"end":{"line":92,"column":58}},"line":92},"21":{"name":"(anonymous_21)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":34},"end":{"line":108,"column":5}},"line":94},"22":{"name":"(anonymous_22)","decl":{"start":{"line":98,"column":16},"end":{"line":98,"column":17}},"loc":{"start":{"line":98,"column":24},"end":{"line":104,"column":9}},"line":98},"23":{"name":"(anonymous_23)","decl":{"start":{"line":104,"column":16},"end":{"line":104,"column":17}},"loc":{"start":{"line":104,"column":24},"end":{"line":106,"column":9}},"line":104},"24":{"name":"(anonymous_24)","decl":{"start":{"line":107,"column":19},"end":{"line":107,"column":20}},"loc":{"start":{"line":107,"column":26},"end":{"line":107,"column":58}},"line":107},"25":{"name":"(anonymous_25)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":44},"end":{"line":121,"column":5}},"line":109},"26":{"name":"(anonymous_26)","decl":{"start":{"line":115,"column":16},"end":{"line":115,"column":17}},"loc":{"start":{"line":115,"column":24},"end":{"line":120,"column":9}},"line":115},"27":{"name":"(anonymous_27)","decl":{"start":{"line":120,"column":17},"end":{"line":120,"column":18}},"loc":{"start":{"line":120,"column":24},"end":{"line":120,"column":56}},"line":120},"28":{"name":"(anonymous_28)","decl":{"start":{"line":122,"column":4},"end":{"line":122,"column":5}},"loc":{"start":{"line":122,"column":39},"end":{"line":133,"column":5}},"line":122},"29":{"name":"(anonymous_29)","decl":{"start":{"line":124,"column":18},"end":{"line":124,"column":19}},"loc":{"start":{"line":124,"column":26},"end":{"line":130,"column":9}},"line":124},"30":{"name":"(anonymous_30)","decl":{"start":{"line":130,"column":17},"end":{"line":130,"column":18}},"loc":{"start":{"line":130,"column":24},"end":{"line":132,"column":9}},"line":130},"31":{"name":"(anonymous_31)","decl":{"start":{"line":134,"column":4},"end":{"line":134,"column":5}},"loc":{"start":{"line":134,"column":24},"end":{"line":144,"column":5}},"line":134},"32":{"name":"(anonymous_32)","decl":{"start":{"line":141,"column":17},"end":{"line":141,"column":18}},"loc":{"start":{"line":141,"column":24},"end":{"line":143,"column":9}},"line":141},"33":{"name":"(anonymous_33)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":27},"end":{"line":153,"column":5}},"line":145}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},"type":"if","locations":[{"start":{"line":27,"column":12},"end":{"line":29,"column":13}},{"start":{"line":27,"column":12},"end":{"line":29,"column":13}}],"line":27},"4":{"loc":{"start":{"line":46,"column":12},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":57,"column":13}},{"start":{"line":46,"column":12},"end":{"line":57,"column":13}}],"line":46},"5":{"loc":{"start":{"line":47,"column":16},"end":{"line":53,"column":17}},"type":"if","locations":[{"start":{"line":47,"column":16},"end":{"line":53,"column":17}},{"start":{"line":47,"column":16},"end":{"line":53,"column":17}}],"line":47},"6":{"loc":{"start":{"line":82,"column":12},"end":{"line":87,"column":13}},"type":"if","locations":[{"start":{"line":82,"column":12},"end":{"line":87,"column":13}},{"start":{"line":82,"column":12},"end":{"line":87,"column":13}}],"line":82},"7":{"loc":{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},"type":"if","locations":[{"start":{"line":99,"column":12},"end":{"line":101,"column":13}},{"start":{"line":99,"column":12},"end":{"line":101,"column":13}}],"line":99}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":2,"9":8,"10":8,"11":8,"12":8,"13":8,"14":4,"15":4,"16":3,"17":1,"18":5,"19":16,"20":16,"21":16,"22":16,"23":14,"24":12,"25":12,"26":2,"27":2,"28":4,"29":2,"30":4,"31":4,"32":4,"33":2,"34":4,"35":4,"36":2,"37":2,"38":2,"39":6,"40":6,"41":4,"42":4,"43":4,"44":4,"45":2,"46":2,"47":2,"48":2,"49":2,"50":3,"51":3,"52":3,"53":3,"54":3,"55":2,"56":1,"57":2,"58":2,"59":2,"60":0,"61":2,"62":0,"63":2,"64":1},"f":{"0":2,"1":2,"2":8,"3":8,"4":3,"5":1,"6":5,"7":16,"8":16,"9":4,"10":2,"11":4,"12":4,"13":4,"14":2,"15":4,"16":4,"17":2,"18":6,"19":6,"20":4,"21":4,"22":4,"23":2,"24":2,"25":3,"26":3,"27":1,"28":2,"29":2,"30":0,"31":2,"32":0,"33":2},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[4,4],"4":[14,2],"5":[12,2],"6":[2,2],"7":[2,2]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/user.service.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/user.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { EmailService } from './email.service';\nimport { UserAttributes, UserEditingAttributes, User } from '../models/user.model';\nimport { LoginResponse, LoginRequest } from '../models/login.model';\nimport bcrypt from 'bcrypt';\nimport jwt from 'jsonwebtoken';\n\nexport class UserService {\n\n    private emailService: EmailService;\n\n    public constructor() {\n        this.emailService = new EmailService();\n    }\n\n    public register(user: UserAttributes): Promise<UserAttributes> {\n        const saltRounds = 12;\n        user.password = bcrypt.hashSync(user.password, saltRounds); // hashes the password, never store passwords as plaintext\n        const { Op } = require('sequelize');\n        return User.findOne({\n            where:  {\n                [Op.or]: [\n                {userName: user.userName},\n                {userMail: user.userMail}\n                ]\n            }\n        }).then(function(userFound) {\n            if (userFound) {\n            return Promise.reject('This username or email address is already being used!');\n            }\n            return User.create(user).then(inserted => Promise.resolve(inserted)).catch(err => Promise.reject(err));\n        })\n        .catch(err => Promise.reject({message: err}));\n    }\n\n    public login(loginRequestee: LoginRequest): Promise<User | LoginResponse> {\n        const secret = process.env.JWT_SECRET;\n        const { Op } = require('sequelize');\n\n        return User.findOne({\n            where:  {\n                [Op.or]: [\n                {userName: loginRequestee.userLogin},\n                {userMail: loginRequestee.userLogin}\n                ]\n            }\n        })\n        .then(user => {\n            if (user) {\n                if (bcrypt.compareSync(loginRequestee.password, user.password)) {\n                    const token: string = jwt.sign({ userName: user.userName, userId: user.userId, admin: user.admin }, secret, { expiresIn: '2h' });\n                    return Promise.resolve({ user, token });\n                } else {\n                return Promise.reject('Wrong password');\n                }\n            } else {\n                return Promise.reject('Could not find this User');\n            }\n        })\n        .catch(err => Promise.reject({message: err}));\n    }\n\n    public getAll(): Promise<User[]> {\n        return User.findAll();\n    }\n\n    public deleteUser(id: number): Promise<number> {\n        return User.destroy({\n            where: { userId: id }\n        });\n    }\n\n    public makeUserAdmin(id: number): Promise<User> {\n        return User.findOne({\n            where: { userId: id }\n        }).then(user => {\n            return user.update({\n                admin: true\n            });\n        }).catch(err => {\n            return Promise.reject({message: err});\n        });\n    }\n\n    public getSingleUser(id: number): Promise<User> {\n        return User.findByPk(id).then(user => {\n            if (user) {\n                return Promise.resolve(user);\n            } else {\n                return Promise.reject('User not found!');\n            }\n        }).catch(err => Promise.reject({message: err}));\n    }\n\n    public changeUser(user: UserEditingAttributes): Promise<User> {\n        return User.findByPk(user.userId).then(foundUser => foundUser.update(user))\n            .catch(err => Promise.reject({message: err}));\n    }\n\n    // sends an email with a link to restore a forgotten password\n    public sendEmailWithResetLink(email: string): Promise<any> {\n        const secret = process.env.JWT_PW_SECRET;\n        return User.findOne({\n            where: { userMail: email}\n        }).then(user => {\n            if (user === null) {\n                return Promise.reject('No such user!');\n            }\n            const token: string = jwt.sign({ userName: user.userName, userId: user.userId }, secret, { expiresIn: '15m' });\n            return this.emailService.sendPasswordRestorationMail(user.userName, email, token);\n        }).then(info => {\n            return Promise.resolve(info);\n        })\n        .catch(err => Promise.reject({message: err}));\n\n    }\n\n    // restores a forgotten password\n    public restorePassword(userLogin: string, newPassword: string): Promise<void> {\n        const { Op } = require('sequelize');\n        const saltRounds = 12;\n        const hashedPassword: string = bcrypt.hashSync(newPassword, saltRounds);\n\n        return User.findOne({\n            where:  { userName: userLogin }\n        }).then(user => {\n            user.update({\n                password: hashedPassword\n            });\n            return Promise.resolve();\n        }) .catch(err => Promise.reject({message: err}));\n\n    }\n\n    public updateGameScore(userId: number, highscore: number): Promise<User> {\n        return User.findByPk(userId)\n        .then(user => {\n            const newOverallScore = user.activityScore * highscore;\n            return user.update({\n                gameScore: highscore,\n                overallScore: newOverallScore\n            });\n        }).catch(err => {\n            return Promise.reject({message: err});\n        });\n    }\n\n    public getGameHighScores(): Promise<User[]> {\n        return User.findAll({\n            order: [\n                ['gameScore', 'DESC']\n            ],\n            attributes: ['userId', 'userName', 'gameScore'],\n            limit: 10\n        }).catch(err => {\n            return Promise.reject({message: err});\n        });\n    }\n\n    public getOverallHighScores(): Promise<User[]> {\n        return User.findAll({\n            order: [\n                ['overallScore', 'DESC']\n            ],\n            attributes: ['userId', 'userName', 'overallScore'],\n            limit: 3\n        });\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"92bf4435028ff918b6078402f96b588014352ee8","contentHash":"46515ecad756ce466cbaee62b2dd2021e6ecd3c3b7a3b7395a0b22d8aaca88cf"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/email.service.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/email.service.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":59}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":33}},"6":{"start":{"line":13,"column":28},"end":{"line":13,"column":69}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":31}},"8":{"start":{"line":15,"column":8},"end":{"line":24,"column":11}},"9":{"start":{"line":16,"column":12},"end":{"line":23,"column":15}},"10":{"start":{"line":17,"column":16},"end":{"line":22,"column":17}},"11":{"start":{"line":18,"column":20},"end":{"line":18,"column":32}},"12":{"start":{"line":21,"column":20},"end":{"line":21,"column":34}},"13":{"start":{"line":27,"column":8},"end":{"line":50,"column":9}},"14":{"start":{"line":28,"column":12},"end":{"line":38,"column":15}},"15":{"start":{"line":29,"column":16},"end":{"line":37,"column":19}},"16":{"start":{"line":41,"column":12},"end":{"line":49,"column":15}},"17":{"start":{"line":53,"column":8},"end":{"line":63,"column":10}},"18":{"start":{"line":66,"column":0},"end":{"line":66,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":18},"end":{"line":11,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":56},"end":{"line":25,"column":5}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":27},"end":{"line":15,"column":28}},"loc":{"start":{"line":15,"column":48},"end":{"line":24,"column":9}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":16,"column":53},"end":{"line":16,"column":54}},"loc":{"start":{"line":16,"column":74},"end":{"line":23,"column":13}},"line":16},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":24},"end":{"line":51,"column":5}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":28,"column":58},"end":{"line":28,"column":59}},"loc":{"start":{"line":28,"column":73},"end":{"line":38,"column":13}},"line":28},"7":{"name":"(anonymous_7)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":41},"end":{"line":64,"column":5}},"line":52}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":17,"column":16},"end":{"line":22,"column":17}},"type":"if","locations":[{"start":{"line":17,"column":16},"end":{"line":22,"column":17}},{"start":{"line":17,"column":16},"end":{"line":22,"column":17}}],"line":17},"4":{"loc":{"start":{"line":27,"column":8},"end":{"line":50,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":50,"column":9}},{"start":{"line":27,"column":8},"end":{"line":50,"column":9}}],"line":27}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":4,"7":4,"8":4,"9":4,"10":4,"11":1,"12":3,"13":3,"14":3,"15":3,"16":0,"17":4,"18":1},"f":{"0":1,"1":3,"2":4,"3":4,"4":4,"5":3,"6":3,"7":4},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,3],"4":[3,0]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/email.service.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/email.service.ts"],"names":[],"mappings":";;;;;;AACA,4DAAoC;AAEpC,MAAa,YAAY;IAIrB;QACI,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAEM,2BAA2B,CAAC,QAAgB,EAAE,KAAa,EAAE,KAAa;QAC7E,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC9D,WAAW,CAAC,EAAE,GAAG,KAAK,CAAC;QACvB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACnC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,WAAW,EAAE,UAAS,GAAG,EAAE,IAAI;gBACvD,IAAI,GAAG,EAAE;oBACL,MAAM,CAAC,GAAG,CAAC,CAAC;iBACf;qBAAM;oBACH,OAAO,CAAC,IAAI,CAAC,CAAC;iBACjB;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,iBAAiB;QACrB,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM,EAAE;YACjC,oBAAU,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE;gBAC9C,IAAI,CAAC,aAAa,GAAG,oBAAU,CAAC,eAAe,CAAC;oBAC5C,IAAI,EAAE,qBAAqB;oBAC3B,IAAI,EAAE,GAAG;oBACT,MAAM,EAAE,KAAK;oBACb,IAAI,EAAE;wBACF,IAAI,EAAE,WAAW,CAAC,IAAI;wBACtB,IAAI,EAAE,WAAW,CAAC,IAAI;qBACzB;iBACJ,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACN;aAAM;YACP,IAAI,CAAC,aAAa,GAAG,oBAAU,CAAC,eAAe,CAAC;gBAC5C,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,GAAG;gBACT,MAAM,EAAE,IAAI;gBACZ,IAAI,EAAE;oBACF,IAAI,EAAE,cAAc;oBACpB,IAAI,EAAE,iBAAiB;iBAC1B;aACJ,CAAC,CAAC;SACF;IACL,CAAC;IAGO,mBAAmB,CAAC,KAAa,EAAE,QAAgB;QACvD,OAAO;YACH,IAAI,EAAE,cAAc;YACpB,EAAE,EAAE,EAAE;YACN,OAAO,EAAE,uBAAuB;YAChC,IAAI,EAAE,QAAQ,GAAG,QAAQ,GAAG,OAAO;gBAC/B,0FAA0F;gBAC1F,+CAA+C,GAAG,KAAK,GAAG,0BAA0B;gBACpF,gGAAgG;gBAChG,4BAA4B;gBAC5B,mCAAmC;SAC1C,CAAC;IACN,CAAC;CACJ;AA9DD,oCA8DC","sourcesContent":["import Mail from 'nodemailer/lib/mailer';\nimport nodemailer from 'nodemailer';\n\nexport class EmailService {\n\n    private mailTransport: Mail;\n\n    public constructor() {\n        this.instantiateMailer();\n    }\n\n    public sendPasswordRestorationMail(username: string, email: string, token: string): Promise<any> {\n        const mailOptions = this.createPWMailPayload(token, username);\n        mailOptions.to = email;\n        return new Promise((resolve, reject) => {\n            this.mailTransport.sendMail(mailOptions, function(err, info) {\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(info);\n                }\n            });\n        });\n    }\n\n    private instantiateMailer() {\n        if (process.env.NODE_ENV === 'test') {\n            nodemailer.createTestAccount().then(testAccount => {\n                this.mailTransport = nodemailer.createTransport({\n                    host: 'smtp.ethereal.email',\n                    port: 587,\n                    secure: false,\n                    auth: {\n                        user: testAccount.user,\n                        pass: testAccount.pass\n                    }\n                });\n            });\n        } else {\n        this.mailTransport = nodemailer.createTransport({\n            host: 'smtp.mail.ch',\n            port: 465,\n            secure: true,\n            auth: {\n                user: 'stor@mail.ch',\n                pass: 'r6CFPsieyCdhFnn'\n            }\n        });\n        }\n    }\n\n    // creates the mail payload for a password forgotten request\n    private createPWMailPayload(token: string, username: string) {\n        return {\n            from: 'stor@mail.ch',\n            to: '',\n            subject: 'STOR - Reset password',\n            html: '<p>Hi ' + username + ',<br>' +\n                'We got a request to reset your STOR password. Click on the link below, to do so.<br></p>' +\n                '<a href=\"http://localhost:4200/resetPassword/' + token + '\">Reset Password</a><br>' +\n                '<p>The link is only valid for 15 minutes. If you did not request the password change, you may ' +\n                'ignore this email.<br><br>' +\n                'Greetings <br> Your STOR Team</p>'\n        };\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"60930de6467cbd1907e9aade9f9e4fa22d16db2b","contentHash":"f6d6159d25d23f484e955176d64e9c5f9774b8bb9194d0b1cb1a0c2cfdfbda2b"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/middlewares/checkAuth.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/middlewares/checkAuth.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":112}},"4":{"start":{"line":7,"column":23},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":24},"end":{"line":8,"column":58}},"6":{"start":{"line":10,"column":4},"end":{"line":20,"column":5}},"7":{"start":{"line":11,"column":24},"end":{"line":11,"column":45}},"8":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"9":{"start":{"line":13,"column":12},"end":{"line":13,"column":62}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":40}},"11":{"start":{"line":16,"column":8},"end":{"line":16,"column":15}},"12":{"start":{"line":19,"column":8},"end":{"line":19,"column":58}},"13":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}},"14":{"start":{"line":24,"column":4},"end":{"line":35,"column":5}},"15":{"start":{"line":25,"column":26},"end":{"line":25,"column":47}},"16":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"17":{"start":{"line":27,"column":12},"end":{"line":27,"column":19}},"18":{"start":{"line":30,"column":12},"end":{"line":30,"column":75}},"19":{"start":{"line":34,"column":8},"end":{"line":34,"column":71}},"20":{"start":{"line":37,"column":0},"end":{"line":37,"column":34}},"21":{"start":{"line":39,"column":4},"end":{"line":53,"column":5}},"22":{"start":{"line":40,"column":27},"end":{"line":40,"column":48}},"23":{"start":{"line":41,"column":19},"end":{"line":41,"column":53}},"24":{"start":{"line":42,"column":8},"end":{"line":49,"column":11}},"25":{"start":{"line":43,"column":12},"end":{"line":48,"column":13}},"26":{"start":{"line":44,"column":16},"end":{"line":44,"column":23}},"27":{"start":{"line":47,"column":16},"end":{"line":47,"column":85}},"28":{"start":{"line":52,"column":8},"end":{"line":52,"column":77}},"29":{"start":{"line":55,"column":0},"end":{"line":55,"column":52}},"30":{"start":{"line":57,"column":4},"end":{"line":69,"column":5}},"31":{"start":{"line":58,"column":23},"end":{"line":58,"column":48}},"32":{"start":{"line":59,"column":22},"end":{"line":59,"column":61}},"33":{"start":{"line":60,"column":24},"end":{"line":60,"column":68}},"34":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"35":{"start":{"line":62,"column":12},"end":{"line":62,"column":62}},"36":{"start":{"line":64,"column":8},"end":{"line":64,"column":40}},"37":{"start":{"line":65,"column":8},"end":{"line":65,"column":15}},"38":{"start":{"line":68,"column":8},"end":{"line":68,"column":58}},"39":{"start":{"line":71,"column":0},"end":{"line":71,"column":50}},"40":{"start":{"line":73,"column":19},"end":{"line":73,"column":41}},"41":{"start":{"line":74,"column":18},"end":{"line":74,"column":57}},"42":{"start":{"line":75,"column":20},"end":{"line":75,"column":64}},"43":{"start":{"line":76,"column":4},"end":{"line":76,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"verifyToken","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":20}},"loc":{"start":{"line":9,"column":37},"end":{"line":21,"column":1}},"line":9},"2":{"name":"verifyAdmin","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":20}},"loc":{"start":{"line":23,"column":37},"end":{"line":36,"column":1}},"line":23},"3":{"name":"productBelongsToUser","decl":{"start":{"line":38,"column":9},"end":{"line":38,"column":29}},"loc":{"start":{"line":38,"column":46},"end":{"line":54,"column":1}},"line":38},"4":{"name":"(anonymous_4)","decl":{"start":{"line":42,"column":50},"end":{"line":42,"column":51}},"loc":{"start":{"line":42,"column":61},"end":{"line":49,"column":9}},"line":42},"5":{"name":"verifyPasswordToken","decl":{"start":{"line":56,"column":9},"end":{"line":56,"column":28}},"loc":{"start":{"line":56,"column":45},"end":{"line":70,"column":1}},"line":56},"6":{"name":"decodeToken","decl":{"start":{"line":72,"column":9},"end":{"line":72,"column":20}},"loc":{"start":{"line":72,"column":31},"end":{"line":77,"column":1}},"line":72}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12},"4":{"loc":{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":31,"column":9}},{"start":{"line":26,"column":8},"end":{"line":31,"column":9}}],"line":26},"5":{"loc":{"start":{"line":43,"column":12},"end":{"line":48,"column":13}},"type":"if","locations":[{"start":{"line":43,"column":12},"end":{"line":48,"column":13}},{"start":{"line":43,"column":12},"end":{"line":48,"column":13}}],"line":43},"6":{"loc":{"start":{"line":43,"column":16},"end":{"line":43,"column":52}},"type":"binary-expr","locations":[{"start":{"line":43,"column":16},"end":{"line":43,"column":23}},{"start":{"line":43,"column":27},"end":{"line":43,"column":52}}],"line":43},"7":{"loc":{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":63,"column":9}},{"start":{"line":61,"column":8},"end":{"line":63,"column":9}}],"line":61}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":5,"7":5,"8":2,"9":0,"10":2,"11":2,"12":3,"13":1,"14":10,"15":10,"16":8,"17":5,"18":3,"19":2,"20":1,"21":4,"22":4,"23":3,"24":3,"25":3,"26":3,"27":0,"28":1,"29":1,"30":5,"31":5,"32":5,"33":4,"34":2,"35":0,"36":2,"37":2,"38":3,"39":1,"40":19,"41":19,"42":15,"43":13},"f":{"0":1,"1":5,"2":10,"3":4,"4":3,"5":5,"6":19},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,2],"4":[5,3],"5":[3,0],"6":[3,3],"7":[0,2]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/middlewares/checkAuth.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/middlewares/checkAuth.ts"],"names":[],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken';\nimport { Request, Response } from 'express';\nimport { Product } from '../models/product.model';\n\n\n\n// this function verifies if Token is valid\nexport function verifyToken(req: Request, res: Response, next: any) {\n    try {\n        const decoded = decodeToken(req, res);\n        if (decoded == null) {\n            res.status(403).send({ message: 'Unauthorized' });\n        }\n\n        req.body.tokenPayload = decoded;\n        next();\n    } catch (err) {\n        res.status(403).send({ message: 'Unauthorized' });\n    }\n}\n// this function verifies if User is Admin\nexport function verifyAdmin(req: Request, res: Response, next: any) {\n    try {\n        const {admin} = decodeToken(req, res);\n        if (admin === true) {\n            next();\n        } else {\n        res.status(403).send({ message: 'This User is not an Admin' });\n        }\n    } catch (err) {\n    res.status(403).send({ message: 'This User is not an Admin' });\n    }\n}\n\nexport function productBelongsToUser(req: Request, res: Response, next: any) {\n    try {\n        const {userId} = decodeToken(req, res);\n        const id = parseInt(req.params.productId, 10);\n        Product.findByPk(id).then(product => {\n            if (product && product.userId === userId) {\n                next();\n            } else {\n                res.status(403).send({ message: 'Product does not belong to User' });\n            }\n        });\n    } catch (err) {\n        res.status(403).send({ message: 'Product does not belong to User' });\n    }\n}\n\n// checks if the token for the password change request is valid\nexport function verifyPasswordToken(req: Request, res: Response, next: any) {\n    try {\n        const secret = process.env.JWT_PW_SECRET;\n        const token = req.headers.authorization.split(' ')[1];\n        const decoded = jwt.verify(token, secret);\n\n        if (decoded == null) {\n            res.status(403).send({ message: 'Unauthorized'});\n        }\n        req.body.tokenPayload = decoded;\n        next();\n    } catch (err) {\n        res.status(403).send({ message: 'Unauthorized' });\n    }\n}\n\n// helper-function which decodes the Token\nfunction decodeToken (req: Request, res: Response): any {\n\n        const secret = process.env.JWT_SECRET;\n        const token = req.headers.authorization.split(' ')[1];\n        const decoded = jwt.verify(token, secret);\n\n        return decoded;\n\n }\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ebcb5f407eb51cfb31e6ac4398e37d832ad51bd6","contentHash":"660e8a58c91d1a411ae13f369f9f0733f164a6f54e3dc78d09f10fb23ff68254"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/controllers/transaction.controller.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/controllers/transaction.controller.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":53}},"5":{"start":{"line":8,"column":30},"end":{"line":8,"column":72}},"6":{"start":{"line":9,"column":30},"end":{"line":9,"column":56}},"7":{"start":{"line":10,"column":27},"end":{"line":10,"column":73}},"8":{"start":{"line":11,"column":0},"end":{"line":16,"column":3}},"9":{"start":{"line":12,"column":4},"end":{"line":15,"column":49}},"10":{"start":{"line":13,"column":8},"end":{"line":13,"column":83}},"11":{"start":{"line":15,"column":22},"end":{"line":15,"column":47}},"12":{"start":{"line":17,"column":0},"end":{"line":21,"column":3}},"13":{"start":{"line":18,"column":4},"end":{"line":20,"column":49}},"14":{"start":{"line":19,"column":32},"end":{"line":19,"column":66}},"15":{"start":{"line":20,"column":22},"end":{"line":20,"column":47}},"16":{"start":{"line":22,"column":0},"end":{"line":26,"column":3}},"17":{"start":{"line":23,"column":4},"end":{"line":25,"column":49}},"18":{"start":{"line":24,"column":32},"end":{"line":24,"column":66}},"19":{"start":{"line":25,"column":22},"end":{"line":25,"column":47}},"20":{"start":{"line":27,"column":0},"end":{"line":31,"column":3}},"21":{"start":{"line":28,"column":4},"end":{"line":30,"column":49}},"22":{"start":{"line":29,"column":32},"end":{"line":29,"column":66}},"23":{"start":{"line":30,"column":22},"end":{"line":30,"column":47}},"24":{"start":{"line":32,"column":0},"end":{"line":36,"column":3}},"25":{"start":{"line":33,"column":4},"end":{"line":35,"column":49}},"26":{"start":{"line":34,"column":32},"end":{"line":34,"column":66}},"27":{"start":{"line":35,"column":22},"end":{"line":35,"column":47}},"28":{"start":{"line":37,"column":0},"end":{"line":41,"column":3}},"29":{"start":{"line":38,"column":4},"end":{"line":40,"column":49}},"30":{"start":{"line":39,"column":20},"end":{"line":39,"column":92}},"31":{"start":{"line":40,"column":22},"end":{"line":40,"column":47}},"32":{"start":{"line":42,"column":0},"end":{"line":46,"column":3}},"33":{"start":{"line":43,"column":4},"end":{"line":45,"column":49}},"34":{"start":{"line":44,"column":20},"end":{"line":44,"column":91}},"35":{"start":{"line":45,"column":22},"end":{"line":45,"column":47}},"36":{"start":{"line":47,"column":0},"end":{"line":47,"column":54}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":32},"end":{"line":11,"column":33}},"loc":{"start":{"line":11,"column":46},"end":{"line":16,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":55},"end":{"line":12,"column":56}},"loc":{"start":{"line":12,"column":61},"end":{"line":14,"column":5}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":15},"end":{"line":15,"column":16}},"loc":{"start":{"line":15,"column":22},"end":{"line":15,"column":47}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":43},"end":{"line":17,"column":44}},"loc":{"start":{"line":17,"column":57},"end":{"line":21,"column":1}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":19,"column":14},"end":{"line":19,"column":15}},"loc":{"start":{"line":19,"column":32},"end":{"line":19,"column":66}},"line":19},"6":{"name":"(anonymous_6)","decl":{"start":{"line":20,"column":15},"end":{"line":20,"column":16}},"loc":{"start":{"line":20,"column":22},"end":{"line":20,"column":47}},"line":20},"7":{"name":"(anonymous_7)","decl":{"start":{"line":22,"column":42},"end":{"line":22,"column":43}},"loc":{"start":{"line":22,"column":56},"end":{"line":26,"column":1}},"line":22},"8":{"name":"(anonymous_8)","decl":{"start":{"line":24,"column":14},"end":{"line":24,"column":15}},"loc":{"start":{"line":24,"column":32},"end":{"line":24,"column":66}},"line":24},"9":{"name":"(anonymous_9)","decl":{"start":{"line":25,"column":15},"end":{"line":25,"column":16}},"loc":{"start":{"line":25,"column":22},"end":{"line":25,"column":47}},"line":25},"10":{"name":"(anonymous_10)","decl":{"start":{"line":27,"column":69},"end":{"line":27,"column":70}},"loc":{"start":{"line":27,"column":83},"end":{"line":31,"column":1}},"line":27},"11":{"name":"(anonymous_11)","decl":{"start":{"line":29,"column":14},"end":{"line":29,"column":15}},"loc":{"start":{"line":29,"column":32},"end":{"line":29,"column":66}},"line":29},"12":{"name":"(anonymous_12)","decl":{"start":{"line":30,"column":15},"end":{"line":30,"column":16}},"loc":{"start":{"line":30,"column":22},"end":{"line":30,"column":47}},"line":30},"13":{"name":"(anonymous_13)","decl":{"start":{"line":32,"column":68},"end":{"line":32,"column":69}},"loc":{"start":{"line":32,"column":82},"end":{"line":36,"column":1}},"line":32},"14":{"name":"(anonymous_14)","decl":{"start":{"line":34,"column":14},"end":{"line":34,"column":15}},"loc":{"start":{"line":34,"column":32},"end":{"line":34,"column":66}},"line":34},"15":{"name":"(anonymous_15)","decl":{"start":{"line":35,"column":15},"end":{"line":35,"column":16}},"loc":{"start":{"line":35,"column":22},"end":{"line":35,"column":47}},"line":35},"16":{"name":"(anonymous_16)","decl":{"start":{"line":37,"column":53},"end":{"line":37,"column":54}},"loc":{"start":{"line":37,"column":67},"end":{"line":41,"column":1}},"line":37},"17":{"name":"(anonymous_17)","decl":{"start":{"line":39,"column":14},"end":{"line":39,"column":15}},"loc":{"start":{"line":39,"column":20},"end":{"line":39,"column":92}},"line":39},"18":{"name":"(anonymous_18)","decl":{"start":{"line":40,"column":15},"end":{"line":40,"column":16}},"loc":{"start":{"line":40,"column":22},"end":{"line":40,"column":47}},"line":40},"19":{"name":"(anonymous_19)","decl":{"start":{"line":42,"column":53},"end":{"line":42,"column":54}},"loc":{"start":{"line":42,"column":67},"end":{"line":46,"column":1}},"line":42},"20":{"name":"(anonymous_20)","decl":{"start":{"line":44,"column":14},"end":{"line":44,"column":15}},"loc":{"start":{"line":44,"column":20},"end":{"line":44,"column":91}},"line":44},"21":{"name":"(anonymous_21)","decl":{"start":{"line":45,"column":15},"end":{"line":45,"column":16}},"loc":{"start":{"line":45,"column":22},"end":{"line":45,"column":47}},"line":45}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":1,"17":1,"18":1,"19":0,"20":1,"21":1,"22":1,"23":0,"24":1,"25":1,"26":1,"27":0,"28":1,"29":2,"30":1,"31":1,"32":1,"33":2,"34":1,"35":1,"36":1},"f":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":0,"10":1,"11":1,"12":0,"13":1,"14":1,"15":0,"16":2,"17":1,"18":1,"19":2,"20":1,"21":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/controllers/transaction.controller.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/controllers/transaction.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import express from 'express';\nimport { Router, Request, Response } from 'express';\nimport { TransactionService } from '../services/transaction.service';\n\nconst transactionController: Router = express.Router();\nconst transactionService = new TransactionService();\n\ntransactionController.post('/', (req: Request, res: Response) => {\n    transactionService.startTransaction(req.body).then(() => {\n        res.status(200).send({message: 'Transaction successfully initialized!'});\n    })\n    .catch(err => res.status(400).send(err));\n});\n\ntransactionController.get('/sell/:userId', (req: Request, res: Response) => {\n    transactionService.getAllTransactionsOfSeller(parseInt(req.params.userId, 10))\n    .then((transactions) => res.status(200).send(transactions))\n    .catch(err => res.status(404).send(err));\n});\n\ntransactionController.get('/buy/:userId', (req: Request, res: Response) => {\n    transactionService.getAllTransactionsOfBuyer(parseInt(req.params.userId, 10))\n    .then((transactions) => res.status(200).send(transactions))\n    .catch(err => res.status(404).send(err));\n});\n\ntransactionController.get('/sell/:userId/status/:transactionStatus', (req: Request, res: Response) => {\n    transactionService.getTransactionsOfSeller(parseInt( req.params.userId, 10),\n                                               parseInt(req.params.transactionStatus, 10))\n    .then((transactions) => res.status(200).send(transactions))\n    .catch(err => res.status(404).send(err));\n});\n\ntransactionController.get('/buy/:userId/status/:transactionStatus', (req: Request, res: Response) => {\n    transactionService.getTransactionsOfBuyer(parseInt(req.params.userId, 10), parseInt(req.params.transactionStatus, 10))\n    .then((transactions) => res.status(200).send(transactions))\n    .catch(err => res.status(404).send(err));\n});\n\ntransactionController.put('/confirm/:transactionId', (req: Request, res: Response) => {\n    transactionService.confirmTransaction(parseInt(req.params.transactionId, 10))\n    .then(() => res.status(200).send({message: 'Transaction successfully confirmed!'}))\n    .catch(err => res.status(404).send(err));\n});\n\ntransactionController.put('/decline/:transactionId', (req: Request, res: Response) => {\n    transactionService.declineTransaction(parseInt(req.params.transactionId, 10))\n    .then(() => res.status(200).send({message: 'Transaction successfully declined!'}))\n    .catch(err => res.status(404).send(err));\n});\n\nexport const TransactionController: Router = transactionController;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2e44744a6f87faf36253d1e14af347630ad9c434","contentHash":"1ddda412eaa0bff2ab65696d538733c56c5e43e0ac4e99fc9e40af3ae72a2b32"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/transaction.service.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/transaction.service.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":28},"end":{"line":4,"column":66}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":52}},"4":{"start":{"line":6,"column":24},"end":{"line":6,"column":60}},"5":{"start":{"line":9,"column":8},"end":{"line":25,"column":60}},"6":{"start":{"line":11,"column":12},"end":{"line":23,"column":13}},"7":{"start":{"line":12,"column":16},"end":{"line":19,"column":19}},"8":{"start":{"line":13,"column":20},"end":{"line":15,"column":23}},"9":{"start":{"line":18,"column":20},"end":{"line":18,"column":61}},"10":{"start":{"line":22,"column":16},"end":{"line":22,"column":66}},"11":{"start":{"line":25,"column":26},"end":{"line":25,"column":58}},"12":{"start":{"line":28,"column":8},"end":{"line":102,"column":60}},"13":{"start":{"line":30,"column":12},"end":{"line":100,"column":13}},"14":{"start":{"line":31,"column":16},"end":{"line":96,"column":19}},"15":{"start":{"line":32,"column":20},"end":{"line":87,"column":23}},"16":{"start":{"line":37,"column":24},"end":{"line":37,"column":84}},"17":{"start":{"line":40,"column":24},"end":{"line":63,"column":25}},"18":{"start":{"line":41,"column":59},"end":{"line":41,"column":90}},"19":{"start":{"line":42,"column":28},"end":{"line":59,"column":31}},"20":{"start":{"line":48,"column":32},"end":{"line":53,"column":35}},"21":{"start":{"line":55,"column":50},"end":{"line":55,"column":70}},"22":{"start":{"line":56,"column":56},"end":{"line":56,"column":90}},"23":{"start":{"line":57,"column":32},"end":{"line":57,"column":74}},"24":{"start":{"line":58,"column":32},"end":{"line":58,"column":57}},"25":{"start":{"line":62,"column":28},"end":{"line":62,"column":100}},"26":{"start":{"line":66,"column":24},"end":{"line":86,"column":27}},"27":{"start":{"line":72,"column":59},"end":{"line":72,"column":94}},"28":{"start":{"line":73,"column":28},"end":{"line":85,"column":31}},"29":{"start":{"line":79,"column":32},"end":{"line":79,"column":91}},"30":{"start":{"line":81,"column":50},"end":{"line":81,"column":71}},"31":{"start":{"line":82,"column":56},"end":{"line":82,"column":90}},"32":{"start":{"line":83,"column":32},"end":{"line":83,"column":75}},"33":{"start":{"line":84,"column":32},"end":{"line":84,"column":58}},"34":{"start":{"line":90,"column":20},"end":{"line":92,"column":23}},"35":{"start":{"line":95,"column":20},"end":{"line":95,"column":61}},"36":{"start":{"line":99,"column":16},"end":{"line":99,"column":64}},"37":{"start":{"line":102,"column":26},"end":{"line":102,"column":58}},"38":{"start":{"line":105,"column":8},"end":{"line":126,"column":60}},"39":{"start":{"line":107,"column":12},"end":{"line":124,"column":13}},"40":{"start":{"line":108,"column":16},"end":{"line":120,"column":19}},"41":{"start":{"line":109,"column":20},"end":{"line":111,"column":23}},"42":{"start":{"line":114,"column":20},"end":{"line":116,"column":23}},"43":{"start":{"line":119,"column":20},"end":{"line":119,"column":61}},"44":{"start":{"line":123,"column":16},"end":{"line":123,"column":64}},"45":{"start":{"line":126,"column":26},"end":{"line":126,"column":58}},"46":{"start":{"line":129,"column":23},"end":{"line":129,"column":43}},"47":{"start":{"line":130,"column":8},"end":{"line":142,"column":47}},"48":{"start":{"line":142,"column":26},"end":{"line":142,"column":45}},"49":{"start":{"line":145,"column":23},"end":{"line":145,"column":43}},"50":{"start":{"line":146,"column":8},"end":{"line":158,"column":47}},"51":{"start":{"line":158,"column":26},"end":{"line":158,"column":45}},"52":{"start":{"line":161,"column":23},"end":{"line":161,"column":43}},"53":{"start":{"line":162,"column":8},"end":{"line":177,"column":47}},"54":{"start":{"line":177,"column":26},"end":{"line":177,"column":45}},"55":{"start":{"line":180,"column":23},"end":{"line":180,"column":43}},"56":{"start":{"line":181,"column":8},"end":{"line":196,"column":47}},"57":{"start":{"line":196,"column":26},"end":{"line":196,"column":45}},"58":{"start":{"line":199,"column":0},"end":{"line":199,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":34},"end":{"line":26,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":18},"end":{"line":10,"column":19}},"loc":{"start":{"line":10,"column":40},"end":{"line":24,"column":9}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":89},"end":{"line":12,"column":90}},"loc":{"start":{"line":12,"column":105},"end":{"line":16,"column":17}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":26},"end":{"line":17,"column":27}},"loc":{"start":{"line":17,"column":32},"end":{"line":19,"column":17}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":19},"end":{"line":25,"column":20}},"loc":{"start":{"line":25,"column":26},"end":{"line":25,"column":58}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":38},"end":{"line":103,"column":5}},"line":27},"6":{"name":"(anonymous_6)","decl":{"start":{"line":29,"column":18},"end":{"line":29,"column":19}},"loc":{"start":{"line":29,"column":40},"end":{"line":101,"column":9}},"line":29},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":89},"end":{"line":31,"column":90}},"loc":{"start":{"line":31,"column":105},"end":{"line":88,"column":17}},"line":31},"8":{"name":"(anonymous_8)","decl":{"start":{"line":36,"column":30},"end":{"line":36,"column":31}},"loc":{"start":{"line":36,"column":36},"end":{"line":38,"column":21}},"line":36},"9":{"name":"(anonymous_9)","decl":{"start":{"line":39,"column":30},"end":{"line":39,"column":31}},"loc":{"start":{"line":39,"column":46},"end":{"line":64,"column":21}},"line":39},"10":{"name":"(anonymous_10)","decl":{"start":{"line":47,"column":36},"end":{"line":47,"column":37}},"loc":{"start":{"line":47,"column":42},"end":{"line":54,"column":29}},"line":47},"11":{"name":"(anonymous_11)","decl":{"start":{"line":54,"column":36},"end":{"line":54,"column":37}},"loc":{"start":{"line":54,"column":42},"end":{"line":59,"column":29}},"line":54},"12":{"name":"(anonymous_12)","decl":{"start":{"line":65,"column":30},"end":{"line":65,"column":31}},"loc":{"start":{"line":65,"column":36},"end":{"line":87,"column":21}},"line":65},"13":{"name":"(anonymous_13)","decl":{"start":{"line":71,"column":32},"end":{"line":71,"column":33}},"loc":{"start":{"line":71,"column":38},"end":{"line":86,"column":25}},"line":71},"14":{"name":"(anonymous_14)","decl":{"start":{"line":78,"column":36},"end":{"line":78,"column":37}},"loc":{"start":{"line":78,"column":42},"end":{"line":80,"column":29}},"line":78},"15":{"name":"(anonymous_15)","decl":{"start":{"line":80,"column":36},"end":{"line":80,"column":37}},"loc":{"start":{"line":80,"column":53},"end":{"line":85,"column":29}},"line":80},"16":{"name":"(anonymous_16)","decl":{"start":{"line":89,"column":26},"end":{"line":89,"column":27}},"loc":{"start":{"line":89,"column":32},"end":{"line":93,"column":17}},"line":89},"17":{"name":"(anonymous_17)","decl":{"start":{"line":94,"column":26},"end":{"line":94,"column":27}},"loc":{"start":{"line":94,"column":32},"end":{"line":96,"column":17}},"line":94},"18":{"name":"(anonymous_18)","decl":{"start":{"line":102,"column":19},"end":{"line":102,"column":20}},"loc":{"start":{"line":102,"column":26},"end":{"line":102,"column":58}},"line":102},"19":{"name":"(anonymous_19)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":38},"end":{"line":127,"column":5}},"line":104},"20":{"name":"(anonymous_20)","decl":{"start":{"line":106,"column":18},"end":{"line":106,"column":19}},"loc":{"start":{"line":106,"column":40},"end":{"line":125,"column":9}},"line":106},"21":{"name":"(anonymous_21)","decl":{"start":{"line":108,"column":89},"end":{"line":108,"column":90}},"loc":{"start":{"line":108,"column":105},"end":{"line":112,"column":17}},"line":108},"22":{"name":"(anonymous_22)","decl":{"start":{"line":113,"column":26},"end":{"line":113,"column":27}},"loc":{"start":{"line":113,"column":32},"end":{"line":117,"column":17}},"line":113},"23":{"name":"(anonymous_23)","decl":{"start":{"line":118,"column":26},"end":{"line":118,"column":27}},"loc":{"start":{"line":118,"column":32},"end":{"line":120,"column":17}},"line":118},"24":{"name":"(anonymous_24)","decl":{"start":{"line":126,"column":19},"end":{"line":126,"column":20}},"loc":{"start":{"line":126,"column":26},"end":{"line":126,"column":58}},"line":126},"25":{"name":"(anonymous_25)","decl":{"start":{"line":128,"column":4},"end":{"line":128,"column":5}},"loc":{"start":{"line":128,"column":41},"end":{"line":143,"column":5}},"line":128},"26":{"name":"(anonymous_26)","decl":{"start":{"line":142,"column":19},"end":{"line":142,"column":20}},"loc":{"start":{"line":142,"column":26},"end":{"line":142,"column":45}},"line":142},"27":{"name":"(anonymous_27)","decl":{"start":{"line":144,"column":4},"end":{"line":144,"column":5}},"loc":{"start":{"line":144,"column":39},"end":{"line":159,"column":5}},"line":144},"28":{"name":"(anonymous_28)","decl":{"start":{"line":158,"column":19},"end":{"line":158,"column":20}},"loc":{"start":{"line":158,"column":26},"end":{"line":158,"column":45}},"line":158},"29":{"name":"(anonymous_29)","decl":{"start":{"line":160,"column":4},"end":{"line":160,"column":5}},"loc":{"start":{"line":160,"column":57},"end":{"line":178,"column":5}},"line":160},"30":{"name":"(anonymous_30)","decl":{"start":{"line":177,"column":19},"end":{"line":177,"column":20}},"loc":{"start":{"line":177,"column":26},"end":{"line":177,"column":45}},"line":177},"31":{"name":"(anonymous_31)","decl":{"start":{"line":179,"column":4},"end":{"line":179,"column":5}},"loc":{"start":{"line":179,"column":55},"end":{"line":197,"column":5}},"line":179},"32":{"name":"(anonymous_32)","decl":{"start":{"line":196,"column":19},"end":{"line":196,"column":20}},"loc":{"start":{"line":196,"column":26},"end":{"line":196,"column":45}},"line":196}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":12},"end":{"line":23,"column":13}},"type":"if","locations":[{"start":{"line":11,"column":12},"end":{"line":23,"column":13}},{"start":{"line":11,"column":12},"end":{"line":23,"column":13}}],"line":11},"1":{"loc":{"start":{"line":30,"column":12},"end":{"line":100,"column":13}},"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":100,"column":13}},{"start":{"line":30,"column":12},"end":{"line":100,"column":13}}],"line":30},"2":{"loc":{"start":{"line":40,"column":24},"end":{"line":63,"column":25}},"type":"if","locations":[{"start":{"line":40,"column":24},"end":{"line":63,"column":25}},{"start":{"line":40,"column":24},"end":{"line":63,"column":25}}],"line":40},"3":{"loc":{"start":{"line":107,"column":12},"end":{"line":124,"column":13}},"type":"if","locations":[{"start":{"line":107,"column":12},"end":{"line":124,"column":13}},{"start":{"line":107,"column":12},"end":{"line":124,"column":13}}],"line":107}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":4,"6":2,"7":2,"8":2,"9":2,"10":0,"11":2,"12":5,"13":5,"14":3,"15":3,"16":3,"17":3,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":1,"26":2,"27":2,"28":2,"29":2,"30":2,"31":2,"32":2,"33":2,"34":2,"35":2,"36":2,"37":3,"38":4,"39":4,"40":2,"41":2,"42":2,"43":2,"44":2,"45":2,"46":2,"47":2,"48":0,"49":2,"50":2,"51":0,"52":2,"53":2,"54":0,"55":2,"56":2,"57":0,"58":1},"f":{"0":4,"1":2,"2":2,"3":2,"4":2,"5":5,"6":5,"7":3,"8":3,"9":3,"10":2,"11":2,"12":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":3,"19":4,"20":4,"21":2,"22":2,"23":2,"24":2,"25":2,"26":0,"27":2,"28":0,"29":2,"30":0,"31":2,"32":0},"b":{"0":[2,0],"1":[3,2],"2":[2,1],"3":[2,2]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/transaction.service.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/transaction.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Transaction, TransactionAttributes } from '../models/transaction.model';\nimport { User } from '../models/user.model';\nimport { Product } from './../models/product.model';\n\n\nexport class TransactionService {\n    public startTransaction(transaction: TransactionAttributes): Promise<TransactionAttributes> {\n        return Transaction.create(transaction)\n        .then((foundTransaction) => {\n            if (foundTransaction != null) {\n                return Product.findByPk(foundTransaction.productId).then(foundProduct => {\n                    return foundProduct.update({\n                        isAvailable: false\n                    });\n                })\n                .then(() => {\n                    return Promise.resolve(foundTransaction);\n                });\n            } else {\n                return Promise.reject('Transaction not created!');\n            }\n        })\n        .catch(err => Promise.reject({message: err}));\n    }\n\n    public confirmTransaction(transactionId: number): Promise<TransactionAttributes> {\n        return Transaction.findByPk(transactionId)\n        .then((foundTransaction) => {\n            if (foundTransaction != null) {\n                return Product.findByPk(foundTransaction.productId).then(foundProduct => {\n                    return foundProduct.update({\n                        sellDate: new Date(Date.now()),\n                        buyerId: foundTransaction.buyerId\n                    })\n                    .then(() => {\n                        return User.findByPk(foundTransaction.buyerId);\n                    })\n                    .then((foundBuyer) => {\n                        if (foundProduct.productPrice <= foundBuyer.wallet) {\n                            const activityScoreIncrement = foundProduct.productPrice * 0.1;\n                            return User.increment('wallet', {\n                                by: -foundProduct.productPrice,\n                                where: {\n                                    userId: foundTransaction.buyerId\n                                }\n                            }).then(() => {\n                                return User.increment('activityScore', {\n                                    by: activityScoreIncrement,\n                                    where: {\n                                        userId: foundTransaction.buyerId\n                                    }\n                                });\n                            }).then(() => {\n                                const gameScore = foundBuyer.gameScore;\n                                const newOverallScore = gameScore + activityScoreIncrement;\n                                foundBuyer.overallScore = newOverallScore;\n                                return foundBuyer.save();\n                            });\n                        } else {\n                            return Promise.reject('Not enough money available to buy the product!');\n                        }\n                    })\n                    .then(() => {\n                        return User.increment('wallet', {\n                            by: foundProduct.productPrice,\n                            where: {\n                                userId: foundTransaction.userId\n                            }\n                        }).then(() => {\n                            const activityScoreIncrement = 2 * foundProduct.productPrice * 0.1;\n                            return User.increment('activityScore', {\n                                by: activityScoreIncrement,\n                                where: {\n                                    userId: foundTransaction.userId\n                                }\n                            }).then(() => {\n                                return User.findByPk(foundTransaction.userId);\n                            }).then((foundSeller) => {\n                                const gameScore = foundSeller.gameScore;\n                                const newOverallScore = gameScore + activityScoreIncrement;\n                                foundSeller.overallScore = newOverallScore;\n                                return foundSeller.save();\n                            });\n                        });\n                    });\n                })\n        .then(() => {\n            foundTransaction.update({\n                transactionStatus: 2\n            });\n        })\n        .then(() => {\n            return Promise.resolve(foundTransaction);\n        });\n            } else {\n                return Promise.reject('Transaction not found!');\n            }\n        })\n        .catch(err => Promise.reject({message: err}));\n    }\n\n    public declineTransaction(transactionId: number): Promise<TransactionAttributes> {\n        return Transaction.findByPk(transactionId)\n        .then((foundTransaction) => {\n            if (foundTransaction != null) {\n                return Product.findByPk(foundTransaction.productId).then(foundProduct => {\n                    return foundProduct.update({\n                        isAvailable: true\n                    });\n                })\n                .then(() => {\n                    foundTransaction.update({\n                        transactionStatus: 3\n                    });\n                })\n                .then(() => {\n                    return Promise.resolve(foundTransaction);\n                });\n            } else {\n                return Promise.reject('Transaction not found!');\n            }\n        })\n        .catch(err => Promise.reject({message: err}));\n    }\n\n    public getAllTransactionsOfSeller(sellerId: number): Promise<Transaction[]> {\n        const {Op} = require('sequelize');\n        return Transaction.findAll({\n            include: [\n                Transaction.associations.product,\n                Transaction.associations.seller,\n                Transaction.associations.buyer\n            ],\n            where: {\n                [Op.and]: [\n                    { userId: sellerId }\n                ]\n            },\n\n        })\n        .catch(err => Promise.reject(err));\n    }\n\n    public getAllTransactionsOfBuyer(buyerId: number): Promise<Transaction[]> {\n        const {Op} = require('sequelize');\n        return Transaction.findAll({\n            include: [\n                Transaction.associations.product,\n                Transaction.associations.seller,\n                Transaction.associations.buyer\n            ],\n            where: {\n                [Op.and]: [\n                    { buyerId: buyerId }\n                ]\n            }\n        })\n        .catch(err => Promise.reject(err));\n    }\n\n    public getTransactionsOfSeller(sellerId: number, transactionStatus: number): Promise<Transaction[]> {\n        const {Op} = require('sequelize');\n        return Transaction.findAll({\n            include: [\n                Transaction.associations.product,\n                Transaction.associations.seller,\n                Transaction.associations.buyer\n            ],\n            where: {\n                [Op.and]: [\n                    {\n                        userId: sellerId,\n                        transactionStatus: transactionStatus\n                    }\n                ]\n            }\n        })\n        .catch(err => Promise.reject(err));\n    }\n\n    public getTransactionsOfBuyer(buyerId: number, transactionStatus: number): Promise<Transaction[]> {\n        const {Op} = require('sequelize');\n        return Transaction.findAll({\n            include: [\n                Transaction.associations.product,\n                Transaction.associations.seller,\n                Transaction.associations.buyer\n            ],\n            where: {\n                [Op.and]: [\n                    {\n                        buyerId: buyerId,\n                        transactionStatus: transactionStatus\n                    }\n                ]\n            }\n        })\n        .catch(err => Promise.reject(err));\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a3ed3a50b9d207e5f5fa7e2e17134cb1888b1d02","contentHash":"e0316a09d435ece10f2c43956ea6f53f983a06d82623525de8da463b3e42c6b6"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/controllers/product.controller.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/controllers/product.controller.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"4":{"start":{"line":7,"column":18},"end":{"line":7,"column":53}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":55}},"6":{"start":{"line":9,"column":21},"end":{"line":9,"column":57}},"7":{"start":{"line":10,"column":26},"end":{"line":10,"column":64}},"8":{"start":{"line":11,"column":26},"end":{"line":11,"column":52}},"9":{"start":{"line":12,"column":23},"end":{"line":12,"column":61}},"10":{"start":{"line":13,"column":0},"end":{"line":16,"column":3}},"11":{"start":{"line":14,"column":4},"end":{"line":15,"column":49}},"12":{"start":{"line":14,"column":52},"end":{"line":14,"column":81}},"13":{"start":{"line":15,"column":22},"end":{"line":15,"column":47}},"14":{"start":{"line":17,"column":0},"end":{"line":20,"column":3}},"15":{"start":{"line":18,"column":4},"end":{"line":19,"column":49}},"16":{"start":{"line":18,"column":63},"end":{"line":18,"column":84}},"17":{"start":{"line":19,"column":22},"end":{"line":19,"column":47}},"18":{"start":{"line":21,"column":0},"end":{"line":25,"column":3}},"19":{"start":{"line":22,"column":4},"end":{"line":24,"column":49}},"20":{"start":{"line":23,"column":20},"end":{"line":23,"column":110}},"21":{"start":{"line":24,"column":22},"end":{"line":24,"column":47}},"22":{"start":{"line":26,"column":0},"end":{"line":30,"column":3}},"23":{"start":{"line":27,"column":4},"end":{"line":29,"column":49}},"24":{"start":{"line":28,"column":20},"end":{"line":28,"column":86}},"25":{"start":{"line":29,"column":22},"end":{"line":29,"column":47}},"26":{"start":{"line":31,"column":0},"end":{"line":35,"column":3}},"27":{"start":{"line":32,"column":15},"end":{"line":32,"column":49}},"28":{"start":{"line":33,"column":4},"end":{"line":34,"column":49}},"29":{"start":{"line":33,"column":48},"end":{"line":33,"column":120}},"30":{"start":{"line":34,"column":22},"end":{"line":34,"column":47}},"31":{"start":{"line":36,"column":0},"end":{"line":39,"column":3}},"32":{"start":{"line":37,"column":4},"end":{"line":38,"column":49}},"33":{"start":{"line":37,"column":45},"end":{"line":37,"column":75}},"34":{"start":{"line":38,"column":22},"end":{"line":38,"column":47}},"35":{"start":{"line":40,"column":0},"end":{"line":43,"column":3}},"36":{"start":{"line":41,"column":4},"end":{"line":42,"column":49}},"37":{"start":{"line":41,"column":53},"end":{"line":41,"column":83}},"38":{"start":{"line":42,"column":22},"end":{"line":42,"column":47}},"39":{"start":{"line":44,"column":0},"end":{"line":47,"column":3}},"40":{"start":{"line":45,"column":4},"end":{"line":46,"column":49}},"41":{"start":{"line":45,"column":55},"end":{"line":45,"column":85}},"42":{"start":{"line":46,"column":22},"end":{"line":46,"column":47}},"43":{"start":{"line":48,"column":0},"end":{"line":51,"column":3}},"44":{"start":{"line":49,"column":4},"end":{"line":50,"column":49}},"45":{"start":{"line":49,"column":79},"end":{"line":49,"column":109}},"46":{"start":{"line":50,"column":22},"end":{"line":50,"column":47}},"47":{"start":{"line":52,"column":0},"end":{"line":56,"column":3}},"48":{"start":{"line":53,"column":4},"end":{"line":55,"column":49}},"49":{"start":{"line":54,"column":26},"end":{"line":54,"column":56}},"50":{"start":{"line":55,"column":22},"end":{"line":55,"column":47}},"51":{"start":{"line":57,"column":0},"end":{"line":59,"column":3}},"52":{"start":{"line":58,"column":4},"end":{"line":58,"column":153}},"53":{"start":{"line":58,"column":82},"end":{"line":58,"column":111}},"54":{"start":{"line":58,"column":126},"end":{"line":58,"column":151}},"55":{"start":{"line":60,"column":0},"end":{"line":62,"column":3}},"56":{"start":{"line":61,"column":4},"end":{"line":61,"column":157}},"57":{"start":{"line":61,"column":86},"end":{"line":61,"column":115}},"58":{"start":{"line":61,"column":130},"end":{"line":61,"column":155}},"59":{"start":{"line":63,"column":0},"end":{"line":65,"column":3}},"60":{"start":{"line":64,"column":4},"end":{"line":64,"column":155}},"61":{"start":{"line":64,"column":84},"end":{"line":64,"column":113}},"62":{"start":{"line":64,"column":128},"end":{"line":64,"column":153}},"63":{"start":{"line":66,"column":0},"end":{"line":70,"column":3}},"64":{"start":{"line":67,"column":4},"end":{"line":69,"column":49}},"65":{"start":{"line":68,"column":22},"end":{"line":68,"column":102}},"66":{"start":{"line":69,"column":22},"end":{"line":69,"column":47}},"67":{"start":{"line":71,"column":0},"end":{"line":74,"column":3}},"68":{"start":{"line":72,"column":4},"end":{"line":73,"column":49}},"69":{"start":{"line":72,"column":82},"end":{"line":72,"column":98}},"70":{"start":{"line":73,"column":22},"end":{"line":73,"column":47}},"71":{"start":{"line":75,"column":0},"end":{"line":82,"column":3}},"72":{"start":{"line":76,"column":17},"end":{"line":76,"column":32}},"73":{"start":{"line":77,"column":15},"end":{"line":77,"column":28}},"74":{"start":{"line":78,"column":4},"end":{"line":81,"column":48}},"75":{"start":{"line":79,"column":24},"end":{"line":81,"column":6}},"76":{"start":{"line":80,"column":8},"end":{"line":80,"column":40}},"77":{"start":{"line":81,"column":21},"end":{"line":81,"column":46}},"78":{"start":{"line":83,"column":0},"end":{"line":87,"column":3}},"79":{"start":{"line":84,"column":4},"end":{"line":86,"column":49}},"80":{"start":{"line":85,"column":20},"end":{"line":85,"column":84}},"81":{"start":{"line":86,"column":22},"end":{"line":86,"column":47}},"82":{"start":{"line":88,"column":0},"end":{"line":88,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":28},"end":{"line":13,"column":29}},"loc":{"start":{"line":13,"column":42},"end":{"line":16,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":41},"end":{"line":14,"column":42}},"loc":{"start":{"line":14,"column":52},"end":{"line":14,"column":81}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":15},"end":{"line":15,"column":16}},"loc":{"start":{"line":15,"column":22},"end":{"line":15,"column":47}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":34},"end":{"line":17,"column":35}},"loc":{"start":{"line":17,"column":48},"end":{"line":20,"column":1}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":48},"end":{"line":18,"column":49}},"loc":{"start":{"line":18,"column":63},"end":{"line":18,"column":84}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":19,"column":15},"end":{"line":19,"column":16}},"loc":{"start":{"line":19,"column":22},"end":{"line":19,"column":47}},"line":19},"7":{"name":"(anonymous_7)","decl":{"start":{"line":21,"column":37},"end":{"line":21,"column":38}},"loc":{"start":{"line":21,"column":51},"end":{"line":25,"column":1}},"line":21},"8":{"name":"(anonymous_8)","decl":{"start":{"line":23,"column":14},"end":{"line":23,"column":15}},"loc":{"start":{"line":23,"column":20},"end":{"line":23,"column":110}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":15},"end":{"line":24,"column":16}},"loc":{"start":{"line":24,"column":22},"end":{"line":24,"column":47}},"line":24},"10":{"name":"(anonymous_10)","decl":{"start":{"line":26,"column":33},"end":{"line":26,"column":34}},"loc":{"start":{"line":26,"column":47},"end":{"line":30,"column":1}},"line":26},"11":{"name":"(anonymous_11)","decl":{"start":{"line":28,"column":14},"end":{"line":28,"column":15}},"loc":{"start":{"line":28,"column":20},"end":{"line":28,"column":86}},"line":28},"12":{"name":"(anonymous_12)","decl":{"start":{"line":29,"column":15},"end":{"line":29,"column":16}},"loc":{"start":{"line":29,"column":22},"end":{"line":29,"column":47}},"line":29},"13":{"name":"(anonymous_13)","decl":{"start":{"line":31,"column":63},"end":{"line":31,"column":64}},"loc":{"start":{"line":31,"column":77},"end":{"line":35,"column":1}},"line":31},"14":{"name":"(anonymous_14)","decl":{"start":{"line":33,"column":36},"end":{"line":33,"column":37}},"loc":{"start":{"line":33,"column":48},"end":{"line":33,"column":120}},"line":33},"15":{"name":"(anonymous_15)","decl":{"start":{"line":34,"column":15},"end":{"line":34,"column":16}},"loc":{"start":{"line":34,"column":22},"end":{"line":34,"column":47}},"line":34},"16":{"name":"(anonymous_16)","decl":{"start":{"line":36,"column":27},"end":{"line":36,"column":28}},"loc":{"start":{"line":36,"column":41},"end":{"line":39,"column":1}},"line":36},"17":{"name":"(anonymous_17)","decl":{"start":{"line":37,"column":33},"end":{"line":37,"column":34}},"loc":{"start":{"line":37,"column":45},"end":{"line":37,"column":75}},"line":37},"18":{"name":"(anonymous_18)","decl":{"start":{"line":38,"column":15},"end":{"line":38,"column":16}},"loc":{"start":{"line":38,"column":22},"end":{"line":38,"column":47}},"line":38},"19":{"name":"(anonymous_19)","decl":{"start":{"line":40,"column":35},"end":{"line":40,"column":36}},"loc":{"start":{"line":40,"column":49},"end":{"line":43,"column":1}},"line":40},"20":{"name":"(anonymous_20)","decl":{"start":{"line":41,"column":41},"end":{"line":41,"column":42}},"loc":{"start":{"line":41,"column":53},"end":{"line":41,"column":83}},"line":41},"21":{"name":"(anonymous_21)","decl":{"start":{"line":42,"column":15},"end":{"line":42,"column":16}},"loc":{"start":{"line":42,"column":22},"end":{"line":42,"column":47}},"line":42},"22":{"name":"(anonymous_22)","decl":{"start":{"line":44,"column":37},"end":{"line":44,"column":38}},"loc":{"start":{"line":44,"column":51},"end":{"line":47,"column":1}},"line":44},"23":{"name":"(anonymous_23)","decl":{"start":{"line":45,"column":43},"end":{"line":45,"column":44}},"loc":{"start":{"line":45,"column":55},"end":{"line":45,"column":85}},"line":45},"24":{"name":"(anonymous_24)","decl":{"start":{"line":46,"column":15},"end":{"line":46,"column":16}},"loc":{"start":{"line":46,"column":22},"end":{"line":46,"column":47}},"line":46},"25":{"name":"(anonymous_25)","decl":{"start":{"line":48,"column":45},"end":{"line":48,"column":46}},"loc":{"start":{"line":48,"column":59},"end":{"line":51,"column":1}},"line":48},"26":{"name":"(anonymous_26)","decl":{"start":{"line":49,"column":67},"end":{"line":49,"column":68}},"loc":{"start":{"line":49,"column":79},"end":{"line":49,"column":109}},"line":49},"27":{"name":"(anonymous_27)","decl":{"start":{"line":50,"column":15},"end":{"line":50,"column":16}},"loc":{"start":{"line":50,"column":22},"end":{"line":50,"column":47}},"line":50},"28":{"name":"(anonymous_28)","decl":{"start":{"line":52,"column":39},"end":{"line":52,"column":40}},"loc":{"start":{"line":52,"column":53},"end":{"line":56,"column":1}},"line":52},"29":{"name":"(anonymous_29)","decl":{"start":{"line":54,"column":14},"end":{"line":54,"column":15}},"loc":{"start":{"line":54,"column":26},"end":{"line":54,"column":56}},"line":54},"30":{"name":"(anonymous_30)","decl":{"start":{"line":55,"column":15},"end":{"line":55,"column":16}},"loc":{"start":{"line":55,"column":22},"end":{"line":55,"column":47}},"line":55},"31":{"name":"(anonymous_31)","decl":{"start":{"line":57,"column":37},"end":{"line":57,"column":38}},"loc":{"start":{"line":57,"column":51},"end":{"line":59,"column":1}},"line":57},"32":{"name":"(anonymous_32)","decl":{"start":{"line":58,"column":71},"end":{"line":58,"column":72}},"loc":{"start":{"line":58,"column":82},"end":{"line":58,"column":111}},"line":58},"33":{"name":"(anonymous_33)","decl":{"start":{"line":58,"column":119},"end":{"line":58,"column":120}},"loc":{"start":{"line":58,"column":126},"end":{"line":58,"column":151}},"line":58},"34":{"name":"(anonymous_34)","decl":{"start":{"line":60,"column":41},"end":{"line":60,"column":42}},"loc":{"start":{"line":60,"column":55},"end":{"line":62,"column":1}},"line":60},"35":{"name":"(anonymous_35)","decl":{"start":{"line":61,"column":75},"end":{"line":61,"column":76}},"loc":{"start":{"line":61,"column":86},"end":{"line":61,"column":115}},"line":61},"36":{"name":"(anonymous_36)","decl":{"start":{"line":61,"column":123},"end":{"line":61,"column":124}},"loc":{"start":{"line":61,"column":130},"end":{"line":61,"column":155}},"line":61},"37":{"name":"(anonymous_37)","decl":{"start":{"line":63,"column":39},"end":{"line":63,"column":40}},"loc":{"start":{"line":63,"column":53},"end":{"line":65,"column":1}},"line":63},"38":{"name":"(anonymous_38)","decl":{"start":{"line":64,"column":73},"end":{"line":64,"column":74}},"loc":{"start":{"line":64,"column":84},"end":{"line":64,"column":113}},"line":64},"39":{"name":"(anonymous_39)","decl":{"start":{"line":64,"column":121},"end":{"line":64,"column":122}},"loc":{"start":{"line":64,"column":128},"end":{"line":64,"column":153}},"line":64},"40":{"name":"(anonymous_40)","decl":{"start":{"line":66,"column":111},"end":{"line":66,"column":112}},"loc":{"start":{"line":66,"column":125},"end":{"line":70,"column":1}},"line":66},"41":{"name":"(anonymous_41)","decl":{"start":{"line":68,"column":14},"end":{"line":68,"column":15}},"loc":{"start":{"line":68,"column":22},"end":{"line":68,"column":102}},"line":68},"42":{"name":"(anonymous_42)","decl":{"start":{"line":69,"column":15},"end":{"line":69,"column":16}},"loc":{"start":{"line":69,"column":22},"end":{"line":69,"column":47}},"line":69},"43":{"name":"(anonymous_43)","decl":{"start":{"line":71,"column":51},"end":{"line":71,"column":52}},"loc":{"start":{"line":71,"column":65},"end":{"line":74,"column":1}},"line":71},"44":{"name":"(anonymous_44)","decl":{"start":{"line":72,"column":72},"end":{"line":72,"column":73}},"loc":{"start":{"line":72,"column":82},"end":{"line":72,"column":98}},"line":72},"45":{"name":"(anonymous_45)","decl":{"start":{"line":73,"column":15},"end":{"line":73,"column":16}},"loc":{"start":{"line":73,"column":22},"end":{"line":73,"column":47}},"line":73},"46":{"name":"(anonymous_46)","decl":{"start":{"line":75,"column":50},"end":{"line":75,"column":51}},"loc":{"start":{"line":75,"column":64},"end":{"line":82,"column":1}},"line":75},"47":{"name":"(anonymous_47)","decl":{"start":{"line":79,"column":14},"end":{"line":79,"column":15}},"loc":{"start":{"line":79,"column":24},"end":{"line":81,"column":6}},"line":79},"48":{"name":"(anonymous_48)","decl":{"start":{"line":79,"column":91},"end":{"line":79,"column":92}},"loc":{"start":{"line":79,"column":97},"end":{"line":81,"column":5}},"line":79},"49":{"name":"(anonymous_49)","decl":{"start":{"line":81,"column":14},"end":{"line":81,"column":15}},"loc":{"start":{"line":81,"column":21},"end":{"line":81,"column":46}},"line":81},"50":{"name":"(anonymous_50)","decl":{"start":{"line":83,"column":45},"end":{"line":83,"column":46}},"loc":{"start":{"line":83,"column":59},"end":{"line":87,"column":1}},"line":83},"51":{"name":"(anonymous_51)","decl":{"start":{"line":85,"column":14},"end":{"line":85,"column":15}},"loc":{"start":{"line":85,"column":20},"end":{"line":85,"column":84}},"line":85},"52":{"name":"(anonymous_52)","decl":{"start":{"line":86,"column":15},"end":{"line":86,"column":16}},"loc":{"start":{"line":86,"column":22},"end":{"line":86,"column":47}},"line":86}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":1,"19":2,"20":1,"21":1,"22":1,"23":2,"24":1,"25":1,"26":1,"27":0,"28":0,"29":0,"30":0,"31":1,"32":1,"33":1,"34":0,"35":1,"36":1,"37":1,"38":0,"39":1,"40":1,"41":1,"42":0,"43":1,"44":1,"45":1,"46":0,"47":1,"48":1,"49":1,"50":0,"51":1,"52":1,"53":1,"54":0,"55":1,"56":1,"57":1,"58":0,"59":1,"60":1,"61":1,"62":0,"63":1,"64":2,"65":2,"66":0,"67":1,"68":1,"69":1,"70":0,"71":1,"72":2,"73":2,"74":2,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":0,"82":1},"f":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":2,"8":1,"9":1,"10":2,"11":1,"12":1,"13":0,"14":0,"15":0,"16":1,"17":1,"18":0,"19":1,"20":1,"21":0,"22":1,"23":1,"24":0,"25":1,"26":1,"27":0,"28":1,"29":1,"30":0,"31":1,"32":1,"33":0,"34":1,"35":1,"36":0,"37":1,"38":1,"39":0,"40":2,"41":2,"42":0,"43":1,"44":1,"45":0,"46":2,"47":1,"48":1,"49":1,"50":1,"51":1,"52":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/controllers/product.controller.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/controllers/product.controller.ts"],"names":[],"mappings":"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","sourcesContent":["import express from 'express';\nimport { Router, Request, Response } from 'express';\nimport { productBelongsToUser, verifyAdmin} from '../middlewares/checkAuth';\nimport { uploadFile } from '../middlewares/uploadFile';\nimport { ProductService } from '../services/product.service';\n\nconst productController: Router = express.Router();\nconst productService = new ProductService();\n\n\nproductController.post('/', (req: Request, res: Response) => {\n    productService.create(req.body).then(product =>\n        res.status(200).send(product))\n        .catch(err => res.status(400).send(err));\n});\n\nproductController.post('/search', (req: Request, res: Response) => {\n    productService.searchProduct(req.body).then(productList => res.send(productList))\n    .catch(err => res.status(400).send(err));\n}); // search product by keyword and filters\n\nproductController.put('/:productId', (req: Request, res: Response) => {\n    productService.update(parseInt(req.params.productId, 10), req.body)\n    .then(() => res.status(200).send({message: `Product ${req.params.productId} successfully updated!` }))\n    .catch(err => res.status(400).send(err));\n});\n\nproductController.delete('/:id', (req: Request, res: Response) => {\n    productService.deleteProduct(parseInt(req.params.id, 10))\n    .then(() => res.status(200).send({message: `Product successfully deleted!`}))\n    .catch(err => res.status(400).send(err));\n});\n\nproductController.put('/approve/:id', verifyAdmin,\n    (req: Request, res: Response) => {\n        const id = Number.parseInt(req.params.id, 10);\n        productService.approve(id).then(approved => res.send({message: 'Successfully approved product ' + approved + '!'}))\n        .catch(err => res.status(500).send(err));\n    }\n);\nproductController.get('/', (req: Request, res: Response) => {\n        productService.getAll().then(products => res.status(200).send(products))\n            .catch(err => res.status(404).send(err));\n    }\n); // get all products\n\nproductController.get('/approved', (req: Request, res: Response) => {\n    productService.getAllApproved().then(products => res.status(200).send(products))\n    .catch(err => res.status(404).send(err));\n    }\n); // get all approved products\n\nproductController.get('/unapproved', (req: Request, res: Response) => {\n    productService.getAllUnapproved().then(products => res.status(200).send(products))\n    .catch(err => res.status(404).send(err));\n    }\n); // get all approved products\n\nproductController.get('/category/:category', (req: Request, res: Response) => {\n    productService.getProductsOfCategory(req.params.category).then(products =>\n        res.status(200).send(products))\n        .catch(err => res.status(404).send(err));\n    }\n); // get all products that are available of a category\n\nproductController.get('/user/:userId', (req: Request, res: Response) => {\n    productService.getProductsOfUser(parseInt(req.params.userId, 10))\n    .then(products => res.status(200).send(products))\n    .catch(err => res.status(404).send(err));\n    }\n); // get all products of a user\n\nproductController.get('/:productId', (req: Request, res: Response) => {\n    productService.getProduct(parseInt(req.params.productId, 10)).then(product =>\n         res.status(200).send(product)).catch(err => res.status(404).send(err));\n    }\n); // get product by id\n\nproductController.get('/bought/:userId', (req: Request, res: Response) => {\n    productService.getBoughtProducts(parseInt(req.params.userId, 10)).then(product =>\n         res.status(200).send(product)).catch(err => res.status(404).send(err));\n    }\n); // get all bought products of a user\n\nproductController.get('/sold/:userId', (req: Request, res: Response) => {\n    productService.getSoldProducts(parseInt(req.params.userId, 10)).then(product =>\n         res.status(200).send(product)).catch(err => res.status(404).send(err));\n    }\n); // get all bought products of a user\n\n\n// Images //\n\nproductController.post('/images/upload/:productId', productBelongsToUser , uploadFile,\n (req: Request, res: Response) => {\n    productService.uploadImage(req.file, parseInt(req.params.productId, 10))\n    .then((id) => res.send({ message: 'Successfully uploaded Image with id ' + id.imageId + '!'}))\n    .catch(err => res.status(404).send(err));\n});\n\nproductController.get('/images/getIds/:productId',\n (req: Request, res: Response) => {\n    productService.getImageIds(parseInt(req.params.productId, 10)).then(images => res.send(images))\n    .catch(err => res.status(404).send(err));\n});\n\nproductController.get('/images/getById/:imageId', (req: Request, res: Response) => {\n    const path = require('path');\n    const fs = require('fs');\n    productService.getImageById(parseInt(req.params.imageId, 10))\n    .then(images => res.sendFile(images, {root: path.join(__dirname, '../../temp')}, () => {\n        fs.unlinkSync('temp/' + images);\n    })).catch(err => res.status(404).send(err));\n});\n\nproductController.delete('/images/:imageId', (req: Request, res: Response) => {\n    productService.deleteImage(parseInt(req.params.imageId, 10))\n    .then(() => res.status(200).send({message: `Image successfully deleted!`}))\n    .catch(err => res.status(400).send(err));\n});\n\nexport const ProductController: Router = productController;\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c798a5c26b25f269a287cb823210e81a5f17d269","contentHash":"58968b0a77b68c74130ac0d86e791350a3fafa6735dd286a741a6f95412af1a1"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/middlewares/uploadFile.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/middlewares/uploadFile.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":9,"column":20},"end":{"line":14,"column":6}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":85}},"7":{"start":{"line":15,"column":19},"end":{"line":23,"column":28}},"8":{"start":{"line":17,"column":12},"end":{"line":22,"column":13}},"9":{"start":{"line":18,"column":16},"end":{"line":18,"column":95}},"10":{"start":{"line":21,"column":16},"end":{"line":21,"column":31}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":27}},"12":{"start":{"line":26,"column":0},"end":{"line":26,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"uploadFile","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":19}},"loc":{"start":{"line":8,"column":36},"end":{"line":25,"column":1}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":18},"end":{"line":11,"column":19}},"loc":{"start":{"line":11,"column":44},"end":{"line":13,"column":9}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":20},"end":{"line":16,"column":21}},"loc":{"start":{"line":16,"column":40},"end":{"line":23,"column":9}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":17,"column":12},"end":{"line":22,"column":13}},"type":"if","locations":[{"start":{"line":17,"column":12},"end":{"line":22,"column":13}},{"start":{"line":17,"column":12},"end":{"line":22,"column":13}}],"line":17},"4":{"loc":{"start":{"line":17,"column":18},"end":{"line":17,"column":114}},"type":"binary-expr","locations":[{"start":{"line":17,"column":18},"end":{"line":17,"column":47}},{"start":{"line":17,"column":51},"end":{"line":17,"column":80}},{"start":{"line":17,"column":84},"end":{"line":17,"column":114}}],"line":17}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":2,"7":3,"8":3,"9":1,"10":2,"11":3,"12":1},"f":{"0":1,"1":3,"2":2,"3":3},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,2],"4":[3,3,3]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/middlewares/uploadFile.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/middlewares/uploadFile.ts"],"names":[],"mappings":";;;;;;AAAA,oDAA4B;AAK5B,SAAgB,UAAU,CAAC,GAAY,EAAE,GAAa,EAAE,IAAS;IAE7D,MAAM,OAAO,GAAG,gBAAM,CAAC,WAAW,CAAC;QAC/B,WAAW,EAAE,OAAO;QACpB,QAAQ,EAAE,UAAS,IAAI,EAAE,IAAI,EAAE,EAAE;YAC7B,EAAE,CAAC,IAAI,EAAE,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7E,CAAC;KACJ,CAAC,CAAC;IAEH,MAAM,MAAM,GAAG,gBAAM,CAAC,EAAC,OAAO,EAAE,OAAO;QACnC,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE;YAC/B,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,WAAW,IAAI,IAAI,CAAC,QAAQ,KAAK,WAAW,IAAI,IAAI,CAAC,QAAQ,KAAK,YAAY,CAAC,EAAE;gBACrG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,2CAA2C,EAAC,CAAC,CAAC;aACjF;iBAAM;gBACH,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAClB;QAAA,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAErB,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AAC3B,CAAC;AAlBL,gCAkBK","sourcesContent":["import multer from 'multer';\nimport { Request, Response } from 'express';\n\n\n\nexport function uploadFile(req: Request, res: Response, next: any) {\n\n    const storage = multer.diskStorage({\n        destination: 'temp/',\n        filename: function(_req, file, cb) {\n            cb(null, 'product' + Date.now() + '.' + file.originalname.split('.')[1]);\n        }\n    });\n\n    const upload = multer({storage: storage,\n        fileFilter: (_req, file, cb) => {\n        if (!(file.mimetype === 'image/png' || file.mimetype === 'image/jpg' || file.mimetype === 'image/jpeg')) {\n            res.status(400).send({ message: 'Only .png, .jpg and .jpeg format allowed!'});\n        } else {\n            cb(null, true);\n        }}}).single('image');\n\n        upload(req, res, next);\n    }\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2add9db1fb64dbde586e0a1c8148ba79bebf4cd4","contentHash":"91f57f81ff94a0f1240e280196e69ee116a5dc0bf258218e574386db155ff910"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/product.service.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/product.service.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":29},"end":{"line":4,"column":68}},"3":{"start":{"line":5,"column":24},"end":{"line":5,"column":60}},"4":{"start":{"line":8,"column":8},"end":{"line":9,"column":104}},"5":{"start":{"line":9,"column":30},"end":{"line":9,"column":102}},"6":{"start":{"line":9,"column":69},"end":{"line":9,"column":101}},"7":{"start":{"line":12,"column":8},"end":{"line":21,"column":60}},"8":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"9":{"start":{"line":14,"column":16},"end":{"line":14,"column":81}},"10":{"start":{"line":16,"column":12},"end":{"line":16,"column":43}},"11":{"start":{"line":19,"column":12},"end":{"line":19,"column":44}},"12":{"start":{"line":21,"column":26},"end":{"line":21,"column":58}},"13":{"start":{"line":24,"column":8},"end":{"line":32,"column":60}},"14":{"start":{"line":25,"column":12},"end":{"line":30,"column":13}},"15":{"start":{"line":26,"column":16},"end":{"line":26,"column":48}},"16":{"start":{"line":29,"column":16},"end":{"line":29,"column":81}},"17":{"start":{"line":32,"column":26},"end":{"line":32,"column":58}},"18":{"start":{"line":35,"column":23},"end":{"line":35,"column":43}},"19":{"start":{"line":36,"column":8},"end":{"line":43,"column":60}},"20":{"start":{"line":43,"column":26},"end":{"line":43,"column":58}},"21":{"start":{"line":46,"column":23},"end":{"line":46,"column":43}},"22":{"start":{"line":47,"column":8},"end":{"line":54,"column":60}},"23":{"start":{"line":54,"column":26},"end":{"line":54,"column":58}},"24":{"start":{"line":57,"column":8},"end":{"line":58,"column":60}},"25":{"start":{"line":58,"column":26},"end":{"line":58,"column":58}},"26":{"start":{"line":61,"column":8},"end":{"line":72,"column":60}},"27":{"start":{"line":66,"column":12},"end":{"line":68,"column":15}},"28":{"start":{"line":70,"column":12},"end":{"line":70,"column":34}},"29":{"start":{"line":72,"column":26},"end":{"line":72,"column":58}},"30":{"start":{"line":75,"column":8},"end":{"line":80,"column":58}},"31":{"start":{"line":80,"column":24},"end":{"line":80,"column":56}},"32":{"start":{"line":83,"column":8},"end":{"line":87,"column":58}},"33":{"start":{"line":87,"column":24},"end":{"line":87,"column":56}},"34":{"start":{"line":90,"column":23},"end":{"line":90,"column":43}},"35":{"start":{"line":91,"column":8},"end":{"line":98,"column":60}},"36":{"start":{"line":98,"column":26},"end":{"line":98,"column":58}},"37":{"start":{"line":101,"column":23},"end":{"line":101,"column":43}},"38":{"start":{"line":102,"column":8},"end":{"line":112,"column":60}},"39":{"start":{"line":112,"column":26},"end":{"line":112,"column":58}},"40":{"start":{"line":115,"column":8},"end":{"line":123,"column":60}},"41":{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},"42":{"start":{"line":118,"column":16},"end":{"line":118,"column":81}},"43":{"start":{"line":120,"column":12},"end":{"line":121,"column":54}},"44":{"start":{"line":121,"column":28},"end":{"line":121,"column":52}},"45":{"start":{"line":123,"column":26},"end":{"line":123,"column":58}},"46":{"start":{"line":126,"column":23},"end":{"line":126,"column":43}},"47":{"start":{"line":127,"column":22},"end":{"line":127,"column":24}},"48":{"start":{"line":128,"column":8},"end":{"line":130,"column":10}},"49":{"start":{"line":131,"column":8},"end":{"line":135,"column":9}},"50":{"start":{"line":132,"column":12},"end":{"line":134,"column":14}},"51":{"start":{"line":136,"column":8},"end":{"line":151,"column":9}},"52":{"start":{"line":137,"column":12},"end":{"line":140,"column":14}},"53":{"start":{"line":142,"column":13},"end":{"line":151,"column":9}},"54":{"start":{"line":143,"column":12},"end":{"line":145,"column":14}},"55":{"start":{"line":147,"column":13},"end":{"line":151,"column":9}},"56":{"start":{"line":148,"column":12},"end":{"line":150,"column":14}},"57":{"start":{"line":152,"column":8},"end":{"line":156,"column":9}},"58":{"start":{"line":153,"column":12},"end":{"line":155,"column":14}},"59":{"start":{"line":157,"column":8},"end":{"line":161,"column":9}},"60":{"start":{"line":158,"column":12},"end":{"line":160,"column":14}},"61":{"start":{"line":162,"column":8},"end":{"line":166,"column":9}},"62":{"start":{"line":163,"column":12},"end":{"line":165,"column":14}},"63":{"start":{"line":167,"column":8},"end":{"line":171,"column":9}},"64":{"start":{"line":168,"column":12},"end":{"line":170,"column":14}},"65":{"start":{"line":172,"column":8},"end":{"line":176,"column":9}},"66":{"start":{"line":173,"column":12},"end":{"line":175,"column":14}},"67":{"start":{"line":177,"column":8},"end":{"line":181,"column":9}},"68":{"start":{"line":178,"column":12},"end":{"line":180,"column":14}},"69":{"start":{"line":182,"column":8},"end":{"line":184,"column":58}},"70":{"start":{"line":184,"column":24},"end":{"line":184,"column":56}},"71":{"start":{"line":187,"column":19},"end":{"line":187,"column":32}},"72":{"start":{"line":188,"column":26},"end":{"line":188,"column":63}},"73":{"start":{"line":189,"column":8},"end":{"line":198,"column":58}},"74":{"start":{"line":195,"column":12},"end":{"line":195,"column":63}},"75":{"start":{"line":196,"column":12},"end":{"line":196,"column":48}},"76":{"start":{"line":197,"column":12},"end":{"line":197,"column":25}},"77":{"start":{"line":198,"column":24},"end":{"line":198,"column":56}},"78":{"start":{"line":201,"column":8},"end":{"line":204,"column":11}},"79":{"start":{"line":207,"column":19},"end":{"line":207,"column":32}},"80":{"start":{"line":208,"column":8},"end":{"line":211,"column":81}},"81":{"start":{"line":209,"column":12},"end":{"line":209,"column":68}},"82":{"start":{"line":210,"column":12},"end":{"line":210,"column":35}},"83":{"start":{"line":211,"column":23},"end":{"line":211,"column":79}},"84":{"start":{"line":214,"column":8},"end":{"line":217,"column":61}},"85":{"start":{"line":215,"column":29},"end":{"line":217,"column":59}},"86":{"start":{"line":216,"column":24},"end":{"line":216,"column":48}},"87":{"start":{"line":217,"column":26},"end":{"line":217,"column":58}},"88":{"start":{"line":220,"column":0},"end":{"line":220,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":20},"end":{"line":10,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":18},"end":{"line":9,"column":19}},"loc":{"start":{"line":9,"column":30},"end":{"line":9,"column":102}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":62},"end":{"line":9,"column":63}},"loc":{"start":{"line":9,"column":69},"end":{"line":9,"column":101}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":31},"end":{"line":22,"column":5}},"line":11},"4":{"name":"(anonymous_4)","decl":{"start":{"line":12,"column":64},"end":{"line":12,"column":65}},"loc":{"start":{"line":12,"column":75},"end":{"line":17,"column":9}},"line":12},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":18},"end":{"line":18,"column":19}},"loc":{"start":{"line":18,"column":31},"end":{"line":20,"column":9}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":19},"end":{"line":21,"column":20}},"loc":{"start":{"line":21,"column":26},"end":{"line":21,"column":58}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":26},"end":{"line":33,"column":5}},"line":23},"8":{"name":"(anonymous_8)","decl":{"start":{"line":24,"column":64},"end":{"line":24,"column":65}},"loc":{"start":{"line":24,"column":75},"end":{"line":31,"column":9}},"line":24},"9":{"name":"(anonymous_9)","decl":{"start":{"line":32,"column":19},"end":{"line":32,"column":20}},"loc":{"start":{"line":32,"column":26},"end":{"line":32,"column":58}},"line":32},"10":{"name":"(anonymous_10)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":36},"end":{"line":44,"column":5}},"line":34},"11":{"name":"(anonymous_11)","decl":{"start":{"line":43,"column":19},"end":{"line":43,"column":20}},"loc":{"start":{"line":43,"column":26},"end":{"line":43,"column":58}},"line":43},"12":{"name":"(anonymous_12)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":30},"end":{"line":55,"column":5}},"line":45},"13":{"name":"(anonymous_13)","decl":{"start":{"line":54,"column":19},"end":{"line":54,"column":20}},"loc":{"start":{"line":54,"column":26},"end":{"line":54,"column":58}},"line":54},"14":{"name":"(anonymous_14)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":13},"end":{"line":59,"column":5}},"line":56},"15":{"name":"(anonymous_15)","decl":{"start":{"line":58,"column":19},"end":{"line":58,"column":20}},"loc":{"start":{"line":58,"column":26},"end":{"line":58,"column":58}},"line":58},"16":{"name":"(anonymous_16)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":16},"end":{"line":73,"column":5}},"line":60},"17":{"name":"(anonymous_17)","decl":{"start":{"line":65,"column":16},"end":{"line":65,"column":17}},"loc":{"start":{"line":65,"column":27},"end":{"line":69,"column":9}},"line":65},"18":{"name":"(anonymous_18)","decl":{"start":{"line":69,"column":16},"end":{"line":69,"column":17}},"loc":{"start":{"line":69,"column":27},"end":{"line":71,"column":9}},"line":69},"19":{"name":"(anonymous_19)","decl":{"start":{"line":72,"column":19},"end":{"line":72,"column":20}},"loc":{"start":{"line":72,"column":26},"end":{"line":72,"column":58}},"line":72},"20":{"name":"(anonymous_20)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":21},"end":{"line":81,"column":5}},"line":74},"21":{"name":"(anonymous_21)","decl":{"start":{"line":80,"column":17},"end":{"line":80,"column":18}},"loc":{"start":{"line":80,"column":24},"end":{"line":80,"column":56}},"line":80},"22":{"name":"(anonymous_22)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":23},"end":{"line":88,"column":5}},"line":82},"23":{"name":"(anonymous_23)","decl":{"start":{"line":87,"column":17},"end":{"line":87,"column":18}},"loc":{"start":{"line":87,"column":24},"end":{"line":87,"column":56}},"line":87},"24":{"name":"(anonymous_24)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":31},"end":{"line":99,"column":5}},"line":89},"25":{"name":"(anonymous_25)","decl":{"start":{"line":98,"column":19},"end":{"line":98,"column":20}},"loc":{"start":{"line":98,"column":26},"end":{"line":98,"column":58}},"line":98},"26":{"name":"(anonymous_26)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":28},"end":{"line":113,"column":5}},"line":100},"27":{"name":"(anonymous_27)","decl":{"start":{"line":112,"column":19},"end":{"line":112,"column":20}},"loc":{"start":{"line":112,"column":26},"end":{"line":112,"column":58}},"line":112},"28":{"name":"(anonymous_28)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":29},"end":{"line":124,"column":5}},"line":114},"29":{"name":"(anonymous_29)","decl":{"start":{"line":116,"column":18},"end":{"line":116,"column":19}},"loc":{"start":{"line":116,"column":29},"end":{"line":122,"column":9}},"line":116},"30":{"name":"(anonymous_30)","decl":{"start":{"line":121,"column":22},"end":{"line":121,"column":23}},"loc":{"start":{"line":121,"column":28},"end":{"line":121,"column":52}},"line":121},"31":{"name":"(anonymous_31)","decl":{"start":{"line":123,"column":19},"end":{"line":123,"column":20}},"loc":{"start":{"line":123,"column":26},"end":{"line":123,"column":58}},"line":123},"32":{"name":"(anonymous_32)","decl":{"start":{"line":125,"column":4},"end":{"line":125,"column":5}},"loc":{"start":{"line":125,"column":36},"end":{"line":185,"column":5}},"line":125},"33":{"name":"(anonymous_33)","decl":{"start":{"line":184,"column":17},"end":{"line":184,"column":18}},"loc":{"start":{"line":184,"column":24},"end":{"line":184,"column":56}},"line":184},"34":{"name":"(anonymous_34)","decl":{"start":{"line":186,"column":4},"end":{"line":186,"column":5}},"loc":{"start":{"line":186,"column":44},"end":{"line":199,"column":5}},"line":186},"35":{"name":"(anonymous_35)","decl":{"start":{"line":194,"column":16},"end":{"line":194,"column":17}},"loc":{"start":{"line":194,"column":25},"end":{"line":198,"column":9}},"line":194},"36":{"name":"(anonymous_36)","decl":{"start":{"line":198,"column":17},"end":{"line":198,"column":18}},"loc":{"start":{"line":198,"column":24},"end":{"line":198,"column":56}},"line":198},"37":{"name":"(anonymous_37)","decl":{"start":{"line":200,"column":4},"end":{"line":200,"column":5}},"loc":{"start":{"line":200,"column":27},"end":{"line":205,"column":5}},"line":200},"38":{"name":"(anonymous_38)","decl":{"start":{"line":206,"column":4},"end":{"line":206,"column":5}},"loc":{"start":{"line":206,"column":26},"end":{"line":212,"column":5}},"line":206},"39":{"name":"(anonymous_39)","decl":{"start":{"line":208,"column":72},"end":{"line":208,"column":73}},"loc":{"start":{"line":208,"column":81},"end":{"line":211,"column":9}},"line":208},"40":{"name":"(anonymous_40)","decl":{"start":{"line":211,"column":17},"end":{"line":211,"column":18}},"loc":{"start":{"line":211,"column":23},"end":{"line":211,"column":79}},"line":211},"41":{"name":"(anonymous_41)","decl":{"start":{"line":213,"column":4},"end":{"line":213,"column":5}},"loc":{"start":{"line":213,"column":20},"end":{"line":218,"column":5}},"line":213},"42":{"name":"(anonymous_42)","decl":{"start":{"line":215,"column":18},"end":{"line":215,"column":19}},"loc":{"start":{"line":215,"column":29},"end":{"line":217,"column":59}},"line":215},"43":{"name":"(anonymous_43)","decl":{"start":{"line":216,"column":18},"end":{"line":216,"column":19}},"loc":{"start":{"line":216,"column":24},"end":{"line":216,"column":48}},"line":216},"44":{"name":"(anonymous_44)","decl":{"start":{"line":217,"column":19},"end":{"line":217,"column":20}},"loc":{"start":{"line":217,"column":26},"end":{"line":217,"column":58}},"line":217}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},"type":"if","locations":[{"start":{"line":13,"column":12},"end":{"line":15,"column":13}},{"start":{"line":13,"column":12},"end":{"line":15,"column":13}}],"line":13},"1":{"loc":{"start":{"line":25,"column":12},"end":{"line":30,"column":13}},"type":"if","locations":[{"start":{"line":25,"column":12},"end":{"line":30,"column":13}},{"start":{"line":25,"column":12},"end":{"line":30,"column":13}}],"line":25},"2":{"loc":{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},{"start":{"line":117,"column":12},"end":{"line":119,"column":13}}],"line":117},"3":{"loc":{"start":{"line":131,"column":8},"end":{"line":135,"column":9}},"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":135,"column":9}},{"start":{"line":131,"column":8},"end":{"line":135,"column":9}}],"line":131},"4":{"loc":{"start":{"line":136,"column":8},"end":{"line":151,"column":9}},"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":151,"column":9}},{"start":{"line":136,"column":8},"end":{"line":151,"column":9}}],"line":136},"5":{"loc":{"start":{"line":136,"column":12},"end":{"line":136,"column":66}},"type":"binary-expr","locations":[{"start":{"line":136,"column":12},"end":{"line":136,"column":37}},{"start":{"line":136,"column":41},"end":{"line":136,"column":66}}],"line":136},"6":{"loc":{"start":{"line":142,"column":13},"end":{"line":151,"column":9}},"type":"if","locations":[{"start":{"line":142,"column":13},"end":{"line":151,"column":9}},{"start":{"line":142,"column":13},"end":{"line":151,"column":9}}],"line":142},"7":{"loc":{"start":{"line":142,"column":17},"end":{"line":142,"column":72}},"type":"binary-expr","locations":[{"start":{"line":142,"column":17},"end":{"line":142,"column":42}},{"start":{"line":142,"column":46},"end":{"line":142,"column":72}}],"line":142},"8":{"loc":{"start":{"line":147,"column":13},"end":{"line":151,"column":9}},"type":"if","locations":[{"start":{"line":147,"column":13},"end":{"line":151,"column":9}},{"start":{"line":147,"column":13},"end":{"line":151,"column":9}}],"line":147},"9":{"loc":{"start":{"line":147,"column":17},"end":{"line":147,"column":72}},"type":"binary-expr","locations":[{"start":{"line":147,"column":17},"end":{"line":147,"column":42}},{"start":{"line":147,"column":46},"end":{"line":147,"column":72}}],"line":147},"10":{"loc":{"start":{"line":152,"column":8},"end":{"line":156,"column":9}},"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":156,"column":9}},{"start":{"line":152,"column":8},"end":{"line":156,"column":9}}],"line":152},"11":{"loc":{"start":{"line":152,"column":12},"end":{"line":152,"column":85}},"type":"binary-expr","locations":[{"start":{"line":152,"column":12},"end":{"line":152,"column":46}},{"start":{"line":152,"column":50},"end":{"line":152,"column":85}}],"line":152},"12":{"loc":{"start":{"line":157,"column":8},"end":{"line":161,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":161,"column":9}},{"start":{"line":157,"column":8},"end":{"line":161,"column":9}}],"line":157},"13":{"loc":{"start":{"line":162,"column":8},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":162,"column":8},"end":{"line":166,"column":9}},{"start":{"line":162,"column":8},"end":{"line":166,"column":9}}],"line":162},"14":{"loc":{"start":{"line":162,"column":12},"end":{"line":162,"column":87}},"type":"binary-expr","locations":[{"start":{"line":162,"column":12},"end":{"line":162,"column":47}},{"start":{"line":162,"column":51},"end":{"line":162,"column":87}}],"line":162},"15":{"loc":{"start":{"line":167,"column":8},"end":{"line":171,"column":9}},"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":171,"column":9}},{"start":{"line":167,"column":8},"end":{"line":171,"column":9}}],"line":167},"16":{"loc":{"start":{"line":172,"column":8},"end":{"line":176,"column":9}},"type":"if","locations":[{"start":{"line":172,"column":8},"end":{"line":176,"column":9}},{"start":{"line":172,"column":8},"end":{"line":176,"column":9}}],"line":172},"17":{"loc":{"start":{"line":172,"column":12},"end":{"line":172,"column":89}},"type":"binary-expr","locations":[{"start":{"line":172,"column":12},"end":{"line":172,"column":48}},{"start":{"line":172,"column":52},"end":{"line":172,"column":89}}],"line":172},"18":{"loc":{"start":{"line":177,"column":8},"end":{"line":181,"column":9}},"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":181,"column":9}},{"start":{"line":177,"column":8},"end":{"line":181,"column":9}}],"line":177},"19":{"loc":{"start":{"line":177,"column":12},"end":{"line":177,"column":87}},"type":"binary-expr","locations":[{"start":{"line":177,"column":12},"end":{"line":177,"column":47}},{"start":{"line":177,"column":51},"end":{"line":177,"column":87}}],"line":177}},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":2,"6":0,"7":4,"8":4,"9":2,"10":2,"11":2,"12":2,"13":3,"14":3,"15":2,"16":1,"17":1,"18":2,"19":2,"20":0,"21":2,"22":2,"23":0,"24":2,"25":0,"26":1,"27":1,"28":1,"29":0,"30":2,"31":0,"32":2,"33":0,"34":2,"35":2,"36":0,"37":2,"38":2,"39":0,"40":4,"41":4,"42":2,"43":2,"44":2,"45":2,"46":15,"47":15,"48":15,"49":15,"50":3,"51":15,"52":1,"53":14,"54":0,"55":14,"56":0,"57":15,"58":3,"59":15,"60":1,"61":15,"62":4,"63":15,"64":1,"65":15,"66":2,"67":15,"68":2,"69":15,"70":0,"71":3,"72":3,"73":3,"74":3,"75":3,"76":3,"77":0,"78":2,"79":3,"80":3,"81":3,"82":2,"83":1,"84":2,"85":2,"86":2,"87":0,"88":1},"f":{"0":3,"1":2,"2":0,"3":4,"4":4,"5":2,"6":2,"7":3,"8":3,"9":1,"10":2,"11":0,"12":2,"13":0,"14":2,"15":0,"16":1,"17":1,"18":1,"19":0,"20":2,"21":0,"22":2,"23":0,"24":2,"25":0,"26":2,"27":0,"28":4,"29":4,"30":2,"31":2,"32":15,"33":0,"34":3,"35":3,"36":0,"37":2,"38":3,"39":3,"40":1,"41":2,"42":2,"43":2,"44":0},"b":{"0":[2,2],"1":[2,1],"2":[2,2],"3":[3,12],"4":[1,14],"5":[15,1],"6":[0,14],"7":[14,0],"8":[0,14],"9":[14,0],"10":[3,12],"11":[15,13],"12":[1,14],"13":[4,11],"14":[15,12],"15":[1,14],"16":[2,13],"17":[15,14],"18":[2,13],"19":[15,14]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/product.service.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/services/product.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { promises } from 'fs';\nimport { Multer } from 'multer';\nimport { ImageAttributes, ImageGetAttributes, ProductImage } from '../models/productimage.model';\nimport {  Product, ProductAttributes } from './../models/product.model';\nimport {SearchRequest} from './../models/search.model';\nimport sequelize from 'sequelize';\n\nexport class ProductService {\n\n    public create(product: ProductAttributes): Promise<ProductAttributes> {\n        return(Product.create(product))\n            .then(inserted => Promise.resolve(inserted).catch(err => Promise.reject({message: err})));\n    }\n\n    public update(productId: number, product: ProductAttributes): Promise<ProductAttributes> {\n        return Product.findByPk(productId).then(isFound => {\n            if (isFound === null) {\n                return Promise.reject(`Product with id ${productId} not found!`);\n            }\n            return isFound.update(product);\n        })\n        .then((updated) => {\n                return Promise.resolve(updated);\n        })\n        .catch(err => Promise.reject({message: err}));\n    }\n\n\n\n    public getProduct(productId: number): Promise<Product> {\n        return Product.findByPk(productId).then(product => {\n            if (product) {\n                return Promise.resolve(product);\n            } else {\n                return Promise.reject(`Product with id ${productId} not found!`);\n            }\n        })\n        .catch(err => Promise.reject({message: err}));\n    }\n\n\n    public getProductsOfCategory(category: string): Promise<Product[]> {\n        const { Op } = require('sequelize');\n        return Product.findAll({\n            where: {\n              [Op.and]: [\n                { productCategory: category }\n              ]\n            }\n        })\n        .catch(err => Promise.reject({message: err}));\n    }\n\n    public getProductsOfUser(userId: number): Promise<Product[]> {\n        const { Op } = require('sequelize');\n        return Product.findAll({\n            where: {\n              [Op.and]: [\n                { UserId: userId }\n              ]\n            }\n        })\n        .catch(err => Promise.reject({message: err}));\n    }\n\n    public getAll(): Promise<Product[]> {\n        return Product.findAll()\n        .catch(err => Promise.reject({message: err}));\n    }\n\n    public approve(id: number): Promise<number> {\n        return Product.findOne({\n            where: {\n                productId: id\n            }\n        }).then(product => {\n            return product.update({\n                isApproved: true\n            });\n        }).then(product => {\n            return product.userId;\n        } )\n        .catch(err => Promise.reject({message: err}));\n    }\n\n    public getAllApproved(): Promise<Product[]> {\n        return Product.findAll({\n            where: {\n                isApproved: true,\n                isAvailable: true\n            },\n        }).catch(err => Promise.reject({message: err}));\n    }\n\n    public getAllUnapproved(): Promise<Product[]> {\n        return Product.findAll({\n            where: {\n                isApproved: false\n            }\n        }).catch(err => Promise.reject({message: err}));\n    }\n\n    public getBoughtProducts(buyerId: number): Promise<Product[]> {\n        const { Op } = require('sequelize');\n        return Product.findAll({\n            where: {\n              [Op.and]: [\n                { buyerId: buyerId }\n              ]\n            }\n        })\n        .catch(err => Promise.reject({message: err}));\n    }\n\n    public getSoldProducts(userId: number): Promise<Product[]> {\n        const { Op } = require('sequelize');\n        return Product.findAll({\n            where: {\n              [Op.and]: [\n                {\n                    userId: userId,\n                    buyerId: {[Op.ne]: null}\n                }\n              ]\n            }\n        })\n        .catch(err => Promise.reject({message: err}));\n    }\n\n    public deleteProduct(productId: number): Promise<Product> {\n        return Product.findByPk(productId)\n        .then(isFound =>  {\n            if (isFound === null) {\n                return Promise.reject(`Product with id ${productId} not found!`);\n            }\n            return isFound.destroy()\n            .then(() => Promise.resolve(isFound));\n        })\n        .catch(err => Promise.reject({message: err}));\n    }\n\n    public searchProduct(searchParameters: SearchRequest): Promise<Product[]> {\n        const { Op } = require('sequelize');\n        const where: any = {};\n\n        where.isApproved = {\n            [Op.is]: true\n        };\n\n        if (searchParameters.name) {\n            where.productName = {\n                [Op.like]:  '%' + searchParameters.name + '%'\n            };\n        }\n\n        if (searchParameters.priceMax && searchParameters.priceMin) {\n            where.productPrice = {\n                [Op.gte]: searchParameters.priceMin,\n                [Op.lte]: searchParameters.priceMax\n            };\n\n        } else if (searchParameters.priceMax && !searchParameters.priceMin) {\n            where.productPrice = {\n                [Op.lte]: searchParameters.priceMax\n            };\n\n        } else if (searchParameters.priceMin && !searchParameters.priceMax) {\n            where.productPrice = {\n                [Op.gte]: searchParameters.priceMin\n            };\n        }\n\n        if (searchParameters.delivery === true || searchParameters.delivery === false) {\n            where.productDelivery = {\n                [Op.eq]: searchParameters.delivery\n            };\n        }\n\n        if (searchParameters.location ) {\n            where.productLocation = {\n                [Op.like]:  '%' + searchParameters.location + '%'\n            };\n        }\n\n        if (searchParameters.available === true || searchParameters.available === false) {\n            where.isAvailable = {\n                [Op.eq]: searchParameters.available\n            };\n        }\n\n        if (searchParameters.category) {\n            where.productCategory = {\n                [Op.like]: searchParameters.category\n            };\n        }\n\n        if (searchParameters.isRentable === true || searchParameters.isRentable === false) {\n            where.isRentable = {\n                [Op.eq]: searchParameters.isRentable\n            };\n        }\n\n        if (searchParameters.isService === true || searchParameters.isService === false) {\n            where.isService = {\n                [Op.eq]: searchParameters.isService\n            };\n        }\n\n        return Product.findAll({\n            where: where\n        }).catch(err => Promise.reject({message: err}));\n    }\n\n    public uploadImage(imageParameters: ImageGetAttributes, productId: number): Promise<ProductImage> {\n        const fs = require('fs');\n        const imageData = fs.readFileSync(imageParameters.path);\n\n        return ProductImage.create({\n        imageType: imageParameters.filename.split('.')[1],\n        imageName: imageParameters.filename,\n        data: imageData,\n        productId: productId\n\n        }).then(image => {\n            fs.writeFileSync(imageParameters.path, image.data);\n            fs.unlinkSync(imageParameters.path);\n            return image;\n        }).catch(err => Promise.reject({message: err}));\n    }\n\n    public getImageIds(productId: number): Promise<Array<any>> {\n        return ProductImage.findAll({\n            attributes: ['imageId'],\n            where: { productId: productId }\n        });\n    }\n\n    public getImageById(imageId: number): Promise<string> {\n        const fs = require('fs');\n        return ProductImage.findByPk(imageId).then(image => {\n            fs.writeFileSync('temp/' + image.imageName, image.data);\n            return image.imageName;\n        }).catch(() => Promise.reject({message: 'This image does not exist'}));\n    }\n\n    public deleteImage(id: number): Promise<ProductImage> {\n        return ProductImage.findByPk(id)\n        .then(isFound =>  isFound.destroy()\n            .then(() => Promise.resolve(isFound))\n            .catch(err => Promise.reject({message: err})));\n    }\n}\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7fd96180d0e6f7e7111318b14995f027717c5124","contentHash":"7058fd306e16bdf2f8e9e996ad5da2c815130499f5257e59b227955011a7ebb1"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/controllers/transaction.controller.spec.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/controllers/transaction.controller.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":131}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},"18":{"start":{"line":17,"column":99},"end":{"line":17,"column":131}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":62}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":62}},"24":{"start":{"line":25,"column":15},"end":{"line":25,"column":44}},"25":{"start":{"line":26,"column":20},"end":{"line":26,"column":57}},"26":{"start":{"line":27,"column":17},"end":{"line":27,"column":42}},"27":{"start":{"line":28,"column":24},"end":{"line":28,"column":63}},"28":{"start":{"line":29,"column":21},"end":{"line":29,"column":55}},"29":{"start":{"line":30,"column":28},"end":{"line":30,"column":69}},"30":{"start":{"line":31,"column":30},"end":{"line":31,"column":75}},"31":{"start":{"line":32,"column":0},"end":{"line":32,"column":40}},"32":{"start":{"line":34,"column":0},"end":{"line":251,"column":3}},"33":{"start":{"line":35,"column":37},"end":{"line":35,"column":83}},"34":{"start":{"line":36,"column":19},"end":{"line":54,"column":5}},"35":{"start":{"line":55,"column":18},"end":{"line":73,"column":5}},"36":{"start":{"line":74,"column":21},"end":{"line":90,"column":5}},"37":{"start":{"line":91,"column":21},"end":{"line":107,"column":5}},"38":{"start":{"line":108,"column":25},"end":{"line":120,"column":5}},"39":{"start":{"line":121,"column":4},"end":{"line":126,"column":7}},"40":{"start":{"line":122,"column":8},"end":{"line":125,"column":11}},"41":{"start":{"line":123,"column":12},"end":{"line":123,"column":24}},"42":{"start":{"line":124,"column":12},"end":{"line":124,"column":19}},"43":{"start":{"line":127,"column":4},"end":{"line":135,"column":7}},"44":{"start":{"line":128,"column":8},"end":{"line":128,"column":41}},"45":{"start":{"line":129,"column":8},"end":{"line":129,"column":40}},"46":{"start":{"line":130,"column":8},"end":{"line":130,"column":49}},"47":{"start":{"line":131,"column":8},"end":{"line":131,"column":49}},"48":{"start":{"line":132,"column":8},"end":{"line":134,"column":11}},"49":{"start":{"line":133,"column":12},"end":{"line":133,"column":19}},"50":{"start":{"line":136,"column":4},"end":{"line":172,"column":7}},"51":{"start":{"line":137,"column":8},"end":{"line":154,"column":11}},"52":{"start":{"line":138,"column":12},"end":{"line":153,"column":15}},"53":{"start":{"line":149,"column":16},"end":{"line":149,"column":50}},"54":{"start":{"line":150,"column":16},"end":{"line":150,"column":55}},"55":{"start":{"line":151,"column":16},"end":{"line":151,"column":98}},"56":{"start":{"line":152,"column":16},"end":{"line":152,"column":23}},"57":{"start":{"line":155,"column":8},"end":{"line":171,"column":11}},"58":{"start":{"line":156,"column":12},"end":{"line":170,"column":15}},"59":{"start":{"line":167,"column":16},"end":{"line":167,"column":54}},"60":{"start":{"line":168,"column":16},"end":{"line":168,"column":55}},"61":{"start":{"line":169,"column":16},"end":{"line":169,"column":23}},"62":{"start":{"line":173,"column":4},"end":{"line":206,"column":7}},"63":{"start":{"line":174,"column":8},"end":{"line":181,"column":11}},"64":{"start":{"line":175,"column":12},"end":{"line":180,"column":15}},"65":{"start":{"line":176,"column":16},"end":{"line":176,"column":50}},"66":{"start":{"line":177,"column":16},"end":{"line":177,"column":55}},"67":{"start":{"line":178,"column":16},"end":{"line":178,"column":69}},"68":{"start":{"line":179,"column":16},"end":{"line":179,"column":23}},"69":{"start":{"line":182,"column":8},"end":{"line":189,"column":11}},"70":{"start":{"line":183,"column":12},"end":{"line":188,"column":15}},"71":{"start":{"line":184,"column":16},"end":{"line":184,"column":50}},"72":{"start":{"line":185,"column":16},"end":{"line":185,"column":55}},"73":{"start":{"line":186,"column":16},"end":{"line":186,"column":69}},"74":{"start":{"line":187,"column":16},"end":{"line":187,"column":23}},"75":{"start":{"line":190,"column":8},"end":{"line":197,"column":11}},"76":{"start":{"line":191,"column":12},"end":{"line":196,"column":15}},"77":{"start":{"line":192,"column":16},"end":{"line":192,"column":50}},"78":{"start":{"line":193,"column":16},"end":{"line":193,"column":55}},"79":{"start":{"line":194,"column":16},"end":{"line":194,"column":69}},"80":{"start":{"line":195,"column":16},"end":{"line":195,"column":23}},"81":{"start":{"line":198,"column":8},"end":{"line":205,"column":11}},"82":{"start":{"line":199,"column":12},"end":{"line":204,"column":15}},"83":{"start":{"line":200,"column":16},"end":{"line":200,"column":50}},"84":{"start":{"line":201,"column":16},"end":{"line":201,"column":55}},"85":{"start":{"line":202,"column":16},"end":{"line":202,"column":69}},"86":{"start":{"line":203,"column":16},"end":{"line":203,"column":23}},"87":{"start":{"line":207,"column":4},"end":{"line":240,"column":7}},"88":{"start":{"line":208,"column":8},"end":{"line":215,"column":11}},"89":{"start":{"line":209,"column":12},"end":{"line":214,"column":15}},"90":{"start":{"line":210,"column":16},"end":{"line":210,"column":50}},"91":{"start":{"line":211,"column":16},"end":{"line":211,"column":55}},"92":{"start":{"line":212,"column":16},"end":{"line":212,"column":96}},"93":{"start":{"line":213,"column":16},"end":{"line":213,"column":23}},"94":{"start":{"line":216,"column":8},"end":{"line":223,"column":11}},"95":{"start":{"line":217,"column":12},"end":{"line":222,"column":15}},"96":{"start":{"line":218,"column":16},"end":{"line":218,"column":54}},"97":{"start":{"line":219,"column":16},"end":{"line":219,"column":55}},"98":{"start":{"line":220,"column":16},"end":{"line":220,"column":83}},"99":{"start":{"line":221,"column":16},"end":{"line":221,"column":23}},"100":{"start":{"line":224,"column":8},"end":{"line":231,"column":11}},"101":{"start":{"line":225,"column":12},"end":{"line":230,"column":15}},"102":{"start":{"line":226,"column":16},"end":{"line":226,"column":50}},"103":{"start":{"line":227,"column":16},"end":{"line":227,"column":55}},"104":{"start":{"line":228,"column":16},"end":{"line":228,"column":95}},"105":{"start":{"line":229,"column":16},"end":{"line":229,"column":23}},"106":{"start":{"line":232,"column":8},"end":{"line":239,"column":11}},"107":{"start":{"line":233,"column":12},"end":{"line":238,"column":15}},"108":{"start":{"line":234,"column":16},"end":{"line":234,"column":54}},"109":{"start":{"line":235,"column":16},"end":{"line":235,"column":55}},"110":{"start":{"line":236,"column":16},"end":{"line":236,"column":83}},"111":{"start":{"line":237,"column":16},"end":{"line":237,"column":23}},"112":{"start":{"line":241,"column":4},"end":{"line":250,"column":7}},"113":{"start":{"line":242,"column":8},"end":{"line":245,"column":11}},"114":{"start":{"line":246,"column":8},"end":{"line":249,"column":30}},"115":{"start":{"line":249,"column":22},"end":{"line":249,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":56},"end":{"line":21,"column":57}},"loc":{"start":{"line":21,"column":71},"end":{"line":23,"column":1}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":34,"column":39},"end":{"line":34,"column":40}},"loc":{"start":{"line":34,"column":45},"end":{"line":251,"column":1}},"line":34},"8":{"name":"(anonymous_8)","decl":{"start":{"line":121,"column":23},"end":{"line":121,"column":24}},"loc":{"start":{"line":121,"column":39},"end":{"line":126,"column":5}},"line":121},"9":{"name":"(anonymous_9)","decl":{"start":{"line":122,"column":41},"end":{"line":122,"column":42}},"loc":{"start":{"line":122,"column":50},"end":{"line":125,"column":9}},"line":122},"10":{"name":"(anonymous_10)","decl":{"start":{"line":127,"column":42},"end":{"line":127,"column":43}},"loc":{"start":{"line":127,"column":58},"end":{"line":135,"column":5}},"line":127},"11":{"name":"(anonymous_11)","decl":{"start":{"line":132,"column":66},"end":{"line":132,"column":67}},"loc":{"start":{"line":132,"column":72},"end":{"line":134,"column":9}},"line":132},"12":{"name":"(anonymous_12)","decl":{"start":{"line":136,"column":26},"end":{"line":136,"column":27}},"loc":{"start":{"line":136,"column":32},"end":{"line":172,"column":5}},"line":136},"13":{"name":"(anonymous_13)","decl":{"start":{"line":137,"column":59},"end":{"line":137,"column":60}},"loc":{"start":{"line":137,"column":75},"end":{"line":154,"column":9}},"line":137},"14":{"name":"(anonymous_14)","decl":{"start":{"line":148,"column":19},"end":{"line":148,"column":20}},"loc":{"start":{"line":148,"column":39},"end":{"line":153,"column":13}},"line":148},"15":{"name":"(anonymous_15)","decl":{"start":{"line":155,"column":57},"end":{"line":155,"column":58}},"loc":{"start":{"line":155,"column":73},"end":{"line":171,"column":9}},"line":155},"16":{"name":"(anonymous_16)","decl":{"start":{"line":166,"column":19},"end":{"line":166,"column":20}},"loc":{"start":{"line":166,"column":39},"end":{"line":170,"column":13}},"line":166},"17":{"name":"(anonymous_17)","decl":{"start":{"line":173,"column":25},"end":{"line":173,"column":26}},"loc":{"start":{"line":173,"column":31},"end":{"line":206,"column":5}},"line":173},"18":{"name":"(anonymous_18)","decl":{"start":{"line":174,"column":59},"end":{"line":174,"column":60}},"loc":{"start":{"line":174,"column":75},"end":{"line":181,"column":9}},"line":174},"19":{"name":"(anonymous_19)","decl":{"start":{"line":175,"column":71},"end":{"line":175,"column":72}},"loc":{"start":{"line":175,"column":91},"end":{"line":180,"column":13}},"line":175},"20":{"name":"(anonymous_20)","decl":{"start":{"line":182,"column":71},"end":{"line":182,"column":72}},"loc":{"start":{"line":182,"column":87},"end":{"line":189,"column":9}},"line":182},"21":{"name":"(anonymous_21)","decl":{"start":{"line":183,"column":80},"end":{"line":183,"column":81}},"loc":{"start":{"line":183,"column":100},"end":{"line":188,"column":13}},"line":183},"22":{"name":"(anonymous_22)","decl":{"start":{"line":190,"column":56},"end":{"line":190,"column":57}},"loc":{"start":{"line":190,"column":72},"end":{"line":197,"column":9}},"line":190},"23":{"name":"(anonymous_23)","decl":{"start":{"line":191,"column":70},"end":{"line":191,"column":71}},"loc":{"start":{"line":191,"column":90},"end":{"line":196,"column":13}},"line":191},"24":{"name":"(anonymous_24)","decl":{"start":{"line":198,"column":68},"end":{"line":198,"column":69}},"loc":{"start":{"line":198,"column":84},"end":{"line":205,"column":9}},"line":198},"25":{"name":"(anonymous_25)","decl":{"start":{"line":199,"column":79},"end":{"line":199,"column":80}},"loc":{"start":{"line":199,"column":99},"end":{"line":204,"column":13}},"line":199},"26":{"name":"(anonymous_26)","decl":{"start":{"line":207,"column":25},"end":{"line":207,"column":26}},"loc":{"start":{"line":207,"column":31},"end":{"line":240,"column":5}},"line":207},"27":{"name":"(anonymous_27)","decl":{"start":{"line":208,"column":45},"end":{"line":208,"column":46}},"loc":{"start":{"line":208,"column":61},"end":{"line":215,"column":9}},"line":208},"28":{"name":"(anonymous_28)","decl":{"start":{"line":209,"column":74},"end":{"line":209,"column":75}},"loc":{"start":{"line":209,"column":94},"end":{"line":214,"column":13}},"line":209},"29":{"name":"(anonymous_29)","decl":{"start":{"line":216,"column":60},"end":{"line":216,"column":61}},"loc":{"start":{"line":216,"column":76},"end":{"line":223,"column":9}},"line":216},"30":{"name":"(anonymous_30)","decl":{"start":{"line":217,"column":75},"end":{"line":217,"column":76}},"loc":{"start":{"line":217,"column":95},"end":{"line":222,"column":13}},"line":217},"31":{"name":"(anonymous_31)","decl":{"start":{"line":224,"column":45},"end":{"line":224,"column":46}},"loc":{"start":{"line":224,"column":61},"end":{"line":231,"column":9}},"line":224},"32":{"name":"(anonymous_32)","decl":{"start":{"line":225,"column":74},"end":{"line":225,"column":75}},"loc":{"start":{"line":225,"column":94},"end":{"line":230,"column":13}},"line":225},"33":{"name":"(anonymous_33)","decl":{"start":{"line":232,"column":60},"end":{"line":232,"column":61}},"loc":{"start":{"line":232,"column":76},"end":{"line":239,"column":9}},"line":232},"34":{"name":"(anonymous_34)","decl":{"start":{"line":233,"column":75},"end":{"line":233,"column":76}},"loc":{"start":{"line":233,"column":95},"end":{"line":238,"column":13}},"line":233},"35":{"name":"(anonymous_35)","decl":{"start":{"line":241,"column":22},"end":{"line":241,"column":23}},"loc":{"start":{"line":241,"column":38},"end":{"line":250,"column":5}},"line":241},"36":{"name":"(anonymous_36)","decl":{"start":{"line":249,"column":16},"end":{"line":249,"column":17}},"loc":{"start":{"line":249,"column":22},"end":{"line":249,"column":28}},"line":249}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},{"start":{"line":17,"column":4},"end":{"line":17,"column":131}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},{"start":{"line":17,"column":40},"end":{"line":17,"column":131}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":97}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":97}}],"line":17},"12":{"loc":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"type":"binary-expr","locations":[{"start":{"line":21,"column":23},"end":{"line":21,"column":27}},{"start":{"line":21,"column":31},"end":{"line":21,"column":51}},{"start":{"line":21,"column":56},"end":{"line":23,"column":1}}],"line":21},"13":{"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":61}},"type":"cond-expr","locations":[{"start":{"line":22,"column":37},"end":{"line":22,"column":40}},{"start":{"line":22,"column":43},"end":{"line":22,"column":61}}],"line":22},"14":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":15}},{"start":{"line":22,"column":19},"end":{"line":22,"column":33}}],"line":22}},"s":{"0":1,"1":11,"2":11,"3":11,"4":29,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":11,"18":11,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1},"f":{"0":11,"1":29,"2":0,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1},"b":{"0":[1,1,1],"1":[1,0],"2":[11,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,1],"8":[1,1],"9":[1,0],"10":[11,0],"11":[11,11],"12":[1,1,1],"13":[0,1],"14":[1,1]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/controllers/transaction.controller.spec.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/controllers/transaction.controller.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import chai, { expect } from 'chai';\nimport chaiHttp from 'chai-http';\nimport { Application } from 'express';\nimport { applicationPromise } from './../../server';\nimport { Product, ProductAttributes   } from './../../models/product.model';\nimport { User, UserAttributes } from '../../models/user.model';\nimport { Transaction, TransactionAttributes  } from '../../models/transaction.model';\nimport { TransactionService } from '../../services/transaction.service';\n\n\n\n// to run the tests, use the command 'npm run test' in the terminal\n\nchai.use(chaiHttp); // add chai-http to chai\nlet app: Application;\n\ndescribe('TransactionController Test', () => { // bundles the tests related to the TramsactionController\n    const testedTransactionService: TransactionService = new TransactionService();\n\n    // Create a user: A user is required to create a product\n    const seller: UserAttributes = {\n        userId: 1,\n        admin: false,\n        wallet: 500,\n        userName: 'jacky',\n        password: 'jacky123',\n        userMail: 'jacky@gmail.com',\n        firstName: 'Jack',\n        lastName: 'Doe',\n        gender: 'male',\n        phoneNumber: 768927361,\n        addressStreet: 'Pinnacle Street',\n        addressPin: '77889',\n        addressCity: 'Hannington Town',\n        addressCountry: 'Saint Isles',\n        gameScore: 0,\n        activityScore: 0,\n        overallScore: 0\n    };\n\n    // second user: two users are required for a transaction\n    const buyer: UserAttributes = {\n        userId: 2,\n        admin: true,\n        wallet: 500,\n        userName: 'admin',\n        password: '$2b$12$XVwWZfAd2fjjd.QjrvMJXOh4WPuxJ4.tpNzkg9wpSSNOShAoDOYWC', // adminPW\n        userMail: 'superAdmin@admins.com',\n        firstName: 'Jack',\n        lastName: 'Hammington',\n        gender: 'male',\n        phoneNumber: 796666666,\n        addressStreet: null,\n        addressPin: null,\n        addressCity: null,\n        addressCountry: 'England',\n        gameScore: 0,\n        activityScore: 0,\n        overallScore: 0\n    };\n\n    const product1: ProductAttributes = {\n        productId : 1,\n        productName: 'Schoggi',\n        productDescription: 'E feini Schoggi us Guetemala.',\n        productPrice: 10,\n        productCategory: 'food',\n        productLocation: null,\n        productDelivery: true,\n        uploadDate: new Date(Date.now()),\n        sellDate: null,\n        isApproved: true,\n        isService: false,\n        isRentable: false,\n        isAvailable: true,\n        userId: 1,\n        buyerId: null\n    };\n    const product2: ProductAttributes = {\n        productId : 2,\n        productName: 'Formaggio',\n        productDescription: 'Un buono formaggio di Ticino.',\n        productPrice: 30,\n        productCategory: 'food',\n        productLocation: null,\n        productDelivery: true,\n        uploadDate: new Date(Date.now()),\n        sellDate: null,\n        isApproved: false,\n        isService: false,\n        isRentable: false,\n        isAvailable: true,\n        userId: 1,\n        buyerId: null\n    };\n\n    const transaction1: TransactionAttributes = {\n        transactionId: 1,\n        productId: 1,\n        userId: 1,\n        buyerId: 2,   \n        transactionStatus: undefined,\n        deliveryFirstName: null, \n        deliveryLastName: null,\n        deliveryStreet: null, \n        deliveryPin: null,\n        deliveryCity: null,\n        deliveryCountry: null\n    }\n\n    before('init app', function(done) { // applicationPromise value must be assigned to app!!!\n        applicationPromise.then(value => {\n            app = value;\n            done();\n        });\n    });\n    before('add users and product to db', function(done) { \n        User.create(seller);\n        User.create(buyer);\n        Product.create(product1);\n        Product.create(product2);\n        Transaction.create(transaction1).then(() => {\n            done();\n        });\n    });\n    describe('Test post', () => { // bundles the tests related to the post method\n        it('should successfully initialize a transaction', function(done) { \n            chai.request(app).post('/transaction').send({\n                productId: 2,\n                userId: 2,\n                buyerId: 1,   \n                deliveryFirstName: null, \n                deliveryLastName: null,\n                deliveryStreet: null, \n                deliveryPin: null,\n                deliveryCity: null,\n                deliveryCountry: null\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.message).to.be.eq('Transaction successfully initialized!');\n                done();\n            });\n        });\n        it('should not initialize a faulty transaction', function(done) {\n            chai.request(app).post('/transaction').send({\n                productId: null,\n                userId: null,\n                buyerId: null,   \n                deliveryFirstName: null, \n                deliveryLastName: null,\n                deliveryStreet: null, \n                deliveryPin: null,\n                deliveryCity: null,\n                deliveryCountry: null\n            }).end(function(err, res) {\n                expect(res).not.to.be.eq(null);\n                expect(res).to.have.status(400);\n                done();\n            });\n        });\n    });\n    describe('Test get', () => { // bundles the tests related to the post method\n        it('should successfully get products of a seller', function(done) {\n            chai.request(app).get('/transaction/sell/1').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].transactionId).to.be.eq(1);\n                done();\n            });\n        });\n        it('should successfully get products with status of a seller', function(done) {\n            chai.request(app).get('/transaction/sell/1/status/1').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].transactionId).to.be.eq(1);\n                done();\n            });\n        });\n        it('should successfully get products of buyer', function(done) {\n            chai.request(app).get('/transaction/buy/2').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].transactionId).to.be.eq(1);\n                done();\n            });\n        });\n        it('should successfully get products with status of buyer', function(done) {\n            chai.request(app).get('/transaction/buy/2/status/1').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].transactionId).to.be.eq(1);\n                done();\n            });\n        });\n    });\n    describe('Test put', () => {\n        it('should confirm the transaction', function(done) {\n            chai.request(app).put('/transaction/confirm/1').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.message).to.be.eq('Transaction successfully confirmed!');\n                done();\n            });\n        });\n        it('should not confirm a non-existent transaction', function(done) {\n            chai.request(app).put('/transaction/confirm/11').end(function(err, res) {\n                expect(res).not.to.be.eq(null);\n                expect(res).to.have.status(404);\n                expect(res.body.message).to.be.eq('Transaction not found!');\n                done();\n            });\n        });\n        it('should decline the transaction', function(done) {\n            chai.request(app).put('/transaction/decline/1').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.message).to.be.eq('Transaction successfully declined!');\n                done();\n            });\n        });\n        it('should not decline a non-existent transaction', function(done) {\n            chai.request(app).put('/transaction/decline/11').end(function(err, res) {\n                expect(res).not.to.be.eq(null);\n                expect(res).to.have.status(404);\n                expect(res.body.message).to.be.eq('Transaction not found!');\n                done();\n            });\n        });\n    });\n    after('clean up', function(done) {\n        User.destroy({\n            truncate: true,\n            restartIdentity: true\n        });\n        Product.destroy({\n            truncate: true,\n            restartIdentity: true\n        }).then(() => done());\n\n    });\n})\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6801418040948994019f5cb3838bf4626a9ca968","contentHash":"90a1a29235d3ce68c00927b61a6999de920008a80115736e763b1da4273b00cc"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/controllers/user.controller.spec.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/controllers/user.controller.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":89}},"4":{"start":{"line":4,"column":71},"end":{"line":4,"column":83}},"5":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"6":{"start":{"line":6,"column":26},"end":{"line":6,"column":33}},"7":{"start":{"line":7,"column":4},"end":{"line":7,"column":17}},"8":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"9":{"start":{"line":10,"column":4},"end":{"line":10,"column":72}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":21}},"11":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"13":{"start":{"line":15,"column":31},"end":{"line":15,"column":42}},"14":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"15":{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},"16":{"start":{"line":17,"column":21},"end":{"line":17,"column":131}},"17":{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},"18":{"start":{"line":17,"column":99},"end":{"line":17,"column":131}},"19":{"start":{"line":18,"column":4},"end":{"line":18,"column":36}},"20":{"start":{"line":19,"column":4},"end":{"line":19,"column":18}},"21":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":62}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":62}},"24":{"start":{"line":25,"column":23},"end":{"line":25,"column":63}},"25":{"start":{"line":26,"column":21},"end":{"line":26,"column":57}},"26":{"start":{"line":27,"column":17},"end":{"line":27,"column":42}},"27":{"start":{"line":28,"column":15},"end":{"line":28,"column":44}},"28":{"start":{"line":29,"column":20},"end":{"line":29,"column":57}},"29":{"start":{"line":30,"column":0},"end":{"line":30,"column":40}},"30":{"start":{"line":32,"column":14},"end":{"line":50,"column":1}},"31":{"start":{"line":51,"column":18},"end":{"line":69,"column":1}},"32":{"start":{"line":70,"column":0},"end":{"line":690,"column":3}},"33":{"start":{"line":71,"column":4},"end":{"line":76,"column":7}},"34":{"start":{"line":72,"column":8},"end":{"line":75,"column":11}},"35":{"start":{"line":73,"column":12},"end":{"line":73,"column":24}},"36":{"start":{"line":74,"column":12},"end":{"line":74,"column":19}},"37":{"start":{"line":77,"column":4},"end":{"line":149,"column":7}},"38":{"start":{"line":78,"column":8},"end":{"line":80,"column":11}},"39":{"start":{"line":79,"column":12},"end":{"line":79,"column":63}},"40":{"start":{"line":79,"column":55},"end":{"line":79,"column":61}},"41":{"start":{"line":81,"column":8},"end":{"line":102,"column":11}},"42":{"start":{"line":82,"column":12},"end":{"line":101,"column":15}},"43":{"start":{"line":95,"column":16},"end":{"line":95,"column":50}},"44":{"start":{"line":96,"column":16},"end":{"line":96,"column":55}},"45":{"start":{"line":97,"column":16},"end":{"line":97,"column":62}},"46":{"start":{"line":98,"column":16},"end":{"line":98,"column":61}},"47":{"start":{"line":99,"column":16},"end":{"line":99,"column":70}},"48":{"start":{"line":100,"column":16},"end":{"line":100,"column":23}},"49":{"start":{"line":103,"column":8},"end":{"line":122,"column":11}},"50":{"start":{"line":104,"column":12},"end":{"line":121,"column":15}},"51":{"start":{"line":117,"column":16},"end":{"line":117,"column":50}},"52":{"start":{"line":118,"column":16},"end":{"line":118,"column":55}},"53":{"start":{"line":119,"column":16},"end":{"line":119,"column":116}},"54":{"start":{"line":120,"column":16},"end":{"line":120,"column":23}},"55":{"start":{"line":123,"column":8},"end":{"line":142,"column":11}},"56":{"start":{"line":124,"column":12},"end":{"line":141,"column":15}},"57":{"start":{"line":137,"column":16},"end":{"line":137,"column":50}},"58":{"start":{"line":138,"column":16},"end":{"line":138,"column":55}},"59":{"start":{"line":139,"column":16},"end":{"line":139,"column":116}},"60":{"start":{"line":140,"column":16},"end":{"line":140,"column":23}},"61":{"start":{"line":143,"column":8},"end":{"line":148,"column":11}},"62":{"start":{"line":144,"column":12},"end":{"line":147,"column":34}},"63":{"start":{"line":147,"column":26},"end":{"line":147,"column":32}},"64":{"start":{"line":150,"column":4},"end":{"line":205,"column":7}},"65":{"start":{"line":151,"column":8},"end":{"line":153,"column":11}},"66":{"start":{"line":152,"column":12},"end":{"line":152,"column":63}},"67":{"start":{"line":152,"column":55},"end":{"line":152,"column":61}},"68":{"start":{"line":154,"column":8},"end":{"line":165,"column":11}},"69":{"start":{"line":155,"column":12},"end":{"line":164,"column":15}},"70":{"start":{"line":159,"column":16},"end":{"line":159,"column":50}},"71":{"start":{"line":160,"column":16},"end":{"line":160,"column":55}},"72":{"start":{"line":161,"column":16},"end":{"line":161,"column":65}},"73":{"start":{"line":162,"column":16},"end":{"line":162,"column":77}},"74":{"start":{"line":163,"column":16},"end":{"line":163,"column":23}},"75":{"start":{"line":166,"column":8},"end":{"line":177,"column":11}},"76":{"start":{"line":167,"column":12},"end":{"line":176,"column":15}},"77":{"start":{"line":171,"column":16},"end":{"line":171,"column":50}},"78":{"start":{"line":172,"column":16},"end":{"line":172,"column":55}},"79":{"start":{"line":173,"column":16},"end":{"line":173,"column":65}},"80":{"start":{"line":174,"column":16},"end":{"line":174,"column":77}},"81":{"start":{"line":175,"column":16},"end":{"line":175,"column":23}},"82":{"start":{"line":178,"column":8},"end":{"line":188,"column":11}},"83":{"start":{"line":179,"column":12},"end":{"line":187,"column":15}},"84":{"start":{"line":183,"column":16},"end":{"line":183,"column":50}},"85":{"start":{"line":184,"column":16},"end":{"line":184,"column":55}},"86":{"start":{"line":185,"column":16},"end":{"line":185,"column":77}},"87":{"start":{"line":186,"column":16},"end":{"line":186,"column":23}},"88":{"start":{"line":189,"column":8},"end":{"line":198,"column":11}},"89":{"start":{"line":190,"column":12},"end":{"line":197,"column":15}},"90":{"start":{"line":194,"column":16},"end":{"line":194,"column":50}},"91":{"start":{"line":195,"column":16},"end":{"line":195,"column":55}},"92":{"start":{"line":196,"column":16},"end":{"line":196,"column":23}},"93":{"start":{"line":199,"column":8},"end":{"line":204,"column":11}},"94":{"start":{"line":200,"column":12},"end":{"line":203,"column":34}},"95":{"start":{"line":203,"column":26},"end":{"line":203,"column":32}},"96":{"start":{"line":206,"column":4},"end":{"line":241,"column":7}},"97":{"start":{"line":208,"column":8},"end":{"line":218,"column":11}},"98":{"start":{"line":209,"column":12},"end":{"line":217,"column":15}},"99":{"start":{"line":210,"column":16},"end":{"line":216,"column":19}},"100":{"start":{"line":214,"column":20},"end":{"line":214,"column":43}},"101":{"start":{"line":215,"column":20},"end":{"line":215,"column":27}},"102":{"start":{"line":219,"column":8},"end":{"line":226,"column":11}},"103":{"start":{"line":220,"column":12},"end":{"line":225,"column":15}},"104":{"start":{"line":221,"column":16},"end":{"line":221,"column":50}},"105":{"start":{"line":222,"column":16},"end":{"line":222,"column":55}},"106":{"start":{"line":223,"column":16},"end":{"line":223,"column":73}},"107":{"start":{"line":224,"column":16},"end":{"line":224,"column":23}},"108":{"start":{"line":227,"column":8},"end":{"line":234,"column":11}},"109":{"start":{"line":228,"column":12},"end":{"line":233,"column":15}},"110":{"start":{"line":229,"column":16},"end":{"line":229,"column":50}},"111":{"start":{"line":230,"column":16},"end":{"line":230,"column":55}},"112":{"start":{"line":231,"column":16},"end":{"line":231,"column":75}},"113":{"start":{"line":232,"column":16},"end":{"line":232,"column":23}},"114":{"start":{"line":235,"column":8},"end":{"line":240,"column":11}},"115":{"start":{"line":236,"column":12},"end":{"line":239,"column":34}},"116":{"start":{"line":239,"column":26},"end":{"line":239,"column":32}},"117":{"start":{"line":242,"column":4},"end":{"line":347,"column":7}},"118":{"start":{"line":243,"column":29},"end":{"line":261,"column":9}},"119":{"start":{"line":262,"column":8},"end":{"line":268,"column":11}},"120":{"start":{"line":263,"column":12},"end":{"line":267,"column":15}},"121":{"start":{"line":264,"column":16},"end":{"line":264,"column":59}},"122":{"start":{"line":266,"column":16},"end":{"line":266,"column":23}},"123":{"start":{"line":269,"column":8},"end":{"line":275,"column":11}},"124":{"start":{"line":270,"column":12},"end":{"line":274,"column":15}},"125":{"start":{"line":271,"column":16},"end":{"line":271,"column":23}},"126":{"start":{"line":273,"column":16},"end":{"line":273,"column":23}},"127":{"start":{"line":276,"column":8},"end":{"line":296,"column":11}},"128":{"start":{"line":277,"column":12},"end":{"line":295,"column":15}},"129":{"start":{"line":281,"column":30},"end":{"line":281,"column":49}},"130":{"start":{"line":282,"column":16},"end":{"line":294,"column":19}},"131":{"start":{"line":283,"column":20},"end":{"line":283,"column":54}},"132":{"start":{"line":284,"column":20},"end":{"line":284,"column":59}},"133":{"start":{"line":285,"column":20},"end":{"line":285,"column":101}},"134":{"start":{"line":286,"column":20},"end":{"line":293,"column":23}},"135":{"start":{"line":291,"column":24},"end":{"line":291,"column":59}},"136":{"start":{"line":292,"column":24},"end":{"line":292,"column":31}},"137":{"start":{"line":297,"column":8},"end":{"line":317,"column":11}},"138":{"start":{"line":298,"column":12},"end":{"line":316,"column":15}},"139":{"start":{"line":302,"column":30},"end":{"line":302,"column":49}},"140":{"start":{"line":303,"column":16},"end":{"line":315,"column":19}},"141":{"start":{"line":304,"column":20},"end":{"line":304,"column":54}},"142":{"start":{"line":305,"column":20},"end":{"line":305,"column":59}},"143":{"start":{"line":306,"column":20},"end":{"line":306,"column":83}},"144":{"start":{"line":307,"column":20},"end":{"line":314,"column":23}},"145":{"start":{"line":312,"column":24},"end":{"line":312,"column":63}},"146":{"start":{"line":313,"column":24},"end":{"line":313,"column":31}},"147":{"start":{"line":318,"column":8},"end":{"line":338,"column":11}},"148":{"start":{"line":319,"column":12},"end":{"line":337,"column":15}},"149":{"start":{"line":323,"column":30},"end":{"line":323,"column":49}},"150":{"start":{"line":324,"column":16},"end":{"line":336,"column":19}},"151":{"start":{"line":325,"column":20},"end":{"line":325,"column":54}},"152":{"start":{"line":326,"column":20},"end":{"line":326,"column":59}},"153":{"start":{"line":327,"column":20},"end":{"line":327,"column":90}},"154":{"start":{"line":328,"column":20},"end":{"line":335,"column":23}},"155":{"start":{"line":333,"column":24},"end":{"line":333,"column":63}},"156":{"start":{"line":334,"column":24},"end":{"line":334,"column":31}},"157":{"start":{"line":339,"column":8},"end":{"line":346,"column":11}},"158":{"start":{"line":340,"column":12},"end":{"line":345,"column":15}},"159":{"start":{"line":344,"column":16},"end":{"line":344,"column":23}},"160":{"start":{"line":348,"column":4},"end":{"line":429,"column":7}},"161":{"start":{"line":349,"column":8},"end":{"line":357,"column":11}},"162":{"start":{"line":350,"column":12},"end":{"line":356,"column":15}},"163":{"start":{"line":351,"column":16},"end":{"line":353,"column":19}},"164":{"start":{"line":352,"column":20},"end":{"line":352,"column":27}},"165":{"start":{"line":355,"column":16},"end":{"line":355,"column":33}},"166":{"start":{"line":358,"column":8},"end":{"line":365,"column":11}},"167":{"start":{"line":359,"column":12},"end":{"line":364,"column":15}},"168":{"start":{"line":363,"column":16},"end":{"line":363,"column":23}},"169":{"start":{"line":366,"column":8},"end":{"line":387,"column":11}},"170":{"start":{"line":367,"column":12},"end":{"line":386,"column":15}},"171":{"start":{"line":372,"column":16},"end":{"line":372,"column":58}},"172":{"start":{"line":373,"column":16},"end":{"line":385,"column":19}},"173":{"start":{"line":377,"column":34},"end":{"line":377,"column":53}},"174":{"start":{"line":378,"column":20},"end":{"line":384,"column":23}},"175":{"start":{"line":379,"column":24},"end":{"line":379,"column":58}},"176":{"start":{"line":380,"column":24},"end":{"line":380,"column":63}},"177":{"start":{"line":381,"column":24},"end":{"line":381,"column":69}},"178":{"start":{"line":382,"column":24},"end":{"line":382,"column":77}},"179":{"start":{"line":383,"column":24},"end":{"line":383,"column":31}},"180":{"start":{"line":388,"column":8},"end":{"line":415,"column":11}},"181":{"start":{"line":389,"column":12},"end":{"line":414,"column":15}},"182":{"start":{"line":394,"column":16},"end":{"line":394,"column":58}},"183":{"start":{"line":395,"column":16},"end":{"line":413,"column":19}},"184":{"start":{"line":399,"column":34},"end":{"line":399,"column":53}},"185":{"start":{"line":400,"column":20},"end":{"line":412,"column":23}},"186":{"start":{"line":401,"column":24},"end":{"line":401,"column":58}},"187":{"start":{"line":402,"column":24},"end":{"line":402,"column":63}},"188":{"start":{"line":403,"column":24},"end":{"line":403,"column":94}},"189":{"start":{"line":404,"column":24},"end":{"line":411,"column":27}},"190":{"start":{"line":409,"column":28},"end":{"line":409,"column":75}},"191":{"start":{"line":410,"column":28},"end":{"line":410,"column":35}},"192":{"start":{"line":416,"column":8},"end":{"line":428,"column":11}},"193":{"start":{"line":417,"column":12},"end":{"line":427,"column":15}},"194":{"start":{"line":421,"column":30},"end":{"line":421,"column":49}},"195":{"start":{"line":422,"column":16},"end":{"line":426,"column":19}},"196":{"start":{"line":423,"column":20},"end":{"line":423,"column":54}},"197":{"start":{"line":424,"column":20},"end":{"line":424,"column":59}},"198":{"start":{"line":425,"column":20},"end":{"line":425,"column":27}},"199":{"start":{"line":430,"column":4},"end":{"line":458,"column":7}},"200":{"start":{"line":431,"column":8},"end":{"line":433,"column":11}},"201":{"start":{"line":432,"column":12},"end":{"line":432,"column":94}},"202":{"start":{"line":432,"column":55},"end":{"line":432,"column":61}},"203":{"start":{"line":432,"column":76},"end":{"line":432,"column":92}},"204":{"start":{"line":434,"column":8},"end":{"line":441,"column":11}},"205":{"start":{"line":435,"column":12},"end":{"line":440,"column":15}},"206":{"start":{"line":436,"column":16},"end":{"line":436,"column":50}},"207":{"start":{"line":437,"column":16},"end":{"line":437,"column":55}},"208":{"start":{"line":438,"column":16},"end":{"line":438,"column":69}},"209":{"start":{"line":439,"column":16},"end":{"line":439,"column":23}},"210":{"start":{"line":442,"column":8},"end":{"line":449,"column":11}},"211":{"start":{"line":443,"column":12},"end":{"line":448,"column":15}},"212":{"start":{"line":444,"column":16},"end":{"line":444,"column":50}},"213":{"start":{"line":445,"column":16},"end":{"line":445,"column":55}},"214":{"start":{"line":446,"column":16},"end":{"line":446,"column":76}},"215":{"start":{"line":447,"column":16},"end":{"line":447,"column":23}},"216":{"start":{"line":450,"column":8},"end":{"line":457,"column":11}},"217":{"start":{"line":451,"column":12},"end":{"line":456,"column":15}},"218":{"start":{"line":455,"column":16},"end":{"line":455,"column":23}},"219":{"start":{"line":459,"column":4},"end":{"line":533,"column":7}},"220":{"start":{"line":460,"column":8},"end":{"line":462,"column":11}},"221":{"start":{"line":461,"column":12},"end":{"line":461,"column":94}},"222":{"start":{"line":461,"column":55},"end":{"line":461,"column":61}},"223":{"start":{"line":461,"column":76},"end":{"line":461,"column":92}},"224":{"start":{"line":463,"column":8},"end":{"line":485,"column":11}},"225":{"start":{"line":464,"column":12},"end":{"line":484,"column":15}},"226":{"start":{"line":477,"column":16},"end":{"line":477,"column":50}},"227":{"start":{"line":478,"column":16},"end":{"line":478,"column":55}},"228":{"start":{"line":479,"column":16},"end":{"line":479,"column":71}},"229":{"start":{"line":480,"column":16},"end":{"line":483,"column":19}},"230":{"start":{"line":481,"column":20},"end":{"line":481,"column":71}},"231":{"start":{"line":482,"column":20},"end":{"line":482,"column":27}},"232":{"start":{"line":486,"column":8},"end":{"line":505,"column":11}},"233":{"start":{"line":487,"column":12},"end":{"line":504,"column":15}},"234":{"start":{"line":500,"column":16},"end":{"line":500,"column":50}},"235":{"start":{"line":501,"column":16},"end":{"line":501,"column":55}},"236":{"start":{"line":502,"column":16},"end":{"line":502,"column":68}},"237":{"start":{"line":503,"column":16},"end":{"line":503,"column":23}},"238":{"start":{"line":506,"column":8},"end":{"line":524,"column":11}},"239":{"start":{"line":507,"column":12},"end":{"line":523,"column":15}},"240":{"start":{"line":520,"column":16},"end":{"line":520,"column":50}},"241":{"start":{"line":521,"column":16},"end":{"line":521,"column":55}},"242":{"start":{"line":522,"column":16},"end":{"line":522,"column":23}},"243":{"start":{"line":525,"column":8},"end":{"line":532,"column":11}},"244":{"start":{"line":526,"column":12},"end":{"line":531,"column":15}},"245":{"start":{"line":530,"column":16},"end":{"line":530,"column":23}},"246":{"start":{"line":534,"column":4},"end":{"line":569,"column":7}},"247":{"start":{"line":535,"column":8},"end":{"line":535,"column":28}},"248":{"start":{"line":536,"column":8},"end":{"line":540,"column":11}},"249":{"start":{"line":537,"column":12},"end":{"line":539,"column":15}},"250":{"start":{"line":538,"column":16},"end":{"line":538,"column":23}},"251":{"start":{"line":541,"column":8},"end":{"line":548,"column":11}},"252":{"start":{"line":542,"column":12},"end":{"line":547,"column":15}},"253":{"start":{"line":546,"column":16},"end":{"line":546,"column":23}},"254":{"start":{"line":549,"column":8},"end":{"line":558,"column":11}},"255":{"start":{"line":550,"column":12},"end":{"line":557,"column":15}},"256":{"start":{"line":553,"column":16},"end":{"line":553,"column":50}},"257":{"start":{"line":554,"column":16},"end":{"line":554,"column":56}},"258":{"start":{"line":555,"column":16},"end":{"line":555,"column":107}},"259":{"start":{"line":556,"column":16},"end":{"line":556,"column":23}},"260":{"start":{"line":559,"column":8},"end":{"line":568,"column":11}},"261":{"start":{"line":560,"column":12},"end":{"line":567,"column":15}},"262":{"start":{"line":563,"column":16},"end":{"line":563,"column":50}},"263":{"start":{"line":564,"column":16},"end":{"line":564,"column":56}},"264":{"start":{"line":565,"column":16},"end":{"line":565,"column":74}},"265":{"start":{"line":566,"column":16},"end":{"line":566,"column":23}},"266":{"start":{"line":570,"column":4},"end":{"line":604,"column":7}},"267":{"start":{"line":571,"column":8},"end":{"line":575,"column":11}},"268":{"start":{"line":572,"column":12},"end":{"line":574,"column":15}},"269":{"start":{"line":573,"column":16},"end":{"line":573,"column":23}},"270":{"start":{"line":576,"column":8},"end":{"line":583,"column":11}},"271":{"start":{"line":577,"column":12},"end":{"line":582,"column":15}},"272":{"start":{"line":581,"column":16},"end":{"line":581,"column":23}},"273":{"start":{"line":584,"column":8},"end":{"line":593,"column":11}},"274":{"start":{"line":585,"column":26},"end":{"line":585,"column":138}},"275":{"start":{"line":586,"column":12},"end":{"line":592,"column":15}},"276":{"start":{"line":589,"column":16},"end":{"line":589,"column":55}},"277":{"start":{"line":590,"column":16},"end":{"line":590,"column":116}},"278":{"start":{"line":591,"column":16},"end":{"line":591,"column":23}},"279":{"start":{"line":594,"column":8},"end":{"line":603,"column":11}},"280":{"start":{"line":595,"column":26},"end":{"line":595,"column":135}},"281":{"start":{"line":596,"column":12},"end":{"line":602,"column":15}},"282":{"start":{"line":599,"column":16},"end":{"line":599,"column":55}},"283":{"start":{"line":600,"column":16},"end":{"line":600,"column":73}},"284":{"start":{"line":601,"column":16},"end":{"line":601,"column":23}},"285":{"start":{"line":605,"column":4},"end":{"line":633,"column":7}},"286":{"start":{"line":606,"column":8},"end":{"line":610,"column":11}},"287":{"start":{"line":607,"column":12},"end":{"line":609,"column":48}},"288":{"start":{"line":608,"column":28},"end":{"line":608,"column":34}},"289":{"start":{"line":609,"column":30},"end":{"line":609,"column":46}},"290":{"start":{"line":611,"column":8},"end":{"line":624,"column":11}},"291":{"start":{"line":612,"column":12},"end":{"line":623,"column":15}},"292":{"start":{"line":613,"column":16},"end":{"line":613,"column":50}},"293":{"start":{"line":614,"column":16},"end":{"line":614,"column":55}},"294":{"start":{"line":615,"column":16},"end":{"line":615,"column":93}},"295":{"start":{"line":616,"column":16},"end":{"line":622,"column":19}},"296":{"start":{"line":617,"column":20},"end":{"line":617,"column":62}},"297":{"start":{"line":618,"column":20},"end":{"line":618,"column":66}},"298":{"start":{"line":621,"column":20},"end":{"line":621,"column":27}},"299":{"start":{"line":625,"column":8},"end":{"line":632,"column":11}},"300":{"start":{"line":626,"column":12},"end":{"line":631,"column":15}},"301":{"start":{"line":630,"column":16},"end":{"line":630,"column":23}},"302":{"start":{"line":634,"column":4},"end":{"line":660,"column":7}},"303":{"start":{"line":635,"column":8},"end":{"line":642,"column":11}},"304":{"start":{"line":636,"column":12},"end":{"line":641,"column":48}},"305":{"start":{"line":638,"column":16},"end":{"line":638,"column":52}},"306":{"start":{"line":640,"column":28},"end":{"line":640,"column":34}},"307":{"start":{"line":641,"column":30},"end":{"line":641,"column":46}},"308":{"start":{"line":643,"column":8},"end":{"line":651,"column":11}},"309":{"start":{"line":644,"column":12},"end":{"line":650,"column":15}},"310":{"start":{"line":645,"column":16},"end":{"line":645,"column":50}},"311":{"start":{"line":646,"column":16},"end":{"line":646,"column":55}},"312":{"start":{"line":647,"column":16},"end":{"line":647,"column":72}},"313":{"start":{"line":648,"column":16},"end":{"line":648,"column":70}},"314":{"start":{"line":649,"column":16},"end":{"line":649,"column":23}},"315":{"start":{"line":652,"column":8},"end":{"line":659,"column":11}},"316":{"start":{"line":653,"column":12},"end":{"line":658,"column":15}},"317":{"start":{"line":657,"column":16},"end":{"line":657,"column":23}},"318":{"start":{"line":661,"column":4},"end":{"line":689,"column":7}},"319":{"start":{"line":662,"column":8},"end":{"line":669,"column":11}},"320":{"start":{"line":663,"column":12},"end":{"line":668,"column":48}},"321":{"start":{"line":665,"column":16},"end":{"line":665,"column":52}},"322":{"start":{"line":667,"column":28},"end":{"line":667,"column":34}},"323":{"start":{"line":668,"column":30},"end":{"line":668,"column":46}},"324":{"start":{"line":670,"column":8},"end":{"line":680,"column":11}},"325":{"start":{"line":671,"column":12},"end":{"line":679,"column":15}},"326":{"start":{"line":672,"column":16},"end":{"line":672,"column":50}},"327":{"start":{"line":673,"column":16},"end":{"line":673,"column":55}},"328":{"start":{"line":674,"column":16},"end":{"line":674,"column":70}},"329":{"start":{"line":675,"column":16},"end":{"line":675,"column":62}},"330":{"start":{"line":676,"column":16},"end":{"line":676,"column":69}},"331":{"start":{"line":677,"column":16},"end":{"line":677,"column":72}},"332":{"start":{"line":678,"column":16},"end":{"line":678,"column":23}},"333":{"start":{"line":681,"column":8},"end":{"line":688,"column":11}},"334":{"start":{"line":682,"column":12},"end":{"line":687,"column":15}},"335":{"start":{"line":686,"column":16},"end":{"line":686,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":5,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":4,"column":58},"end":{"line":4,"column":59}},"loc":{"start":{"line":4,"column":69},"end":{"line":4,"column":85}},"line":4},"2":{"name":"(anonymous_2)","decl":{"start":{"line":5,"column":6},"end":{"line":5,"column":7}},"loc":{"start":{"line":5,"column":28},"end":{"line":8,"column":1}},"line":5},"3":{"name":"(anonymous_3)","decl":{"start":{"line":9,"column":80},"end":{"line":9,"column":81}},"loc":{"start":{"line":9,"column":95},"end":{"line":11,"column":1}},"line":9},"4":{"name":"(anonymous_4)","decl":{"start":{"line":11,"column":5},"end":{"line":11,"column":6}},"loc":{"start":{"line":11,"column":20},"end":{"line":13,"column":1}},"line":11},"5":{"name":"(anonymous_5)","decl":{"start":{"line":14,"column":50},"end":{"line":14,"column":51}},"loc":{"start":{"line":14,"column":65},"end":{"line":20,"column":1}},"line":14},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":56},"end":{"line":21,"column":57}},"loc":{"start":{"line":21,"column":71},"end":{"line":23,"column":1}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":70,"column":32},"end":{"line":70,"column":33}},"loc":{"start":{"line":70,"column":38},"end":{"line":690,"column":1}},"line":70},"8":{"name":"(anonymous_8)","decl":{"start":{"line":71,"column":23},"end":{"line":71,"column":24}},"loc":{"start":{"line":71,"column":39},"end":{"line":76,"column":5}},"line":71},"9":{"name":"(anonymous_9)","decl":{"start":{"line":72,"column":41},"end":{"line":72,"column":42}},"loc":{"start":{"line":72,"column":50},"end":{"line":75,"column":9}},"line":72},"10":{"name":"(anonymous_10)","decl":{"start":{"line":77,"column":30},"end":{"line":77,"column":31}},"loc":{"start":{"line":77,"column":36},"end":{"line":149,"column":5}},"line":77},"11":{"name":"(anonymous_11)","decl":{"start":{"line":78,"column":23},"end":{"line":78,"column":24}},"loc":{"start":{"line":78,"column":39},"end":{"line":80,"column":9}},"line":78},"12":{"name":"(anonymous_12)","decl":{"start":{"line":79,"column":49},"end":{"line":79,"column":50}},"loc":{"start":{"line":79,"column":55},"end":{"line":79,"column":61}},"line":79},"13":{"name":"(anonymous_13)","decl":{"start":{"line":81,"column":43},"end":{"line":81,"column":44}},"loc":{"start":{"line":81,"column":59},"end":{"line":102,"column":9}},"line":81},"14":{"name":"(anonymous_14)","decl":{"start":{"line":94,"column":19},"end":{"line":94,"column":20}},"loc":{"start":{"line":94,"column":39},"end":{"line":101,"column":13}},"line":94},"15":{"name":"(anonymous_15)","decl":{"start":{"line":103,"column":61},"end":{"line":103,"column":62}},"loc":{"start":{"line":103,"column":77},"end":{"line":122,"column":9}},"line":103},"16":{"name":"(anonymous_16)","decl":{"start":{"line":116,"column":19},"end":{"line":116,"column":20}},"loc":{"start":{"line":116,"column":39},"end":{"line":121,"column":13}},"line":116},"17":{"name":"(anonymous_17)","decl":{"start":{"line":123,"column":58},"end":{"line":123,"column":59}},"loc":{"start":{"line":123,"column":74},"end":{"line":142,"column":9}},"line":123},"18":{"name":"(anonymous_18)","decl":{"start":{"line":136,"column":19},"end":{"line":136,"column":20}},"loc":{"start":{"line":136,"column":39},"end":{"line":141,"column":13}},"line":136},"19":{"name":"(anonymous_19)","decl":{"start":{"line":143,"column":26},"end":{"line":143,"column":27}},"loc":{"start":{"line":143,"column":42},"end":{"line":148,"column":9}},"line":143},"20":{"name":"(anonymous_20)","decl":{"start":{"line":147,"column":20},"end":{"line":147,"column":21}},"loc":{"start":{"line":147,"column":26},"end":{"line":147,"column":32}},"line":147},"21":{"name":"(anonymous_21)","decl":{"start":{"line":150,"column":27},"end":{"line":150,"column":28}},"loc":{"start":{"line":150,"column":33},"end":{"line":205,"column":5}},"line":150},"22":{"name":"(anonymous_22)","decl":{"start":{"line":151,"column":26},"end":{"line":151,"column":27}},"loc":{"start":{"line":151,"column":42},"end":{"line":153,"column":9}},"line":151},"23":{"name":"(anonymous_23)","decl":{"start":{"line":152,"column":49},"end":{"line":152,"column":50}},"loc":{"start":{"line":152,"column":55},"end":{"line":152,"column":61}},"line":152},"24":{"name":"(anonymous_24)","decl":{"start":{"line":154,"column":75},"end":{"line":154,"column":76}},"loc":{"start":{"line":154,"column":91},"end":{"line":165,"column":9}},"line":154},"25":{"name":"(anonymous_25)","decl":{"start":{"line":158,"column":19},"end":{"line":158,"column":20}},"loc":{"start":{"line":158,"column":39},"end":{"line":164,"column":13}},"line":158},"26":{"name":"(anonymous_26)","decl":{"start":{"line":166,"column":72},"end":{"line":166,"column":73}},"loc":{"start":{"line":166,"column":88},"end":{"line":177,"column":9}},"line":166},"27":{"name":"(anonymous_27)","decl":{"start":{"line":170,"column":19},"end":{"line":170,"column":20}},"loc":{"start":{"line":170,"column":39},"end":{"line":176,"column":13}},"line":170},"28":{"name":"(anonymous_28)","decl":{"start":{"line":178,"column":51},"end":{"line":178,"column":52}},"loc":{"start":{"line":178,"column":67},"end":{"line":188,"column":9}},"line":178},"29":{"name":"(anonymous_29)","decl":{"start":{"line":182,"column":19},"end":{"line":182,"column":20}},"loc":{"start":{"line":182,"column":39},"end":{"line":187,"column":13}},"line":182},"30":{"name":"(anonymous_30)","decl":{"start":{"line":189,"column":51},"end":{"line":189,"column":52}},"loc":{"start":{"line":189,"column":67},"end":{"line":198,"column":9}},"line":189},"31":{"name":"(anonymous_31)","decl":{"start":{"line":193,"column":19},"end":{"line":193,"column":20}},"loc":{"start":{"line":193,"column":39},"end":{"line":197,"column":13}},"line":193},"32":{"name":"(anonymous_32)","decl":{"start":{"line":199,"column":29},"end":{"line":199,"column":30}},"loc":{"start":{"line":199,"column":45},"end":{"line":204,"column":9}},"line":199},"33":{"name":"(anonymous_33)","decl":{"start":{"line":203,"column":20},"end":{"line":203,"column":21}},"loc":{"start":{"line":203,"column":26},"end":{"line":203,"column":32}},"line":203},"34":{"name":"(anonymous_34)","decl":{"start":{"line":206,"column":35},"end":{"line":206,"column":36}},"loc":{"start":{"line":206,"column":41},"end":{"line":241,"column":5}},"line":206},"35":{"name":"(anonymous_35)","decl":{"start":{"line":208,"column":46},"end":{"line":208,"column":47}},"loc":{"start":{"line":208,"column":62},"end":{"line":218,"column":9}},"line":208},"36":{"name":"(anonymous_36)","decl":{"start":{"line":209,"column":49},"end":{"line":209,"column":50}},"loc":{"start":{"line":209,"column":55},"end":{"line":217,"column":13}},"line":209},"37":{"name":"(anonymous_37)","decl":{"start":{"line":213,"column":23},"end":{"line":213,"column":24}},"loc":{"start":{"line":213,"column":43},"end":{"line":216,"column":17}},"line":213},"38":{"name":"(anonymous_38)","decl":{"start":{"line":219,"column":55},"end":{"line":219,"column":56}},"loc":{"start":{"line":219,"column":71},"end":{"line":226,"column":9}},"line":219},"39":{"name":"(anonymous_39)","decl":{"start":{"line":220,"column":98},"end":{"line":220,"column":99}},"loc":{"start":{"line":220,"column":118},"end":{"line":225,"column":13}},"line":220},"40":{"name":"(anonymous_40)","decl":{"start":{"line":227,"column":58},"end":{"line":227,"column":59}},"loc":{"start":{"line":227,"column":74},"end":{"line":234,"column":9}},"line":227},"41":{"name":"(anonymous_41)","decl":{"start":{"line":228,"column":58},"end":{"line":228,"column":59}},"loc":{"start":{"line":228,"column":78},"end":{"line":233,"column":13}},"line":228},"42":{"name":"(anonymous_42)","decl":{"start":{"line":235,"column":29},"end":{"line":235,"column":30}},"loc":{"start":{"line":235,"column":45},"end":{"line":240,"column":9}},"line":235},"43":{"name":"(anonymous_43)","decl":{"start":{"line":239,"column":20},"end":{"line":239,"column":21}},"loc":{"start":{"line":239,"column":26},"end":{"line":239,"column":32}},"line":239},"44":{"name":"(anonymous_44)","decl":{"start":{"line":242,"column":33},"end":{"line":242,"column":34}},"loc":{"start":{"line":242,"column":39},"end":{"line":347,"column":5}},"line":242},"45":{"name":"(anonymous_45)","decl":{"start":{"line":262,"column":40},"end":{"line":262,"column":41}},"loc":{"start":{"line":262,"column":56},"end":{"line":268,"column":9}},"line":262},"46":{"name":"(anonymous_46)","decl":{"start":{"line":263,"column":49},"end":{"line":263,"column":50}},"loc":{"start":{"line":263,"column":55},"end":{"line":265,"column":13}},"line":263},"47":{"name":"(anonymous_47)","decl":{"start":{"line":265,"column":20},"end":{"line":265,"column":21}},"loc":{"start":{"line":265,"column":26},"end":{"line":267,"column":13}},"line":265},"48":{"name":"(anonymous_48)","decl":{"start":{"line":269,"column":53},"end":{"line":269,"column":54}},"loc":{"start":{"line":269,"column":69},"end":{"line":275,"column":9}},"line":269},"49":{"name":"(anonymous_49)","decl":{"start":{"line":270,"column":56},"end":{"line":270,"column":57}},"loc":{"start":{"line":270,"column":62},"end":{"line":272,"column":13}},"line":270},"50":{"name":"(anonymous_50)","decl":{"start":{"line":272,"column":21},"end":{"line":272,"column":22}},"loc":{"start":{"line":272,"column":27},"end":{"line":274,"column":13}},"line":272},"51":{"name":"(anonymous_51)","decl":{"start":{"line":276,"column":51},"end":{"line":276,"column":52}},"loc":{"start":{"line":276,"column":67},"end":{"line":296,"column":9}},"line":276},"52":{"name":"(anonymous_52)","decl":{"start":{"line":280,"column":19},"end":{"line":280,"column":20}},"loc":{"start":{"line":280,"column":46},"end":{"line":295,"column":13}},"line":280},"53":{"name":"(anonymous_53)","decl":{"start":{"line":282,"column":106},"end":{"line":282,"column":107}},"loc":{"start":{"line":282,"column":126},"end":{"line":294,"column":17}},"line":282},"54":{"name":"(anonymous_54)","decl":{"start":{"line":290,"column":28},"end":{"line":290,"column":29}},"loc":{"start":{"line":290,"column":36},"end":{"line":293,"column":21}},"line":290},"55":{"name":"(anonymous_55)","decl":{"start":{"line":297,"column":61},"end":{"line":297,"column":62}},"loc":{"start":{"line":297,"column":77},"end":{"line":317,"column":9}},"line":297},"56":{"name":"(anonymous_56)","decl":{"start":{"line":301,"column":19},"end":{"line":301,"column":20}},"loc":{"start":{"line":301,"column":46},"end":{"line":316,"column":13}},"line":301},"57":{"name":"(anonymous_57)","decl":{"start":{"line":303,"column":108},"end":{"line":303,"column":109}},"loc":{"start":{"line":303,"column":128},"end":{"line":315,"column":17}},"line":303},"58":{"name":"(anonymous_58)","decl":{"start":{"line":311,"column":28},"end":{"line":311,"column":29}},"loc":{"start":{"line":311,"column":36},"end":{"line":314,"column":21}},"line":311},"59":{"name":"(anonymous_59)","decl":{"start":{"line":318,"column":47},"end":{"line":318,"column":48}},"loc":{"start":{"line":318,"column":63},"end":{"line":338,"column":9}},"line":318},"60":{"name":"(anonymous_60)","decl":{"start":{"line":322,"column":19},"end":{"line":322,"column":20}},"loc":{"start":{"line":322,"column":46},"end":{"line":337,"column":13}},"line":322},"61":{"name":"(anonymous_61)","decl":{"start":{"line":324,"column":106},"end":{"line":324,"column":107}},"loc":{"start":{"line":324,"column":126},"end":{"line":336,"column":17}},"line":324},"62":{"name":"(anonymous_62)","decl":{"start":{"line":332,"column":28},"end":{"line":332,"column":29}},"loc":{"start":{"line":332,"column":36},"end":{"line":335,"column":21}},"line":332},"63":{"name":"(anonymous_63)","decl":{"start":{"line":339,"column":26},"end":{"line":339,"column":27}},"loc":{"start":{"line":339,"column":42},"end":{"line":346,"column":9}},"line":339},"64":{"name":"(anonymous_64)","decl":{"start":{"line":343,"column":20},"end":{"line":343,"column":21}},"loc":{"start":{"line":343,"column":26},"end":{"line":345,"column":13}},"line":343},"65":{"name":"(anonymous_65)","decl":{"start":{"line":348,"column":37},"end":{"line":348,"column":38}},"loc":{"start":{"line":348,"column":43},"end":{"line":429,"column":5}},"line":348},"66":{"name":"(anonymous_66)","decl":{"start":{"line":349,"column":40},"end":{"line":349,"column":41}},"loc":{"start":{"line":349,"column":56},"end":{"line":357,"column":9}},"line":349},"67":{"name":"(anonymous_67)","decl":{"start":{"line":350,"column":49},"end":{"line":350,"column":50}},"loc":{"start":{"line":350,"column":55},"end":{"line":354,"column":13}},"line":350},"68":{"name":"(anonymous_68)","decl":{"start":{"line":351,"column":57},"end":{"line":351,"column":58}},"loc":{"start":{"line":351,"column":63},"end":{"line":353,"column":17}},"line":351},"69":{"name":"(anonymous_69)","decl":{"start":{"line":354,"column":21},"end":{"line":354,"column":22}},"loc":{"start":{"line":354,"column":28},"end":{"line":356,"column":13}},"line":354},"70":{"name":"(anonymous_70)","decl":{"start":{"line":358,"column":30},"end":{"line":358,"column":31}},"loc":{"start":{"line":358,"column":46},"end":{"line":365,"column":9}},"line":358},"71":{"name":"(anonymous_71)","decl":{"start":{"line":362,"column":20},"end":{"line":362,"column":21}},"loc":{"start":{"line":362,"column":26},"end":{"line":364,"column":13}},"line":362},"72":{"name":"(anonymous_72)","decl":{"start":{"line":366,"column":53},"end":{"line":366,"column":54}},"loc":{"start":{"line":366,"column":69},"end":{"line":387,"column":9}},"line":366},"73":{"name":"(anonymous_73)","decl":{"start":{"line":371,"column":20},"end":{"line":371,"column":21}},"loc":{"start":{"line":371,"column":28},"end":{"line":386,"column":13}},"line":371},"74":{"name":"(anonymous_74)","decl":{"start":{"line":376,"column":23},"end":{"line":376,"column":24}},"loc":{"start":{"line":376,"column":50},"end":{"line":385,"column":17}},"line":376},"75":{"name":"(anonymous_75)","decl":{"start":{"line":378,"column":117},"end":{"line":378,"column":118}},"loc":{"start":{"line":378,"column":137},"end":{"line":384,"column":21}},"line":378},"76":{"name":"(anonymous_76)","decl":{"start":{"line":388,"column":58},"end":{"line":388,"column":59}},"loc":{"start":{"line":388,"column":74},"end":{"line":415,"column":9}},"line":388},"77":{"name":"(anonymous_77)","decl":{"start":{"line":393,"column":20},"end":{"line":393,"column":21}},"loc":{"start":{"line":393,"column":28},"end":{"line":414,"column":13}},"line":393},"78":{"name":"(anonymous_78)","decl":{"start":{"line":398,"column":23},"end":{"line":398,"column":24}},"loc":{"start":{"line":398,"column":50},"end":{"line":413,"column":17}},"line":398},"79":{"name":"(anonymous_79)","decl":{"start":{"line":400,"column":117},"end":{"line":400,"column":118}},"loc":{"start":{"line":400,"column":137},"end":{"line":412,"column":21}},"line":400},"80":{"name":"(anonymous_80)","decl":{"start":{"line":408,"column":32},"end":{"line":408,"column":33}},"loc":{"start":{"line":408,"column":45},"end":{"line":411,"column":25}},"line":408},"81":{"name":"(anonymous_81)","decl":{"start":{"line":416,"column":66},"end":{"line":416,"column":67}},"loc":{"start":{"line":416,"column":82},"end":{"line":428,"column":9}},"line":416},"82":{"name":"(anonymous_82)","decl":{"start":{"line":420,"column":19},"end":{"line":420,"column":20}},"loc":{"start":{"line":420,"column":46},"end":{"line":427,"column":13}},"line":420},"83":{"name":"(anonymous_83)","decl":{"start":{"line":422,"column":115},"end":{"line":422,"column":116}},"loc":{"start":{"line":422,"column":135},"end":{"line":426,"column":17}},"line":422},"84":{"name":"(anonymous_84)","decl":{"start":{"line":430,"column":37},"end":{"line":430,"column":38}},"loc":{"start":{"line":430,"column":43},"end":{"line":458,"column":5}},"line":430},"85":{"name":"(anonymous_85)","decl":{"start":{"line":431,"column":36},"end":{"line":431,"column":37}},"loc":{"start":{"line":431,"column":52},"end":{"line":433,"column":9}},"line":431},"86":{"name":"(anonymous_86)","decl":{"start":{"line":432,"column":49},"end":{"line":432,"column":50}},"loc":{"start":{"line":432,"column":55},"end":{"line":432,"column":61}},"line":432},"87":{"name":"(anonymous_87)","decl":{"start":{"line":432,"column":69},"end":{"line":432,"column":70}},"loc":{"start":{"line":432,"column":76},"end":{"line":432,"column":92}},"line":432},"88":{"name":"(anonymous_88)","decl":{"start":{"line":434,"column":43},"end":{"line":434,"column":44}},"loc":{"start":{"line":434,"column":59},"end":{"line":441,"column":9}},"line":434},"89":{"name":"(anonymous_89)","decl":{"start":{"line":435,"column":59},"end":{"line":435,"column":60}},"loc":{"start":{"line":435,"column":79},"end":{"line":440,"column":13}},"line":435},"90":{"name":"(anonymous_90)","decl":{"start":{"line":442,"column":67},"end":{"line":442,"column":68}},"loc":{"start":{"line":442,"column":83},"end":{"line":449,"column":9}},"line":442},"91":{"name":"(anonymous_91)","decl":{"start":{"line":443,"column":59},"end":{"line":443,"column":60}},"loc":{"start":{"line":443,"column":79},"end":{"line":448,"column":13}},"line":443},"92":{"name":"(anonymous_92)","decl":{"start":{"line":450,"column":26},"end":{"line":450,"column":27}},"loc":{"start":{"line":450,"column":42},"end":{"line":457,"column":9}},"line":450},"93":{"name":"(anonymous_93)","decl":{"start":{"line":454,"column":20},"end":{"line":454,"column":21}},"loc":{"start":{"line":454,"column":26},"end":{"line":456,"column":13}},"line":454},"94":{"name":"(anonymous_94)","decl":{"start":{"line":459,"column":33},"end":{"line":459,"column":34}},"loc":{"start":{"line":459,"column":39},"end":{"line":533,"column":5}},"line":459},"95":{"name":"(anonymous_95)","decl":{"start":{"line":460,"column":36},"end":{"line":460,"column":37}},"loc":{"start":{"line":460,"column":52},"end":{"line":462,"column":9}},"line":460},"96":{"name":"(anonymous_96)","decl":{"start":{"line":461,"column":49},"end":{"line":461,"column":50}},"loc":{"start":{"line":461,"column":55},"end":{"line":461,"column":61}},"line":461},"97":{"name":"(anonymous_97)","decl":{"start":{"line":461,"column":69},"end":{"line":461,"column":70}},"loc":{"start":{"line":461,"column":76},"end":{"line":461,"column":92}},"line":461},"98":{"name":"(anonymous_98)","decl":{"start":{"line":463,"column":46},"end":{"line":463,"column":47}},"loc":{"start":{"line":463,"column":62},"end":{"line":485,"column":9}},"line":463},"99":{"name":"(anonymous_99)","decl":{"start":{"line":476,"column":19},"end":{"line":476,"column":20}},"loc":{"start":{"line":476,"column":39},"end":{"line":484,"column":13}},"line":476},"100":{"name":"(anonymous_100)","decl":{"start":{"line":480,"column":51},"end":{"line":480,"column":52}},"loc":{"start":{"line":480,"column":59},"end":{"line":483,"column":17}},"line":480},"101":{"name":"(anonymous_101)","decl":{"start":{"line":486,"column":67},"end":{"line":486,"column":68}},"loc":{"start":{"line":486,"column":83},"end":{"line":505,"column":9}},"line":486},"102":{"name":"(anonymous_102)","decl":{"start":{"line":499,"column":19},"end":{"line":499,"column":20}},"loc":{"start":{"line":499,"column":39},"end":{"line":504,"column":13}},"line":499},"103":{"name":"(anonymous_103)","decl":{"start":{"line":506,"column":71},"end":{"line":506,"column":72}},"loc":{"start":{"line":506,"column":87},"end":{"line":524,"column":9}},"line":506},"104":{"name":"(anonymous_104)","decl":{"start":{"line":519,"column":19},"end":{"line":519,"column":20}},"loc":{"start":{"line":519,"column":39},"end":{"line":523,"column":13}},"line":519},"105":{"name":"(anonymous_105)","decl":{"start":{"line":525,"column":26},"end":{"line":525,"column":27}},"loc":{"start":{"line":525,"column":42},"end":{"line":532,"column":9}},"line":525},"106":{"name":"(anonymous_106)","decl":{"start":{"line":529,"column":20},"end":{"line":529,"column":21}},"loc":{"start":{"line":529,"column":26},"end":{"line":531,"column":13}},"line":529},"107":{"name":"(anonymous_107)","decl":{"start":{"line":534,"column":40},"end":{"line":534,"column":41}},"loc":{"start":{"line":534,"column":52},"end":{"line":569,"column":5}},"line":534},"108":{"name":"(anonymous_108)","decl":{"start":{"line":536,"column":26},"end":{"line":536,"column":27}},"loc":{"start":{"line":536,"column":42},"end":{"line":540,"column":9}},"line":536},"109":{"name":"(anonymous_109)","decl":{"start":{"line":537,"column":49},"end":{"line":537,"column":50}},"loc":{"start":{"line":537,"column":57},"end":{"line":539,"column":13}},"line":537},"110":{"name":"(anonymous_110)","decl":{"start":{"line":541,"column":26},"end":{"line":541,"column":27}},"loc":{"start":{"line":541,"column":42},"end":{"line":548,"column":9}},"line":541},"111":{"name":"(anonymous_111)","decl":{"start":{"line":545,"column":20},"end":{"line":545,"column":21}},"loc":{"start":{"line":545,"column":26},"end":{"line":547,"column":13}},"line":545},"112":{"name":"(anonymous_112)","decl":{"start":{"line":549,"column":45},"end":{"line":549,"column":46}},"loc":{"start":{"line":549,"column":61},"end":{"line":558,"column":9}},"line":549},"113":{"name":"(anonymous_113)","decl":{"start":{"line":552,"column":19},"end":{"line":552,"column":20}},"loc":{"start":{"line":552,"column":39},"end":{"line":557,"column":13}},"line":552},"114":{"name":"(anonymous_114)","decl":{"start":{"line":559,"column":64},"end":{"line":559,"column":65}},"loc":{"start":{"line":559,"column":80},"end":{"line":568,"column":9}},"line":559},"115":{"name":"(anonymous_115)","decl":{"start":{"line":562,"column":19},"end":{"line":562,"column":20}},"loc":{"start":{"line":562,"column":39},"end":{"line":567,"column":13}},"line":562},"116":{"name":"(anonymous_116)","decl":{"start":{"line":570,"column":38},"end":{"line":570,"column":39}},"loc":{"start":{"line":570,"column":50},"end":{"line":604,"column":5}},"line":570},"117":{"name":"(anonymous_117)","decl":{"start":{"line":571,"column":26},"end":{"line":571,"column":27}},"loc":{"start":{"line":571,"column":42},"end":{"line":575,"column":9}},"line":571},"118":{"name":"(anonymous_118)","decl":{"start":{"line":572,"column":49},"end":{"line":572,"column":50}},"loc":{"start":{"line":572,"column":57},"end":{"line":574,"column":13}},"line":572},"119":{"name":"(anonymous_119)","decl":{"start":{"line":576,"column":26},"end":{"line":576,"column":27}},"loc":{"start":{"line":576,"column":42},"end":{"line":583,"column":9}},"line":576},"120":{"name":"(anonymous_120)","decl":{"start":{"line":580,"column":20},"end":{"line":580,"column":21}},"loc":{"start":{"line":580,"column":26},"end":{"line":582,"column":13}},"line":580},"121":{"name":"(anonymous_121)","decl":{"start":{"line":584,"column":70},"end":{"line":584,"column":71}},"loc":{"start":{"line":584,"column":86},"end":{"line":593,"column":9}},"line":584},"122":{"name":"(anonymous_122)","decl":{"start":{"line":588,"column":19},"end":{"line":588,"column":20}},"loc":{"start":{"line":588,"column":39},"end":{"line":592,"column":13}},"line":588},"123":{"name":"(anonymous_123)","decl":{"start":{"line":594,"column":52},"end":{"line":594,"column":53}},"loc":{"start":{"line":594,"column":68},"end":{"line":603,"column":9}},"line":594},"124":{"name":"(anonymous_124)","decl":{"start":{"line":598,"column":19},"end":{"line":598,"column":20}},"loc":{"start":{"line":598,"column":39},"end":{"line":602,"column":13}},"line":598},"125":{"name":"(anonymous_125)","decl":{"start":{"line":605,"column":41},"end":{"line":605,"column":42}},"loc":{"start":{"line":605,"column":53},"end":{"line":633,"column":5}},"line":605},"126":{"name":"(anonymous_126)","decl":{"start":{"line":606,"column":37},"end":{"line":606,"column":38}},"loc":{"start":{"line":606,"column":53},"end":{"line":610,"column":9}},"line":606},"127":{"name":"(anonymous_127)","decl":{"start":{"line":608,"column":22},"end":{"line":608,"column":23}},"loc":{"start":{"line":608,"column":28},"end":{"line":608,"column":34}},"line":608},"128":{"name":"(anonymous_128)","decl":{"start":{"line":609,"column":23},"end":{"line":609,"column":24}},"loc":{"start":{"line":609,"column":30},"end":{"line":609,"column":46}},"line":609},"129":{"name":"(anonymous_129)","decl":{"start":{"line":611,"column":66},"end":{"line":611,"column":67}},"loc":{"start":{"line":611,"column":82},"end":{"line":624,"column":9}},"line":611},"130":{"name":"(anonymous_130)","decl":{"start":{"line":612,"column":77},"end":{"line":612,"column":78}},"loc":{"start":{"line":612,"column":97},"end":{"line":623,"column":13}},"line":612},"131":{"name":"(anonymous_131)","decl":{"start":{"line":616,"column":51},"end":{"line":616,"column":52}},"loc":{"start":{"line":616,"column":61},"end":{"line":619,"column":17}},"line":616},"132":{"name":"(anonymous_132)","decl":{"start":{"line":620,"column":26},"end":{"line":620,"column":27}},"loc":{"start":{"line":620,"column":32},"end":{"line":622,"column":17}},"line":620},"133":{"name":"(anonymous_133)","decl":{"start":{"line":625,"column":26},"end":{"line":625,"column":27}},"loc":{"start":{"line":625,"column":42},"end":{"line":632,"column":9}},"line":625},"134":{"name":"(anonymous_134)","decl":{"start":{"line":629,"column":20},"end":{"line":629,"column":21}},"loc":{"start":{"line":629,"column":26},"end":{"line":631,"column":13}},"line":629},"135":{"name":"(anonymous_135)","decl":{"start":{"line":634,"column":45},"end":{"line":634,"column":46}},"loc":{"start":{"line":634,"column":51},"end":{"line":660,"column":5}},"line":634},"136":{"name":"(anonymous_136)","decl":{"start":{"line":635,"column":37},"end":{"line":635,"column":38}},"loc":{"start":{"line":635,"column":53},"end":{"line":642,"column":9}},"line":635},"137":{"name":"(anonymous_137)","decl":{"start":{"line":637,"column":22},"end":{"line":637,"column":23}},"loc":{"start":{"line":637,"column":28},"end":{"line":639,"column":13}},"line":637},"138":{"name":"(anonymous_138)","decl":{"start":{"line":640,"column":22},"end":{"line":640,"column":23}},"loc":{"start":{"line":640,"column":28},"end":{"line":640,"column":34}},"line":640},"139":{"name":"(anonymous_139)","decl":{"start":{"line":641,"column":23},"end":{"line":641,"column":24}},"loc":{"start":{"line":641,"column":30},"end":{"line":641,"column":46}},"line":641},"140":{"name":"(anonymous_140)","decl":{"start":{"line":643,"column":55},"end":{"line":643,"column":56}},"loc":{"start":{"line":643,"column":71},"end":{"line":651,"column":9}},"line":643},"141":{"name":"(anonymous_141)","decl":{"start":{"line":644,"column":73},"end":{"line":644,"column":74}},"loc":{"start":{"line":644,"column":93},"end":{"line":650,"column":13}},"line":644},"142":{"name":"(anonymous_142)","decl":{"start":{"line":652,"column":26},"end":{"line":652,"column":27}},"loc":{"start":{"line":652,"column":42},"end":{"line":659,"column":9}},"line":652},"143":{"name":"(anonymous_143)","decl":{"start":{"line":656,"column":20},"end":{"line":656,"column":21}},"loc":{"start":{"line":656,"column":26},"end":{"line":658,"column":13}},"line":656},"144":{"name":"(anonymous_144)","decl":{"start":{"line":661,"column":49},"end":{"line":661,"column":50}},"loc":{"start":{"line":661,"column":55},"end":{"line":689,"column":5}},"line":661},"145":{"name":"(anonymous_145)","decl":{"start":{"line":662,"column":37},"end":{"line":662,"column":38}},"loc":{"start":{"line":662,"column":53},"end":{"line":669,"column":9}},"line":662},"146":{"name":"(anonymous_146)","decl":{"start":{"line":664,"column":22},"end":{"line":664,"column":23}},"loc":{"start":{"line":664,"column":28},"end":{"line":666,"column":13}},"line":664},"147":{"name":"(anonymous_147)","decl":{"start":{"line":667,"column":22},"end":{"line":667,"column":23}},"loc":{"start":{"line":667,"column":28},"end":{"line":667,"column":34}},"line":667},"148":{"name":"(anonymous_148)","decl":{"start":{"line":668,"column":23},"end":{"line":668,"column":24}},"loc":{"start":{"line":668,"column":30},"end":{"line":668,"column":46}},"line":668},"149":{"name":"(anonymous_149)","decl":{"start":{"line":670,"column":55},"end":{"line":670,"column":56}},"loc":{"start":{"line":670,"column":71},"end":{"line":680,"column":9}},"line":670},"150":{"name":"(anonymous_150)","decl":{"start":{"line":671,"column":76},"end":{"line":671,"column":77}},"loc":{"start":{"line":671,"column":96},"end":{"line":679,"column":13}},"line":671},"151":{"name":"(anonymous_151)","decl":{"start":{"line":681,"column":26},"end":{"line":681,"column":27}},"loc":{"start":{"line":681,"column":42},"end":{"line":688,"column":9}},"line":681},"152":{"name":"(anonymous_152)","decl":{"start":{"line":685,"column":20},"end":{"line":685,"column":21}},"loc":{"start":{"line":685,"column":26},"end":{"line":687,"column":13}},"line":685}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":8,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":8,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":8,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":5,"column":1}},{"start":{"line":5,"column":6},"end":{"line":8,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":6,"column":33}},{"start":{"line":6,"column":4},"end":{"line":6,"column":33}}],"line":6},"4":{"loc":{"start":{"line":9,"column":25},"end":{"line":13,"column":2}},"type":"binary-expr","locations":[{"start":{"line":9,"column":26},"end":{"line":9,"column":30}},{"start":{"line":9,"column":34},"end":{"line":9,"column":57}},{"start":{"line":9,"column":63},"end":{"line":13,"column":1}}],"line":9},"5":{"loc":{"start":{"line":9,"column":63},"end":{"line":13,"column":1}},"type":"cond-expr","locations":[{"start":{"line":9,"column":80},"end":{"line":11,"column":1}},{"start":{"line":11,"column":5},"end":{"line":13,"column":1}}],"line":9},"6":{"loc":{"start":{"line":14,"column":19},"end":{"line":20,"column":1}},"type":"binary-expr","locations":[{"start":{"line":14,"column":20},"end":{"line":14,"column":24}},{"start":{"line":14,"column":28},"end":{"line":14,"column":45}},{"start":{"line":14,"column":50},"end":{"line":20,"column":1}}],"line":14},"7":{"loc":{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":42}},{"start":{"line":15,"column":4},"end":{"line":15,"column":42}}],"line":15},"8":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":11}},{"start":{"line":15,"column":15},"end":{"line":15,"column":29}}],"line":15},"9":{"loc":{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":131}},{"start":{"line":17,"column":4},"end":{"line":17,"column":131}}],"line":17},"10":{"loc":{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},"type":"if","locations":[{"start":{"line":17,"column":40},"end":{"line":17,"column":131}},{"start":{"line":17,"column":40},"end":{"line":17,"column":131}}],"line":17},"11":{"loc":{"start":{"line":17,"column":44},"end":{"line":17,"column":97}},"type":"binary-expr","locations":[{"start":{"line":17,"column":44},"end":{"line":17,"column":59}},{"start":{"line":17,"column":63},"end":{"line":17,"column":97}}],"line":17},"12":{"loc":{"start":{"line":21,"column":22},"end":{"line":23,"column":1}},"type":"binary-expr","locations":[{"start":{"line":21,"column":23},"end":{"line":21,"column":27}},{"start":{"line":21,"column":31},"end":{"line":21,"column":51}},{"start":{"line":21,"column":56},"end":{"line":23,"column":1}}],"line":21},"13":{"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":61}},"type":"cond-expr","locations":[{"start":{"line":22,"column":37},"end":{"line":22,"column":40}},{"start":{"line":22,"column":43},"end":{"line":22,"column":61}}],"line":22},"14":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":15}},{"start":{"line":22,"column":19},"end":{"line":22,"column":33}}],"line":22}},"s":{"0":1,"1":11,"2":11,"3":11,"4":94,"5":0,"6":0,"7":0,"8":1,"9":1,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":11,"18":11,"19":1,"20":1,"21":1,"22":2,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":3,"125":2,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":3,"163":3,"164":3,"165":0,"166":1,"167":3,"168":3,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":0,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":0,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"279":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":0,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":0,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"320":1,"321":1,"322":1,"323":0,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"330":1,"331":1,"332":1,"333":1,"334":1,"335":1},"f":{"0":11,"1":94,"2":0,"3":1,"4":0,"5":1,"6":2,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":3,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":3,"67":3,"68":3,"69":0,"70":3,"71":3,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":0,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":0,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":0,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":0,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":0,"149":1,"150":1,"151":1,"152":1},"b":{"0":[1,1,1],"1":[1,0],"2":[11,0],"3":[0,0],"4":[1,1,1],"5":[1,0],"6":[1,1,1],"7":[0,1],"8":[1,1],"9":[1,0],"10":[11,0],"11":[11,11],"12":[1,1,1],"13":[0,2],"14":[2,2]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/controllers/user.controller.spec.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/controllers/user.controller.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken';\nimport { User, UserAttributes } from './../../models/user.model';\nimport { applicationPromise } from './../../server';\nimport chai, { expect } from 'chai';\nimport chaiHttp from 'chai-http';\nimport { Application } from 'express';\n\nchai.use(chaiHttp);\nlet app: Application;\n\nconst user1: UserAttributes = {\n    userId: 1,\n    admin: false,\n    wallet: 500,\n    userName: 'gandalf',\n    password: '$2b$12$9yxV7TrHFID5bGdWJ8zBv.eSqHuSQYF8cxSR8yMknLz0RRkr2KwhC', // gandalf4ever\n    userMail: 'gandalf@wizards.me',\n    firstName: 'Gandalf',\n    lastName: 'The Grey',\n    gender: 'male',\n    phoneNumber: 796554545,\n    addressStreet: null,\n    addressPin: null,\n    addressCity: null,\n    addressCountry: 'Middleearth',\n    gameScore: 5,\n    activityScore: 2,\n    overallScore: 10\n};\nconst adminUser: UserAttributes = {\n    userId: 2,\n    admin: true,\n    wallet: 500,\n    userName: 'admin',\n    password: '$2b$12$XVwWZfAd2fjjd.QjrvMJXOh4WPuxJ4.tpNzkg9wpSSNOShAoDOYWC', // adminPW\n    userMail: 'superAdmin@admins.com',\n    firstName: 'Jack',\n    lastName: 'Hammington',\n    gender: 'male',\n    phoneNumber: 796666666,\n    addressStreet: null,\n    addressPin: null,\n    addressCity: null,\n    addressCountry: 'England',\n    gameScore: 5,\n    activityScore: 4,\n    overallScore: 20\n};\n\ndescribe('UserController Test', () => {\n    before('init app', function(done) {\n        applicationPromise.then(value => {\n            app = value;\n            done();\n        });\n    });\n    describe('Test Register', () => {\n        before('init', function(done) {\n            User.create(user1).then(() => done());\n        });\n        it('should register successfully', function(done) {\n            chai.request(app).post('/user/register').send({\n                userName: 'frodo',\n                password: 'F4Middle3rth',\n                userMail: 'frodo@hobbits.me',\n                firstName: 'Frodo',\n                lastName: 'Baggins',\n                gender: 'male',\n                phoneNumber: '768885434',\n                addressStreet: 'Brandy Hall',\n                addressPin: '1',\n                addressCity: 'Buckland',\n                addressCountry: 'The Shire'\n            }).end(function (err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.admin).to.be.eq(false);\n                expect(res.body.wallet).to.be.eq(500);\n                expect(res.body.firstName).to.contain('Frodo');\n                done();\n            });\n        });\n        it('should return 400 when userName already exists', function(done) {\n            chai.request(app).post('/user/register').send({\n                userName: 'gandalf',\n                password: 'hansii',\n                userMail: 'hans@gmail.com',\n                firstName: 'Hans',\n                lastName: 'Ulrich',\n                gender: 'male',\n                phoneNumber: '0794443332',\n                addressStreet: 'Hansenstrasse',\n                addressPin: '13',\n                addressCity: 'Mühlhausen',\n                addressCountry: 'Hansingen'\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(400);\n                expect(res.body.message).to.contain('This username or email address is already being used!');\n                done();\n            });\n        });\n        it('should return 400 when email already exists', function(done) {\n            chai.request(app).post('/user/register').send({\n                userName: 'radagast',\n                password: '4est',\n                userMail: 'gandalf@wizards.me',\n                firstName: 'Radagast',\n                lastName: 'The Brown',\n                gender: 'male',\n                phoneNumber: '0791234567',\n                addressStreet: 'Rhosgobel',\n                addressPin: '',\n                addressCity: 'Mirkwood',\n                addressCountry: 'Middle-earth'\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(400);\n                expect(res.body.message).to.contain('This username or email address is already being used!');\n                done();\n            });\n        });\n        after('clean up', function(done) {\n            User.destroy({\n                truncate: true,\n                restartIdentity: true\n            }).then(() => done());\n        });\n    });\n    describe('Test login', () => {\n        before('init db', function(done) {\n            User.create(user1).then(() => done());\n        });\n        it('should login successfully with username when user registered', function(done) {\n            chai.request(app).post('/user/login').send({\n                userLogin: 'gandalf',\n                password: 'gandalf4ever'\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.token).not.to.be.eq(null);\n                expect(res.body.user.firstName).to.contain('Gandalf');\n                done();\n            });\n        });\n        it('should login successfully with email when user registered', function(done) {\n            chai.request(app).post('/user/login').send({\n                userLogin: 'gandalf@wizards.me',\n                password: 'gandalf4ever'\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.token).not.to.be.eq(null);\n                expect(res.body.user.firstName).to.contain('Gandalf');\n                done();\n            });\n        });\n        it('should not login when password wrong', function(done) {\n            chai.request(app).post('/user/login').send({\n                userLogin: 'gandalf@wizards.me',\n                password: 'gandever'\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(400);\n                expect(res.body.message).to.contain('Wrong password');\n                done();\n            });\n        });\n        it('should not login when not registered', function(done) {\n            chai.request(app).post('/user/login').send({\n                userLogin: 'notRegisteredUser',\n                password: 'heyImNotRegistered'\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(400);\n                done();\n            });\n        });\n        after('clean up db', function(done) {\n            User.destroy({\n                truncate: true,\n                restartIdentity: true\n            }).then(() => done());\n        });\n    });\n    describe('Test get all Users', () => {\n        let token: string;\n        before('init db and get valid token', function(done) {\n            User.create(user1).then(() => {\n                chai.request(app).post('/user/login').send({\n                    userLogin: 'gandalf',\n                    password: 'gandalf4ever'\n                }).end(function(err, res) {\n                    token = res.body.token;\n                    done();\n                });\n            });\n        });\n        it('should return all users when valid token', function(done) {\n            chai.request(app).get('/user/').set('Authorization', 'Bearer ' + token).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].firstName).to.be.eq('Gandalf');\n                done();\n            });\n        });\n        it('should be forbidden to access without token', function(done) {\n            chai.request(app).get('/user/').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(403);\n                expect(res.body.message).to.contain('Unauthorized');\n                done();\n            });\n        });\n        after('clean up db', function(done) {\n            User.destroy({\n                truncate: true,\n                restartIdentity: true\n            }).then(() => done());\n        });\n    });\n    describe('Test delete user', () => {\n        const userToDelete: UserAttributes = {\n            userId: 3,\n            admin: false,\n            wallet: 500,\n            userName: 'spamUser',\n            password: 'spammer',\n            userMail: 'spammer@spam.com',\n            firstName: 'Mister',\n            lastName: 'Spam',\n            gender: 'male',\n            phoneNumber: 34556543,\n            addressStreet: null,\n            addressPin: null,\n            addressCity: null,\n            addressCountry: 'Spamland',\n            gameScore: 0,\n            activityScore: 0,\n            overallScore: 0\n        };\n        before('init two user into db', function(done) {\n            User.create(user1).then(() => {\n                return User.create(adminUser);\n            }).then(() => {\n                done();\n            });\n        });\n        beforeEach('insert to deleted user into db', function(done) {\n            User.create(userToDelete).then(() => {\n                done();\n            }).catch(() => {\n                done();\n            });\n        });\n        it('should delete successfully one entry', function(done) {\n            chai.request(app).post('/user/login').send({ // login as admin to get valid token\n                userLogin: 'admin',\n                password: 'adminPW'\n            }).end(function(error, response) {\n                const token: string = response.body.token;\n                chai.request(app).delete('/user/3').set('Authorization', 'Bearer ' + token).end(function(err, res) {\n                    expect(err).to.be.eq(null);\n                    expect(res).to.have.status(200);\n                    expect(res.body.message).to.be.eq('Successfully deleted entry with id=3');\n                    User.findOne({\n                        where: {\n                            userName: 'spamUser'\n                        }\n                    }).then(user => {\n                        expect(user).to.be.eq(null);\n                        done();\n                    });\n                });\n            });\n        });\n        it('should return 202 when no user entry to delete', function(done) {\n            chai.request(app).post('/user/login').send({ // login as admin to get valid token\n                userLogin: 'admin',\n                password: 'adminPW'\n            }).end(function(error, response) {\n                const token: string = response.body.token;\n                chai.request(app).delete('/user/300').set('Authorization', 'Bearer ' + token).end(function(err, res) {\n                    expect(err).to.be.eq(null);\n                    expect(res).to.have.status(202);\n                    expect(res.body.message).to.be.eq('No entry to delete');\n                    User.findOne({\n                        where: {\n                            userName: 'spamUser'\n                        }\n                    }).then(user => {\n                        expect(user).not.to.be.eq(null);\n                        done();\n                    });\n                });\n            });\n        });\n        it('should not delete when not admin', function(done) {\n            chai.request(app).post('/user/login').send({\n                userLogin: 'gandalf',\n                password: 'gandalf4ever'\n            }).end(function(error, response) {\n                const token: string = response.body.token;\n                chai.request(app).delete('/user/3').set('Authorization', 'Bearer ' + token).end(function(err, res) {\n                    expect(err).to.be.eq(null);\n                    expect(res).to.have.status(403);\n                    expect(res.body.message).to.be.eq('This User is not an Admin');\n                    User.findOne({\n                        where: {\n                            userName: 'spamUser'\n                        }\n                    }).then(user => {\n                        expect(user).not.to.be.eq(null);\n                        done();\n                    });\n                });\n            });\n        });\n        after('clear db', function(done) {\n            User.destroy({\n                truncate: true,\n                restartIdentity: true,\n            }).then(() => {\n                done();\n            });\n        });\n    });\n    describe('Test make user admin', () => {\n        beforeEach('init user into db', function(done) {\n            User.create(user1).then(() => {\n                User.create(adminUser).then(() => {\n                    done();\n                });\n            }).catch(err => {\n                console.log(err);\n            });\n        });\n        afterEach('clear db', function(done) {\n            User.destroy({\n                truncate: true,\n                restartIdentity: true\n            }).then(() => {\n                done();\n            });\n        });\n        it('should make user successfully to admin', function(done) {\n            User.findOne({\n                where: {\n                    userName: 'gandalf'\n                }\n            }).then(user => {\n                expect(user.admin).to.be.eq(false);\n                chai.request(app).post('/user/login').send({\n                    userLogin: 'admin',\n                    password: 'adminPW'\n                }).end(function(error, response) {\n                    const token: string = response.body.token;\n                    chai.request(app).put('/user/makeAdmin/1').set('Authorization', 'Bearer ' + token).end(function(err, res) {\n                        expect(err).to.be.eq(null);\n                        expect(res).to.have.status(200);\n                        expect(res.body.admin).to.be.eq(true);\n                        expect(res.body.userName).to.be.eq('gandalf');\n                        done();\n                    });\n                });\n            });\n        });\n        it('should not make user to admin when no admin', function(done) {\n            User.findOne({\n                where: {\n                    userName: 'gandalf'\n                }\n            }).then(user => {\n                expect(user.admin).to.be.eq(false);\n                chai.request(app).post('/user/login').send({\n                    userLogin: 'gandalf',\n                    password: 'gandalf4ever'\n                }).end(function(error, response) {\n                    const token: string = response.body.token;\n                    chai.request(app).put('/user/makeAdmin/1').set('Authorization', 'Bearer ' + token).end(function(err, res) {\n                        expect(err).to.be.eq(null);\n                        expect(res).to.have.status(403);\n                        expect(res.body.message).to.be.eq('This User is not an Admin');\n                        User.findOne({\n                            where: {\n                                userName: 'gandalf'\n                            }\n                        }).then(foundUser => {\n                            expect(foundUser.admin).to.be.eq(false);\n                            done();\n                        });\n                    });\n                });\n            });\n        });\n        it('should return error, when no user with indicated id', function(done) {\n            chai.request(app).post('/user/login').send({\n                userLogin: 'admin',\n                password: 'adminPW'\n            }).end(function(error, response) {\n                const token: string = response.body.token;\n                chai.request(app).put('/user/makeAdmin/199').set('Authorization', 'Bearer ' + token).end(function(err, res) {\n                    expect(err).to.be.eq(null);\n                    expect(res).to.have.status(500);\n                    done();\n                });\n            });\n        });\n    });\n    describe('Test get single user', () => {\n        before('init user into db', function(done) {\n            User.create(user1).then(() => done()).catch(err => console.log(err));\n        });\n        it('should return requested user', function(done) {\n            chai.request(app).get('/user/1').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.userName).to.be.eq('gandalf');\n                done();\n            });\n        });\n        it('should return 404 when requested user does not exist', function(done) {\n            chai.request(app).get('/user/2').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(404);\n                expect(res.body.message).to.be.eq('User not found!');\n                done();\n            });\n        });\n        after('clear db', function(done) {\n            User.destroy({\n                truncate: true,\n                restartIdentity: true,\n            }).then(() => {\n                done();\n            });\n        });\n    });\n    describe('Test update user', () => {\n        before('init user into db', function(done) {\n            User.create(user1).then(() => done()).catch(err => console.log(err));\n        });\n        it('should successfully update user', function(done) {\n            chai.request(app).post('/user/edit').send({\n                userId: 1,\n                userName: 'gandalf',\n                userMail: 'gandalf@wizards.me',\n                firstName: 'Gandalf',\n                lastName: 'The White',\n                gender: 'male',\n                phoneNumber: 796554545,\n                addressStreet: null,\n                addressPin: null,\n                addressCity: null,\n                addressCountry: 'Aman'\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.lastName).to.be.eq('The White');\n                User.findByPk(1).then(user => {\n                    expect(user.lastName).to.be.eq('The White');\n                    done();\n                });\n            });\n        });\n        it('should return 500 when to be updated user not exists', function(done) {\n            chai.request(app).post('/user/edit').send({\n                userId: 2,\n                userName: 'admin',\n                userMail: 'superAdmin@admins.com',\n                firstName: 'Jack',\n                lastName: 'Hammington',\n                gender: 'male',\n                phoneNumber: 796666666,\n                addressStreet: null,\n                addressPin: null,\n                addressCity: 'London',\n                addressCountry: 'England'\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(500);\n                expect(res.body).to.have.property('message');\n                done();\n            });\n        });\n        it('should return 500 when cannot update because of bad data', function(done) {\n            chai.request(app).post('/user/edit').send({\n                userId: 1,\n                userName: null,\n                userMail: 'gandalf@wizards.me',\n                firstName: 'Gandalf',\n                lastName: 'The White',\n                gender: 'male',\n                phoneNumber: 796554545,\n                addressStreet: null,\n                addressPin: null,\n                addressCity: 1,\n                addressCountry: 'Aman'\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(500);\n                done();\n            });\n        });\n        after('clear db', function(done) {\n            User.destroy({\n                truncate: true,\n                restartIdentity: true,\n            }).then(() => {\n                done();\n            });\n        });\n    });\n    \n    describe('Test /passwordForgotten', function() {\n        this.timeout(12000);\n        before('init db', function(done) {\n            User.create(user1).then(user => {\n                done();\n            });\n        });\n        after('clear db', function(done) {\n            User.destroy({\n                truncate: true,\n                restartIdentity: true\n            }).then(() => {\n                done();\n            });\n        });\n        it('should send email successfully', function(done) {\n            chai.request(app).post('/user/passwordForgotten').send({\n                userEmail: 'gandalf@wizards.me'\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res.status).to.be.eq(200);\n                expect(res.body.message).to.be.eq('We sent you an email, check out your mail box!');\n                done();\n            });\n        });\n        it('should return 404 when user not exists with email', function(done) {\n            chai.request(app).post('/user/passwordForgotten').send({\n                userEmail: 'notExistent@me.com'\n            }).end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res.status).to.be.eq(404);\n                expect(res.body.message).to.be.eq('No such user!');\n                done();\n            });\n        });\n    });\n\n    describe('Test /restorePassword', function() {\n        before('init db', function(done) {\n            User.create(user1).then(user => {\n                done();\n            });\n        });\n        after('clear db', function(done) {\n            User.destroy({\n                truncate: true,\n                restartIdentity: true\n            }).then(() => {\n                done();\n            });\n        });\n        it('should restore password successfully with correct token', function(done) {\n            const token = jwt.sign({ userName: 'gandalf', userId: 1 }, process.env.JWT_PW_SECRET, { expiresIn: '15m' });\n            chai.request(app).post('/user/restorePassword').set('Authorization', 'Bearer ' + token).send({\n                password: 'hereAgain'\n            }).end(function(err, res) {\n                expect(res).to.have.status(200);\n                expect(res.body.message).to.be.eq('Successfully changed the password, you may now sign in!');\n                done();\n            });\n        });\n        it('should return 403 when no valid token', function(done) {\n            const token = jwt.sign({ userName: 'gandalf', userId: 1 }, process.env.JWT_SECRET, { expiresIn: '15m' });\n            chai.request(app).post('/user/restorePassword').set('Authorization', 'Bearer ' + token).send({\n                password: 'hereAgain'\n            }).end(function(err, res) {\n                expect(res).to.have.status(403);\n                expect(res.body.message).to.be.eq('Unauthorized');\n                done();\n            });\n        });\n    });\n\n    describe('Test updating game score' , function() {\n        before('init users into db', function(done) {\n            User.create(user1)\n            .then(() => done())\n            .catch(err => console.log(err));\n            \n        });\n        it('should update the game score of a user successfully', function(done) {\n            chai.request(app).put('/user/updateGameScore/1/7').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body.message).to.be.eq('Game score successfully updated!');\n                User.findByPk(1).then((user) => {\n                    expect(user.gameScore).to.be.eq(7);\n                    expect(user.overallScore).to.be.eq(14);\n                })\n                .then(() => {\n                    done();\n                });\n            });\n        });\n        after('clear db', function(done) {\n            User.destroy({\n                truncate: true,\n                restartIdentity: true,\n            }).then(() => {\n                done();\n            });\n        });\n    })\n\n    describe('Test getting game highscores', () => {\n        before('init users into db', function(done) {\n            User.create(user1)\n            .then(() => {\n                User.create(adminUser);\n            })\n            .then(() => done())\n            .catch(err => console.log(err));\n        });\n        it('should return users in the correct order', function(done) {\n            chai.request(app).get('/user/highscores/game').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].userName).to.be.eq('gandalf');\n                expect(res.body[1].userName).to.be.eq('admin');\n                done();\n            });\n        });\n        after('clear db', function(done) {\n            User.destroy({\n                truncate: true,\n                restartIdentity: true,\n            }).then(() => {\n                done();\n            });\n        });\n    });\n\n    describe('Test getting overall high scores', () => {\n        before('init users into db', function(done) {\n            User.create(user1)\n            .then(() => {\n                User.create(adminUser);\n            })\n            .then(() => done())\n            .catch(err => console.log(err));\n        });\n        it('should return users in the correct order', function(done) {\n            chai.request(app).get('/user/highscores/overall').end(function(err, res) {\n                expect(err).to.be.eq(null);\n                expect(res).to.have.status(200);\n                expect(res.body[0].userName).to.be.eq('admin');\n                expect(res.body[0].userId).to.be.eq(2);\n                expect(res.body[0].overallScore).to.be.eq(20);\n                expect(res.body[1].userName).to.be.eq('gandalf');\n                done();\n            });\n        });\n        after('clear db', function(done) {\n            User.destroy({\n                truncate: true,\n                restartIdentity: true,\n            }).then(() => {\n                done();\n            });\n        });\n    });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7a68ee1df45ea2c8d8f05864668aed9a66c300f3","contentHash":"0007050c21cabc1ab2abfb6663ff12a05f22a74842c45dbb7600b086be113920"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/middlewares/checkAuth.spec.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/middlewares/checkAuth.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":23},"end":{"line":6,"column":63}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":30}},"5":{"start":{"line":8,"column":23},"end":{"line":8,"column":46}},"6":{"start":{"line":9,"column":16},"end":{"line":9,"column":49}},"7":{"start":{"line":10,"column":20},"end":{"line":10,"column":60}},"8":{"start":{"line":11,"column":0},"end":{"line":156,"column":3}},"9":{"start":{"line":12,"column":16},"end":{"line":12,"column":45}},"10":{"start":{"line":13,"column":23},"end":{"line":13,"column":58}},"11":{"start":{"line":14,"column":20},"end":{"line":14,"column":41}},"12":{"start":{"line":15,"column":20},"end":{"line":15,"column":41}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":28}},"14":{"start":{"line":17,"column":4},"end":{"line":17,"column":23}},"15":{"start":{"line":18,"column":23},"end":{"line":22,"column":5}},"16":{"start":{"line":19,"column":8},"end":{"line":19,"column":34}},"17":{"start":{"line":20,"column":8},"end":{"line":20,"column":31}},"18":{"start":{"line":21,"column":8},"end":{"line":21,"column":31}},"19":{"start":{"line":23,"column":4},"end":{"line":61,"column":7}},"20":{"start":{"line":24,"column":8},"end":{"line":27,"column":11}},"21":{"start":{"line":25,"column":12},"end":{"line":25,"column":25}},"22":{"start":{"line":26,"column":12},"end":{"line":26,"column":19}},"23":{"start":{"line":28,"column":8},"end":{"line":39,"column":11}},"24":{"start":{"line":29,"column":24},"end":{"line":33,"column":14}},"25":{"start":{"line":34,"column":12},"end":{"line":34,"column":55}},"26":{"start":{"line":35,"column":12},"end":{"line":35,"column":92}},"27":{"start":{"line":36,"column":12},"end":{"line":36,"column":113}},"28":{"start":{"line":37,"column":12},"end":{"line":37,"column":58}},"29":{"start":{"line":38,"column":12},"end":{"line":38,"column":19}},"30":{"start":{"line":40,"column":8},"end":{"line":47,"column":11}},"31":{"start":{"line":41,"column":24},"end":{"line":41,"column":52}},"32":{"start":{"line":42,"column":12},"end":{"line":42,"column":55}},"33":{"start":{"line":43,"column":12},"end":{"line":43,"column":92}},"34":{"start":{"line":44,"column":12},"end":{"line":44,"column":113}},"35":{"start":{"line":45,"column":12},"end":{"line":45,"column":58}},"36":{"start":{"line":46,"column":12},"end":{"line":46,"column":19}},"37":{"start":{"line":48,"column":8},"end":{"line":60,"column":11}},"38":{"start":{"line":49,"column":26},"end":{"line":49,"column":145}},"39":{"start":{"line":50,"column":24},"end":{"line":54,"column":14}},"40":{"start":{"line":55,"column":12},"end":{"line":55,"column":55}},"41":{"start":{"line":56,"column":12},"end":{"line":56,"column":61}},"42":{"start":{"line":57,"column":12},"end":{"line":57,"column":58}},"43":{"start":{"line":58,"column":12},"end":{"line":58,"column":57}},"44":{"start":{"line":59,"column":12},"end":{"line":59,"column":19}},"45":{"start":{"line":62,"column":4},"end":{"line":113,"column":7}},"46":{"start":{"line":63,"column":8},"end":{"line":66,"column":11}},"47":{"start":{"line":64,"column":12},"end":{"line":64,"column":25}},"48":{"start":{"line":65,"column":12},"end":{"line":65,"column":19}},"49":{"start":{"line":67,"column":8},"end":{"line":74,"column":11}},"50":{"start":{"line":68,"column":24},"end":{"line":68,"column":52}},"51":{"start":{"line":69,"column":12},"end":{"line":69,"column":55}},"52":{"start":{"line":70,"column":12},"end":{"line":70,"column":92}},"53":{"start":{"line":71,"column":12},"end":{"line":71,"column":126}},"54":{"start":{"line":72,"column":12},"end":{"line":72,"column":58}},"55":{"start":{"line":73,"column":12},"end":{"line":73,"column":19}},"56":{"start":{"line":75,"column":8},"end":{"line":86,"column":11}},"57":{"start":{"line":76,"column":24},"end":{"line":80,"column":14}},"58":{"start":{"line":81,"column":12},"end":{"line":81,"column":55}},"59":{"start":{"line":82,"column":12},"end":{"line":82,"column":92}},"60":{"start":{"line":83,"column":12},"end":{"line":83,"column":126}},"61":{"start":{"line":84,"column":12},"end":{"line":84,"column":58}},"62":{"start":{"line":85,"column":12},"end":{"line":85,"column":19}},"63":{"start":{"line":87,"column":8},"end":{"line":99,"column":11}},"64":{"start":{"line":88,"column":26},"end":{"line":88,"column":145}},"65":{"start":{"line":89,"column":24},"end":{"line":93,"column":14}},"66":{"start":{"line":94,"column":12},"end":{"line":94,"column":55}},"67":{"start":{"line":95,"column":12},"end":{"line":95,"column":92}},"68":{"start":{"line":96,"column":12},"end":{"line":96,"column":126}},"69":{"start":{"line":97,"column":12},"end":{"line":97,"column":58}},"70":{"start":{"line":98,"column":12},"end":{"line":98,"column":19}},"71":{"start":{"line":100,"column":8},"end":{"line":112,"column":11}},"72":{"start":{"line":101,"column":26},"end":{"line":101,"column":145}},"73":{"start":{"line":102,"column":24},"end":{"line":106,"column":14}},"74":{"start":{"line":107,"column":12},"end":{"line":107,"column":55}},"75":{"start":{"line":108,"column":12},"end":{"line":108,"column":61}},"76":{"start":{"line":109,"column":12},"end":{"line":109,"column":58}},"77":{"start":{"line":110,"column":12},"end":{"line":110,"column":61}},"78":{"start":{"line":111,"column":12},"end":{"line":111,"column":19}},"79":{"start":{"line":114,"column":4},"end":{"line":155,"column":7}},"80":{"start":{"line":115,"column":23},"end":{"line":115,"column":48}},"81":{"start":{"line":116,"column":8},"end":{"line":119,"column":11}},"82":{"start":{"line":117,"column":12},"end":{"line":117,"column":25}},"83":{"start":{"line":118,"column":12},"end":{"line":118,"column":19}},"84":{"start":{"line":120,"column":8},"end":{"line":127,"column":11}},"85":{"start":{"line":121,"column":24},"end":{"line":121,"column":52}},"86":{"start":{"line":122,"column":12},"end":{"line":122,"column":63}},"87":{"start":{"line":123,"column":12},"end":{"line":123,"column":92}},"88":{"start":{"line":124,"column":12},"end":{"line":124,"column":113}},"89":{"start":{"line":125,"column":12},"end":{"line":125,"column":58}},"90":{"start":{"line":126,"column":12},"end":{"line":126,"column":19}},"91":{"start":{"line":128,"column":8},"end":{"line":140,"column":11}},"92":{"start":{"line":129,"column":26},"end":{"line":129,"column":117}},"93":{"start":{"line":130,"column":24},"end":{"line":134,"column":14}},"94":{"start":{"line":135,"column":12},"end":{"line":135,"column":63}},"95":{"start":{"line":136,"column":12},"end":{"line":136,"column":61}},"96":{"start":{"line":137,"column":12},"end":{"line":137,"column":58}},"97":{"start":{"line":138,"column":12},"end":{"line":138,"column":61}},"98":{"start":{"line":139,"column":12},"end":{"line":139,"column":19}},"99":{"start":{"line":141,"column":8},"end":{"line":154,"column":11}},"100":{"start":{"line":142,"column":32},"end":{"line":142,"column":54}},"101":{"start":{"line":143,"column":26},"end":{"line":143,"column":122}},"102":{"start":{"line":144,"column":24},"end":{"line":148,"column":14}},"103":{"start":{"line":149,"column":12},"end":{"line":149,"column":63}},"104":{"start":{"line":150,"column":12},"end":{"line":150,"column":92}},"105":{"start":{"line":151,"column":12},"end":{"line":151,"column":113}},"106":{"start":{"line":152,"column":12},"end":{"line":152,"column":58}},"107":{"start":{"line":153,"column":12},"end":{"line":153,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":39},"end":{"line":11,"column":40}},"loc":{"start":{"line":11,"column":45},"end":{"line":156,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":23},"end":{"line":18,"column":24}},"loc":{"start":{"line":18,"column":29},"end":{"line":22,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":23,"column":42},"end":{"line":23,"column":43}},"loc":{"start":{"line":23,"column":48},"end":{"line":61,"column":5}},"line":23},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":37},"end":{"line":24,"column":38}},"loc":{"start":{"line":24,"column":53},"end":{"line":27,"column":9}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":28,"column":51},"end":{"line":28,"column":52}},"loc":{"start":{"line":28,"column":67},"end":{"line":39,"column":9}},"line":28},"6":{"name":"(anonymous_6)","decl":{"start":{"line":40,"column":46},"end":{"line":40,"column":47}},"loc":{"start":{"line":40,"column":62},"end":{"line":47,"column":9}},"line":40},"7":{"name":"(anonymous_7)","decl":{"start":{"line":48,"column":51},"end":{"line":48,"column":52}},"loc":{"start":{"line":48,"column":67},"end":{"line":60,"column":9}},"line":48},"8":{"name":"(anonymous_8)","decl":{"start":{"line":62,"column":33},"end":{"line":62,"column":34}},"loc":{"start":{"line":62,"column":39},"end":{"line":113,"column":5}},"line":62},"9":{"name":"(anonymous_9)","decl":{"start":{"line":63,"column":33},"end":{"line":63,"column":34}},"loc":{"start":{"line":63,"column":49},"end":{"line":66,"column":9}},"line":63},"10":{"name":"(anonymous_10)","decl":{"start":{"line":67,"column":46},"end":{"line":67,"column":47}},"loc":{"start":{"line":67,"column":62},"end":{"line":74,"column":9}},"line":67},"11":{"name":"(anonymous_11)","decl":{"start":{"line":75,"column":51},"end":{"line":75,"column":52}},"loc":{"start":{"line":75,"column":67},"end":{"line":86,"column":9}},"line":75},"12":{"name":"(anonymous_12)","decl":{"start":{"line":87,"column":62},"end":{"line":87,"column":63}},"loc":{"start":{"line":87,"column":78},"end":{"line":99,"column":9}},"line":87},"13":{"name":"(anonymous_13)","decl":{"start":{"line":100,"column":61},"end":{"line":100,"column":62}},"loc":{"start":{"line":100,"column":77},"end":{"line":112,"column":9}},"line":100},"14":{"name":"(anonymous_14)","decl":{"start":{"line":114,"column":41},"end":{"line":114,"column":42}},"loc":{"start":{"line":114,"column":47},"end":{"line":155,"column":5}},"line":114},"15":{"name":"(anonymous_15)","decl":{"start":{"line":116,"column":37},"end":{"line":116,"column":38}},"loc":{"start":{"line":116,"column":53},"end":{"line":119,"column":9}},"line":116},"16":{"name":"(anonymous_16)","decl":{"start":{"line":120,"column":49},"end":{"line":120,"column":50}},"loc":{"start":{"line":120,"column":65},"end":{"line":127,"column":9}},"line":120},"17":{"name":"(anonymous_17)","decl":{"start":{"line":128,"column":53},"end":{"line":128,"column":54}},"loc":{"start":{"line":128,"column":69},"end":{"line":140,"column":9}},"line":128},"18":{"name":"(anonymous_18)","decl":{"start":{"line":141,"column":69},"end":{"line":141,"column":70}},"loc":{"start":{"line":141,"column":85},"end":{"line":154,"column":9}},"line":141}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":10,"17":10,"18":10,"19":1,"20":1,"21":3,"22":3,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":4,"48":4,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":3,"83":3,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1},"f":{"0":2,"1":1,"2":10,"3":1,"4":3,"5":1,"6":1,"7":1,"8":1,"9":4,"10":1,"11":1,"12":1,"13":1,"14":1,"15":3,"16":1,"17":1,"18":1},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/middlewares/checkAuth.spec.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/middlewares/checkAuth.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import jwt from 'jsonwebtoken';\nimport { Response } from 'express';\nimport { expect } from 'chai';\nimport { mockRequest, mockResponse } from 'mock-req-res';\nimport sinon, { SinonSpy, SinonStub } from 'sinon';\nimport { verifyToken, verifyAdmin, verifyPasswordToken } from './../../middlewares/checkAuth';\n\ndescribe('Test checkAuth middlewares', () => {\n    const res: Response = mockResponse();\n        const statusStub: SinonStub = sinon.stub().returns(res);\n        const nextSpy: SinonSpy = sinon.spy();\n        const sendSpy: SinonSpy = sinon.spy();\n        res.status = statusStub;\n        res.send = sendSpy;\n\n        const resetStubs = () => {\n            statusStub.resetHistory();\n            nextSpy.resetHistory();\n            sendSpy.resetHistory();\n        };\n\n    describe('Test verifyToken function', () => {\n\n        afterEach('reset the spies', function(done) {\n            resetStubs();\n            done();\n        });\n\n        it('should return 403 when invalid token', function(done) {\n            const req = mockRequest({\n                headers: {\n                    authorization: 'Bearer abcd'\n                }\n            });\n            verifyToken(req, res, nextSpy);\n            expect(statusStub.calledWith(sinon.match(403))).to.be.eq(true);\n            expect(sendSpy.calledWith(sinon.match({message: 'Unauthorized'}))).to.be.eq(true);\n            expect(nextSpy.called).to.be.eq(false);\n            done();\n        });\n\n        it('should return 403 when no token', function(done) {\n            const req = mockRequest();\n            verifyToken(req, res, nextSpy);\n            expect(statusStub.calledWith(sinon.match(403))).to.be.eq(true);\n            expect(sendSpy.calledWith(sinon.match({message: 'Unauthorized'}))).to.be.eq(true);\n            expect(nextSpy.called).to.be.eq(false);\n            done();\n        });\n\n        it('should call next when token is valid', function(done) {\n            const token: string = jwt.sign({ userName: 'test', userId: 1, admin: false }, process.env.JWT_SECRET, { expiresIn: '2h' });\n            const req = mockRequest({\n                headers: {\n                    authorization: 'Bearer ' + token\n                }\n            });\n            verifyToken(req, res, nextSpy);\n            expect(statusStub.called).to.be.eq(false);\n            expect(sendSpy.called).to.be.eq(false);\n            expect(nextSpy.called).to.be.eq(true);\n            done();\n        });\n    });\n    describe('Test verifyAdmin', () => {\n        afterEach('reset spies', function(done) {\n            resetStubs();\n            done();\n        });\n        it('should return 403 when no token', function(done) {\n            const req = mockRequest();\n            verifyAdmin(req, res, nextSpy);\n            expect(statusStub.calledWith(sinon.match(403))).to.be.eq(true);\n            expect(sendSpy.calledWith(sinon.match({message: 'This User is not an Admin'}))).to.be.eq(true);\n            expect(nextSpy.called).to.be.eq(false);\n            done();\n        });\n        it('should return 403 when invalid token', function(done) {\n            const req = mockRequest({\n                headers: {\n                    authorization: 'Bearer abd'\n                }\n            });\n            verifyAdmin(req, res, nextSpy);\n            expect(statusStub.calledWith(sinon.match(403))).to.be.eq(true);\n            expect(sendSpy.calledWith(sinon.match({message: 'This User is not an Admin'}))).to.be.eq(true);\n            expect(nextSpy.called).to.be.eq(false);\n            done();\n        });\n        it('should return 403 when admin in token was false', function(done) {\n            const token = jwt.sign({ userName: 'test', userId: 1, admin: false }, process.env.JWT_SECRET, { expiresIn: '2h' });\n            const req = mockRequest({\n                headers: {\n                    authorization: 'Bearer ' + token\n                }\n            });\n            verifyAdmin(req, res, nextSpy);\n            expect(statusStub.calledWith(sinon.match(403))).to.be.eq(true);\n            expect(sendSpy.calledWith(sinon.match({message: 'This User is not an Admin'}))).to.be.eq(true);\n            expect(nextSpy.called).to.be.eq(false);\n            done();\n        });\n        it('should call next, when admin in token was true', function(done) {\n            const token = jwt.sign({ userName: 'testy', userId: 2, admin: true }, process.env.JWT_SECRET, { expiresIn: '2h' });\n            const req = mockRequest({\n                headers: {\n                    authorization: 'Bearer ' + token\n                }\n            });\n            verifyAdmin(req, res, nextSpy);\n            expect(statusStub.called).to.be.eq(false);\n            expect(sendSpy.called).to.be.eq(false);\n            expect(nextSpy.calledOnce).to.be.eq(true);\n            done();\n        });\n    });\n    describe('Test verifyPasswordToken', () => {\n\n        const secret = process.env.JWT_PW_SECRET;\n\n        afterEach('reset the spies', function(done) {\n            resetStubs();\n            done();\n        });\n\n        it('should block when no authorization', function(done) {\n            const req = mockRequest();\n            verifyPasswordToken(req, res, nextSpy);\n            expect(statusStub.calledWith(sinon.match(403))).to.be.eq(true);\n            expect(sendSpy.calledWith(sinon.match({message: 'Unauthorized'}))).to.be.eq(true);\n            expect(nextSpy.called).to.be.eq(false);\n            done();\n        });\n\n        it('should pass with valid token in header', function(done) {\n            const token = jwt.sign({ userName: 'testy', userId: 1 }, secret, { expiresIn: '15m' });\n            const req = mockRequest({\n                headers: {\n                    authorization: 'Bearer ' + token\n                }\n            });\n            verifyPasswordToken(req, res, nextSpy);\n            expect(statusStub.called).to.be.eq(false);\n            expect(sendSpy.called).to.be.eq(false);\n            expect(nextSpy.calledOnce).to.be.eq(true);\n            done();\n        });\n\n        it('should not pass with token generated with wrong secret', function(done) {\n            const wrongSecret = process.env.JWT_SECRET;\n            const token = jwt.sign({ userName: 'testy', userId: 1 }, wrongSecret, { expiresIn: '15m' });\n            const req = mockRequest({\n                headers: {\n                    authorization: 'Bearer ' + token\n                }\n            });\n            verifyPasswordToken(req, res, nextSpy);\n            expect(statusStub.calledWith(sinon.match(403))).to.be.eq(true);\n            expect(sendSpy.calledWith(sinon.match({message: 'Unauthorized'}))).to.be.eq(true);\n            expect(nextSpy.called).to.be.eq(false);\n            done();\n        });\n    });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"64b34bfe58188f4e9239523229d0dd69117b9569","contentHash":"f9036b0c0481eae2f92c55796782dbbc25720de953c7baa3d88072c12cce87eb"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/email.service.spec.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/email.service.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":24},"end":{"line":6,"column":63}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":30}},"5":{"start":{"line":8,"column":21},"end":{"line":8,"column":59}},"6":{"start":{"line":9,"column":0},"end":{"line":35,"column":3}},"7":{"start":{"line":10,"column":31},"end":{"line":10,"column":65}},"8":{"start":{"line":11,"column":4},"end":{"line":34,"column":7}},"9":{"start":{"line":12,"column":8},"end":{"line":23,"column":11}},"10":{"start":{"line":13,"column":12},"end":{"line":22,"column":15}},"11":{"start":{"line":14,"column":16},"end":{"line":14,"column":65}},"12":{"start":{"line":15,"column":16},"end":{"line":15,"column":84}},"13":{"start":{"line":16,"column":16},"end":{"line":16,"column":74}},"14":{"start":{"line":17,"column":16},"end":{"line":17,"column":23}},"15":{"start":{"line":19,"column":16},"end":{"line":19,"column":33}},"16":{"start":{"line":20,"column":16},"end":{"line":20,"column":52}},"17":{"start":{"line":21,"column":16},"end":{"line":21,"column":23}},"18":{"start":{"line":24,"column":8},"end":{"line":33,"column":11}},"19":{"start":{"line":25,"column":12},"end":{"line":32,"column":15}},"20":{"start":{"line":26,"column":16},"end":{"line":26,"column":34}},"21":{"start":{"line":27,"column":16},"end":{"line":27,"column":52}},"22":{"start":{"line":28,"column":16},"end":{"line":28,"column":23}},"23":{"start":{"line":30,"column":16},"end":{"line":30,"column":54}},"24":{"start":{"line":31,"column":16},"end":{"line":31,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":30},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":36},"end":{"line":35,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":49},"end":{"line":11,"column":50}},"loc":{"start":{"line":11,"column":55},"end":{"line":34,"column":5}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":12,"column":48},"end":{"line":12,"column":49}},"loc":{"start":{"line":12,"column":64},"end":{"line":23,"column":9}},"line":12},"4":{"name":"(anonymous_4)","decl":{"start":{"line":13,"column":108},"end":{"line":13,"column":109}},"loc":{"start":{"line":13,"column":116},"end":{"line":18,"column":13}},"line":13},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":21},"end":{"line":18,"column":22}},"loc":{"start":{"line":18,"column":28},"end":{"line":22,"column":13}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":24,"column":63},"end":{"line":24,"column":64}},"loc":{"start":{"line":24,"column":79},"end":{"line":33,"column":9}},"line":24},"7":{"name":"(anonymous_7)","decl":{"start":{"line":25,"column":98},"end":{"line":25,"column":99}},"loc":{"start":{"line":25,"column":106},"end":{"line":29,"column":13}},"line":25},"8":{"name":"(anonymous_8)","decl":{"start":{"line":29,"column":21},"end":{"line":29,"column":22}},"loc":{"start":{"line":29,"column":28},"end":{"line":32,"column":13}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":1,"19":1,"20":0,"21":0,"22":0,"23":1,"24":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/email.service.spec.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/email.service.spec.ts"],"names":[],"mappings":";;;;;AAAA,gEAA4D;AAC5D,+BAA8B;AAC9B,4DAAoC;AAEpC,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IAE/B,MAAM,kBAAkB,GAAiB,IAAI,4BAAY,EAAE,CAAC;IAE5D,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAC9C,EAAE,CAAC,mCAAmC,EAAE,UAAS,IAAI;YACjD,kBAAkB,CAAC,2BAA2B,CAAC,UAAU,EAAE,sBAAsB,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACnG,aAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC1C,aAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,sBAAsB,CAAC,CAAC;gBAC7D,OAAO,CAAC,GAAG,CAAC,oBAAU,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;gBAChD,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,aAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC7B,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,kDAAkD,EAAE,UAAS,IAAI;YAChE,kBAAkB,CAAC,2BAA2B,CAAC,UAAU,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACzF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;gBAClB,aAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC7B,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBACX,aAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC/B,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { EmailService } from '../../services/email.service';\nimport { expect } from 'chai';\nimport nodemailer from 'nodemailer';\n\ndescribe('EmailService Test', () => {\n\n    const testedEmailService: EmailService = new EmailService();\n\n    describe('Test sendPasswordRestorationMail', () => {\n        it('should successfully send an email', function(done) {\n            testedEmailService.sendPasswordRestorationMail('Testuser', 'testuser@example.com', 'abcd').then(info => {\n                expect(info.messageId).not.to.be.eq(null);\n                expect(info.envelope.to[0]).to.be.eq('testuser@example.com');\n                console.log(nodemailer.getTestMessageUrl(info));\n                done();\n            }).catch(err => {\n                console.log(err);\n                expect(true).to.be.eq(false); // test should not reach here!\n                done();\n            });\n        });\n        it('should return error, when invalid receiver email', function(done) {\n            testedEmailService.sendPasswordRestorationMail('Testuser', 'tesple.com', 'abcd').then(info => {\n                console.log(info);\n                expect(true).to.be.eq(false); // test should not reach here!\n                done();\n            }).catch(err => {\n                expect(err).not.to.be.eq(null);\n                done();\n            });\n        });\n    });\n});"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9e250ae713bdb18a23bb41e4308eebb7d29faf8e","contentHash":"5fe6562c441fd1fdd20993821f1d641dc1af087fa68c029f55e6d7c3310b24fb"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/product.service.spec.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/product.service.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":26},"end":{"line":6,"column":69}},"4":{"start":{"line":7,"column":24},"end":{"line":7,"column":63}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":30}},"6":{"start":{"line":9,"column":21},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":29},"end":{"line":10,"column":71}},"8":{"start":{"line":11,"column":15},"end":{"line":11,"column":47}},"9":{"start":{"line":12,"column":0},"end":{"line":697,"column":3}},"10":{"start":{"line":13,"column":33},"end":{"line":13,"column":71}},"11":{"start":{"line":14,"column":18},"end":{"line":32,"column":5}},"12":{"start":{"line":33,"column":21},"end":{"line":49,"column":5}},"13":{"start":{"line":50,"column":21},"end":{"line":66,"column":5}},"14":{"start":{"line":67,"column":21},"end":{"line":83,"column":5}},"15":{"start":{"line":84,"column":21},"end":{"line":100,"column":5}},"16":{"start":{"line":101,"column":21},"end":{"line":117,"column":5}},"17":{"start":{"line":118,"column":21},"end":{"line":134,"column":5}},"18":{"start":{"line":135,"column":21},"end":{"line":151,"column":5}},"19":{"start":{"line":152,"column":4},"end":{"line":156,"column":7}},"20":{"start":{"line":153,"column":8},"end":{"line":155,"column":11}},"21":{"start":{"line":154,"column":12},"end":{"line":154,"column":19}},"22":{"start":{"line":157,"column":4},"end":{"line":202,"column":7}},"23":{"start":{"line":158,"column":8},"end":{"line":178,"column":11}},"24":{"start":{"line":159,"column":12},"end":{"line":177,"column":15}},"25":{"start":{"line":160,"column":16},"end":{"line":160,"column":61}},"26":{"start":{"line":161,"column":16},"end":{"line":161,"column":71}},"27":{"start":{"line":162,"column":16},"end":{"line":162,"column":100}},"28":{"start":{"line":163,"column":16},"end":{"line":163,"column":65}},"29":{"start":{"line":164,"column":16},"end":{"line":164,"column":72}},"30":{"start":{"line":165,"column":16},"end":{"line":165,"column":66}},"31":{"start":{"line":166,"column":16},"end":{"line":166,"column":65}},"32":{"start":{"line":167,"column":16},"end":{"line":167,"column":66}},"33":{"start":{"line":168,"column":16},"end":{"line":168,"column":58}},"34":{"start":{"line":169,"column":16},"end":{"line":176,"column":19}},"35":{"start":{"line":174,"column":20},"end":{"line":174,"column":67}},"36":{"start":{"line":175,"column":20},"end":{"line":175,"column":27}},"37":{"start":{"line":179,"column":8},"end":{"line":201,"column":11}},"38":{"start":{"line":180,"column":34},"end":{"line":196,"column":13}},"39":{"start":{"line":197,"column":12},"end":{"line":200,"column":15}},"40":{"start":{"line":198,"column":16},"end":{"line":198,"column":56}},"41":{"start":{"line":199,"column":16},"end":{"line":199,"column":23}},"42":{"start":{"line":203,"column":4},"end":{"line":231,"column":7}},"43":{"start":{"line":204,"column":8},"end":{"line":224,"column":11}},"44":{"start":{"line":205,"column":12},"end":{"line":223,"column":15}},"45":{"start":{"line":206,"column":16},"end":{"line":206,"column":61}},"46":{"start":{"line":207,"column":16},"end":{"line":207,"column":71}},"47":{"start":{"line":208,"column":16},"end":{"line":208,"column":105}},"48":{"start":{"line":209,"column":16},"end":{"line":209,"column":65}},"49":{"start":{"line":210,"column":16},"end":{"line":210,"column":72}},"50":{"start":{"line":211,"column":16},"end":{"line":211,"column":66}},"51":{"start":{"line":212,"column":16},"end":{"line":212,"column":65}},"52":{"start":{"line":213,"column":16},"end":{"line":213,"column":66}},"53":{"start":{"line":214,"column":16},"end":{"line":214,"column":58}},"54":{"start":{"line":215,"column":16},"end":{"line":222,"column":19}},"55":{"start":{"line":220,"column":20},"end":{"line":220,"column":67}},"56":{"start":{"line":221,"column":20},"end":{"line":221,"column":27}},"57":{"start":{"line":225,"column":8},"end":{"line":230,"column":11}},"58":{"start":{"line":226,"column":12},"end":{"line":229,"column":15}},"59":{"start":{"line":227,"column":16},"end":{"line":227,"column":87}},"60":{"start":{"line":228,"column":16},"end":{"line":228,"column":23}},"61":{"start":{"line":232,"column":4},"end":{"line":260,"column":7}},"62":{"start":{"line":233,"column":8},"end":{"line":253,"column":11}},"63":{"start":{"line":234,"column":12},"end":{"line":252,"column":15}},"64":{"start":{"line":235,"column":16},"end":{"line":235,"column":61}},"65":{"start":{"line":236,"column":16},"end":{"line":236,"column":71}},"66":{"start":{"line":237,"column":16},"end":{"line":237,"column":105}},"67":{"start":{"line":238,"column":16},"end":{"line":238,"column":65}},"68":{"start":{"line":239,"column":16},"end":{"line":239,"column":72}},"69":{"start":{"line":240,"column":16},"end":{"line":240,"column":66}},"70":{"start":{"line":241,"column":16},"end":{"line":241,"column":65}},"71":{"start":{"line":242,"column":16},"end":{"line":242,"column":66}},"72":{"start":{"line":243,"column":16},"end":{"line":243,"column":58}},"73":{"start":{"line":244,"column":16},"end":{"line":251,"column":19}},"74":{"start":{"line":249,"column":20},"end":{"line":249,"column":67}},"75":{"start":{"line":250,"column":20},"end":{"line":250,"column":27}},"76":{"start":{"line":254,"column":8},"end":{"line":259,"column":11}},"77":{"start":{"line":255,"column":12},"end":{"line":258,"column":15}},"78":{"start":{"line":256,"column":16},"end":{"line":256,"column":86}},"79":{"start":{"line":257,"column":16},"end":{"line":257,"column":23}},"80":{"start":{"line":261,"column":4},"end":{"line":283,"column":7}},"81":{"start":{"line":262,"column":8},"end":{"line":282,"column":11}},"82":{"start":{"line":263,"column":12},"end":{"line":281,"column":15}},"83":{"start":{"line":264,"column":16},"end":{"line":264,"column":64}},"84":{"start":{"line":265,"column":16},"end":{"line":265,"column":74}},"85":{"start":{"line":266,"column":16},"end":{"line":266,"column":108}},"86":{"start":{"line":267,"column":16},"end":{"line":267,"column":68}},"87":{"start":{"line":268,"column":16},"end":{"line":268,"column":75}},"88":{"start":{"line":269,"column":16},"end":{"line":269,"column":69}},"89":{"start":{"line":270,"column":16},"end":{"line":270,"column":68}},"90":{"start":{"line":271,"column":16},"end":{"line":271,"column":69}},"91":{"start":{"line":272,"column":16},"end":{"line":272,"column":61}},"92":{"start":{"line":273,"column":16},"end":{"line":280,"column":19}},"93":{"start":{"line":278,"column":20},"end":{"line":278,"column":67}},"94":{"start":{"line":279,"column":20},"end":{"line":279,"column":27}},"95":{"start":{"line":284,"column":4},"end":{"line":319,"column":7}},"96":{"start":{"line":285,"column":8},"end":{"line":289,"column":11}},"97":{"start":{"line":286,"column":12},"end":{"line":288,"column":15}},"98":{"start":{"line":287,"column":16},"end":{"line":287,"column":23}},"99":{"start":{"line":290,"column":8},"end":{"line":303,"column":11}},"100":{"start":{"line":291,"column":12},"end":{"line":302,"column":15}},"101":{"start":{"line":292,"column":16},"end":{"line":292,"column":64}},"102":{"start":{"line":293,"column":16},"end":{"line":293,"column":76}},"103":{"start":{"line":294,"column":16},"end":{"line":294,"column":109}},"104":{"start":{"line":295,"column":16},"end":{"line":295,"column":68}},"105":{"start":{"line":296,"column":16},"end":{"line":296,"column":75}},"106":{"start":{"line":297,"column":16},"end":{"line":297,"column":69}},"107":{"start":{"line":298,"column":16},"end":{"line":298,"column":68}},"108":{"start":{"line":299,"column":16},"end":{"line":299,"column":69}},"109":{"start":{"line":300,"column":16},"end":{"line":300,"column":61}},"110":{"start":{"line":301,"column":16},"end":{"line":301,"column":23}},"111":{"start":{"line":304,"column":8},"end":{"line":318,"column":11}},"112":{"start":{"line":305,"column":12},"end":{"line":317,"column":15}},"113":{"start":{"line":306,"column":16},"end":{"line":306,"column":64}},"114":{"start":{"line":307,"column":16},"end":{"line":307,"column":76}},"115":{"start":{"line":308,"column":16},"end":{"line":308,"column":109}},"116":{"start":{"line":309,"column":16},"end":{"line":309,"column":68}},"117":{"start":{"line":310,"column":16},"end":{"line":310,"column":75}},"118":{"start":{"line":311,"column":16},"end":{"line":311,"column":69}},"119":{"start":{"line":312,"column":16},"end":{"line":312,"column":68}},"120":{"start":{"line":313,"column":16},"end":{"line":313,"column":69}},"121":{"start":{"line":314,"column":16},"end":{"line":314,"column":61}},"122":{"start":{"line":315,"column":16},"end":{"line":315,"column":62}},"123":{"start":{"line":316,"column":16},"end":{"line":316,"column":23}},"124":{"start":{"line":320,"column":4},"end":{"line":342,"column":7}},"125":{"start":{"line":321,"column":8},"end":{"line":341,"column":11}},"126":{"start":{"line":322,"column":12},"end":{"line":340,"column":15}},"127":{"start":{"line":323,"column":16},"end":{"line":323,"column":64}},"128":{"start":{"line":324,"column":16},"end":{"line":324,"column":74}},"129":{"start":{"line":325,"column":16},"end":{"line":325,"column":108}},"130":{"start":{"line":326,"column":16},"end":{"line":326,"column":68}},"131":{"start":{"line":327,"column":16},"end":{"line":327,"column":75}},"132":{"start":{"line":328,"column":16},"end":{"line":328,"column":69}},"133":{"start":{"line":329,"column":16},"end":{"line":329,"column":68}},"134":{"start":{"line":330,"column":16},"end":{"line":330,"column":69}},"135":{"start":{"line":331,"column":16},"end":{"line":331,"column":61}},"136":{"start":{"line":332,"column":16},"end":{"line":339,"column":19}},"137":{"start":{"line":337,"column":20},"end":{"line":337,"column":67}},"138":{"start":{"line":338,"column":20},"end":{"line":338,"column":27}},"139":{"start":{"line":343,"column":4},"end":{"line":365,"column":7}},"140":{"start":{"line":344,"column":8},"end":{"line":364,"column":11}},"141":{"start":{"line":345,"column":12},"end":{"line":363,"column":15}},"142":{"start":{"line":346,"column":16},"end":{"line":346,"column":64}},"143":{"start":{"line":347,"column":16},"end":{"line":347,"column":74}},"144":{"start":{"line":348,"column":16},"end":{"line":348,"column":108}},"145":{"start":{"line":349,"column":16},"end":{"line":349,"column":68}},"146":{"start":{"line":350,"column":16},"end":{"line":350,"column":75}},"147":{"start":{"line":351,"column":16},"end":{"line":351,"column":69}},"148":{"start":{"line":352,"column":16},"end":{"line":352,"column":68}},"149":{"start":{"line":353,"column":16},"end":{"line":353,"column":69}},"150":{"start":{"line":354,"column":16},"end":{"line":354,"column":61}},"151":{"start":{"line":355,"column":16},"end":{"line":362,"column":19}},"152":{"start":{"line":360,"column":20},"end":{"line":360,"column":67}},"153":{"start":{"line":361,"column":20},"end":{"line":361,"column":27}},"154":{"start":{"line":366,"column":4},"end":{"line":388,"column":7}},"155":{"start":{"line":367,"column":8},"end":{"line":387,"column":11}},"156":{"start":{"line":368,"column":12},"end":{"line":386,"column":15}},"157":{"start":{"line":369,"column":16},"end":{"line":369,"column":51}},"158":{"start":{"line":370,"column":16},"end":{"line":385,"column":19}},"159":{"start":{"line":375,"column":20},"end":{"line":375,"column":70}},"160":{"start":{"line":376,"column":20},"end":{"line":376,"column":80}},"161":{"start":{"line":377,"column":20},"end":{"line":377,"column":114}},"162":{"start":{"line":378,"column":20},"end":{"line":378,"column":74}},"163":{"start":{"line":379,"column":20},"end":{"line":379,"column":81}},"164":{"start":{"line":380,"column":20},"end":{"line":380,"column":74}},"165":{"start":{"line":381,"column":20},"end":{"line":381,"column":74}},"166":{"start":{"line":382,"column":20},"end":{"line":382,"column":75}},"167":{"start":{"line":383,"column":20},"end":{"line":383,"column":67}},"168":{"start":{"line":384,"column":20},"end":{"line":384,"column":27}},"169":{"start":{"line":389,"column":4},"end":{"line":411,"column":7}},"170":{"start":{"line":390,"column":8},"end":{"line":410,"column":11}},"171":{"start":{"line":391,"column":12},"end":{"line":409,"column":15}},"172":{"start":{"line":392,"column":16},"end":{"line":392,"column":64}},"173":{"start":{"line":393,"column":16},"end":{"line":393,"column":74}},"174":{"start":{"line":394,"column":16},"end":{"line":394,"column":108}},"175":{"start":{"line":395,"column":16},"end":{"line":395,"column":68}},"176":{"start":{"line":396,"column":16},"end":{"line":396,"column":75}},"177":{"start":{"line":397,"column":16},"end":{"line":397,"column":68}},"178":{"start":{"line":398,"column":16},"end":{"line":398,"column":68}},"179":{"start":{"line":399,"column":16},"end":{"line":399,"column":69}},"180":{"start":{"line":400,"column":16},"end":{"line":400,"column":61}},"181":{"start":{"line":401,"column":16},"end":{"line":408,"column":19}},"182":{"start":{"line":406,"column":20},"end":{"line":406,"column":67}},"183":{"start":{"line":407,"column":20},"end":{"line":407,"column":27}},"184":{"start":{"line":412,"column":4},"end":{"line":439,"column":7}},"185":{"start":{"line":413,"column":8},"end":{"line":417,"column":11}},"186":{"start":{"line":414,"column":12},"end":{"line":416,"column":15}},"187":{"start":{"line":415,"column":16},"end":{"line":415,"column":23}},"188":{"start":{"line":418,"column":8},"end":{"line":438,"column":11}},"189":{"start":{"line":419,"column":12},"end":{"line":437,"column":15}},"190":{"start":{"line":420,"column":16},"end":{"line":420,"column":64}},"191":{"start":{"line":421,"column":16},"end":{"line":421,"column":76}},"192":{"start":{"line":422,"column":16},"end":{"line":422,"column":103}},"193":{"start":{"line":423,"column":16},"end":{"line":423,"column":68}},"194":{"start":{"line":424,"column":16},"end":{"line":424,"column":75}},"195":{"start":{"line":425,"column":16},"end":{"line":425,"column":69}},"196":{"start":{"line":426,"column":16},"end":{"line":426,"column":68}},"197":{"start":{"line":427,"column":16},"end":{"line":427,"column":69}},"198":{"start":{"line":428,"column":16},"end":{"line":428,"column":61}},"199":{"start":{"line":429,"column":16},"end":{"line":436,"column":19}},"200":{"start":{"line":434,"column":20},"end":{"line":434,"column":67}},"201":{"start":{"line":435,"column":20},"end":{"line":435,"column":27}},"202":{"start":{"line":440,"column":4},"end":{"line":615,"column":7}},"203":{"start":{"line":441,"column":8},"end":{"line":447,"column":11}},"204":{"start":{"line":442,"column":12},"end":{"line":442,"column":53}},"205":{"start":{"line":443,"column":12},"end":{"line":443,"column":53}},"206":{"start":{"line":444,"column":12},"end":{"line":446,"column":15}},"207":{"start":{"line":445,"column":16},"end":{"line":445,"column":23}},"208":{"start":{"line":448,"column":8},"end":{"line":459,"column":11}},"209":{"start":{"line":449,"column":28},"end":{"line":451,"column":13}},"210":{"start":{"line":452,"column":12},"end":{"line":458,"column":15}},"211":{"start":{"line":453,"column":16},"end":{"line":453,"column":64}},"212":{"start":{"line":454,"column":16},"end":{"line":454,"column":64}},"213":{"start":{"line":455,"column":16},"end":{"line":455,"column":64}},"214":{"start":{"line":456,"column":16},"end":{"line":456,"column":58}},"215":{"start":{"line":457,"column":16},"end":{"line":457,"column":23}},"216":{"start":{"line":460,"column":8},"end":{"line":471,"column":11}},"217":{"start":{"line":461,"column":28},"end":{"line":464,"column":13}},"218":{"start":{"line":465,"column":12},"end":{"line":470,"column":15}},"219":{"start":{"line":466,"column":16},"end":{"line":466,"column":64}},"220":{"start":{"line":467,"column":16},"end":{"line":467,"column":64}},"221":{"start":{"line":468,"column":16},"end":{"line":468,"column":58}},"222":{"start":{"line":469,"column":16},"end":{"line":469,"column":23}},"223":{"start":{"line":472,"column":8},"end":{"line":482,"column":11}},"224":{"start":{"line":473,"column":28},"end":{"line":475,"column":13}},"225":{"start":{"line":476,"column":12},"end":{"line":481,"column":15}},"226":{"start":{"line":477,"column":16},"end":{"line":477,"column":64}},"227":{"start":{"line":478,"column":16},"end":{"line":478,"column":64}},"228":{"start":{"line":479,"column":16},"end":{"line":479,"column":58}},"229":{"start":{"line":480,"column":16},"end":{"line":480,"column":23}},"230":{"start":{"line":483,"column":8},"end":{"line":493,"column":11}},"231":{"start":{"line":484,"column":28},"end":{"line":486,"column":13}},"232":{"start":{"line":487,"column":12},"end":{"line":492,"column":15}},"233":{"start":{"line":488,"column":16},"end":{"line":488,"column":64}},"234":{"start":{"line":489,"column":16},"end":{"line":489,"column":64}},"235":{"start":{"line":490,"column":16},"end":{"line":490,"column":58}},"236":{"start":{"line":491,"column":16},"end":{"line":491,"column":23}},"237":{"start":{"line":494,"column":8},"end":{"line":504,"column":11}},"238":{"start":{"line":495,"column":28},"end":{"line":497,"column":13}},"239":{"start":{"line":498,"column":12},"end":{"line":503,"column":15}},"240":{"start":{"line":499,"column":16},"end":{"line":499,"column":64}},"241":{"start":{"line":500,"column":16},"end":{"line":500,"column":64}},"242":{"start":{"line":501,"column":16},"end":{"line":501,"column":58}},"243":{"start":{"line":502,"column":16},"end":{"line":502,"column":23}},"244":{"start":{"line":505,"column":8},"end":{"line":516,"column":11}},"245":{"start":{"line":506,"column":28},"end":{"line":508,"column":13}},"246":{"start":{"line":509,"column":12},"end":{"line":515,"column":15}},"247":{"start":{"line":510,"column":16},"end":{"line":510,"column":64}},"248":{"start":{"line":511,"column":16},"end":{"line":511,"column":64}},"249":{"start":{"line":512,"column":16},"end":{"line":512,"column":64}},"250":{"start":{"line":513,"column":16},"end":{"line":513,"column":58}},"251":{"start":{"line":514,"column":16},"end":{"line":514,"column":23}},"252":{"start":{"line":517,"column":8},"end":{"line":526,"column":11}},"253":{"start":{"line":518,"column":28},"end":{"line":520,"column":13}},"254":{"start":{"line":521,"column":12},"end":{"line":525,"column":15}},"255":{"start":{"line":522,"column":16},"end":{"line":522,"column":64}},"256":{"start":{"line":523,"column":16},"end":{"line":523,"column":58}},"257":{"start":{"line":524,"column":16},"end":{"line":524,"column":23}},"258":{"start":{"line":527,"column":8},"end":{"line":537,"column":11}},"259":{"start":{"line":528,"column":28},"end":{"line":530,"column":13}},"260":{"start":{"line":531,"column":12},"end":{"line":536,"column":15}},"261":{"start":{"line":532,"column":16},"end":{"line":532,"column":64}},"262":{"start":{"line":533,"column":16},"end":{"line":533,"column":64}},"263":{"start":{"line":534,"column":16},"end":{"line":534,"column":58}},"264":{"start":{"line":535,"column":16},"end":{"line":535,"column":23}},"265":{"start":{"line":538,"column":8},"end":{"line":548,"column":11}},"266":{"start":{"line":539,"column":28},"end":{"line":541,"column":13}},"267":{"start":{"line":542,"column":12},"end":{"line":547,"column":15}},"268":{"start":{"line":543,"column":16},"end":{"line":543,"column":64}},"269":{"start":{"line":544,"column":16},"end":{"line":544,"column":64}},"270":{"start":{"line":545,"column":16},"end":{"line":545,"column":58}},"271":{"start":{"line":546,"column":16},"end":{"line":546,"column":23}},"272":{"start":{"line":549,"column":8},"end":{"line":558,"column":11}},"273":{"start":{"line":550,"column":28},"end":{"line":552,"column":13}},"274":{"start":{"line":553,"column":12},"end":{"line":557,"column":15}},"275":{"start":{"line":554,"column":16},"end":{"line":554,"column":64}},"276":{"start":{"line":555,"column":16},"end":{"line":555,"column":58}},"277":{"start":{"line":556,"column":16},"end":{"line":556,"column":23}},"278":{"start":{"line":559,"column":8},"end":{"line":570,"column":11}},"279":{"start":{"line":560,"column":28},"end":{"line":562,"column":13}},"280":{"start":{"line":563,"column":12},"end":{"line":569,"column":15}},"281":{"start":{"line":564,"column":16},"end":{"line":564,"column":64}},"282":{"start":{"line":565,"column":16},"end":{"line":565,"column":64}},"283":{"start":{"line":566,"column":16},"end":{"line":566,"column":64}},"284":{"start":{"line":567,"column":16},"end":{"line":567,"column":58}},"285":{"start":{"line":568,"column":16},"end":{"line":568,"column":23}},"286":{"start":{"line":571,"column":8},"end":{"line":581,"column":11}},"287":{"start":{"line":572,"column":28},"end":{"line":574,"column":13}},"288":{"start":{"line":575,"column":12},"end":{"line":580,"column":15}},"289":{"start":{"line":576,"column":16},"end":{"line":576,"column":64}},"290":{"start":{"line":577,"column":16},"end":{"line":577,"column":64}},"291":{"start":{"line":578,"column":16},"end":{"line":578,"column":58}},"292":{"start":{"line":579,"column":16},"end":{"line":579,"column":23}},"293":{"start":{"line":582,"column":8},"end":{"line":593,"column":11}},"294":{"start":{"line":583,"column":28},"end":{"line":586,"column":13}},"295":{"start":{"line":587,"column":12},"end":{"line":592,"column":15}},"296":{"start":{"line":588,"column":16},"end":{"line":588,"column":64}},"297":{"start":{"line":589,"column":16},"end":{"line":589,"column":64}},"298":{"start":{"line":590,"column":16},"end":{"line":590,"column":58}},"299":{"start":{"line":591,"column":16},"end":{"line":591,"column":23}},"300":{"start":{"line":594,"column":8},"end":{"line":605,"column":11}},"301":{"start":{"line":595,"column":28},"end":{"line":598,"column":13}},"302":{"start":{"line":599,"column":12},"end":{"line":604,"column":15}},"303":{"start":{"line":600,"column":16},"end":{"line":600,"column":64}},"304":{"start":{"line":601,"column":16},"end":{"line":601,"column":64}},"305":{"start":{"line":602,"column":16},"end":{"line":602,"column":58}},"306":{"start":{"line":603,"column":16},"end":{"line":603,"column":23}},"307":{"start":{"line":606,"column":8},"end":{"line":614,"column":11}},"308":{"start":{"line":607,"column":28},"end":{"line":609,"column":13}},"309":{"start":{"line":610,"column":12},"end":{"line":613,"column":15}},"310":{"start":{"line":611,"column":16},"end":{"line":611,"column":58}},"311":{"start":{"line":612,"column":16},"end":{"line":612,"column":23}},"312":{"start":{"line":616,"column":4},"end":{"line":632,"column":7}},"313":{"start":{"line":617,"column":8},"end":{"line":631,"column":11}},"314":{"start":{"line":618,"column":30},"end":{"line":618,"column":84}},"315":{"start":{"line":619,"column":23},"end":{"line":619,"column":36}},"316":{"start":{"line":620,"column":28},"end":{"line":623,"column":13}},"317":{"start":{"line":624,"column":12},"end":{"line":630,"column":15}},"318":{"start":{"line":625,"column":16},"end":{"line":625,"column":59}},"319":{"start":{"line":626,"column":16},"end":{"line":626,"column":57}},"320":{"start":{"line":627,"column":16},"end":{"line":627,"column":64}},"321":{"start":{"line":628,"column":16},"end":{"line":628,"column":59}},"322":{"start":{"line":629,"column":16},"end":{"line":629,"column":23}},"323":{"start":{"line":633,"column":4},"end":{"line":641,"column":7}},"324":{"start":{"line":634,"column":8},"end":{"line":640,"column":11}},"325":{"start":{"line":635,"column":12},"end":{"line":639,"column":15}},"326":{"start":{"line":636,"column":16},"end":{"line":636,"column":58}},"327":{"start":{"line":637,"column":16},"end":{"line":637,"column":54}},"328":{"start":{"line":638,"column":16},"end":{"line":638,"column":23}},"329":{"start":{"line":642,"column":4},"end":{"line":652,"column":7}},"330":{"start":{"line":643,"column":19},"end":{"line":643,"column":32}},"331":{"start":{"line":644,"column":8},"end":{"line":651,"column":11}},"332":{"start":{"line":645,"column":12},"end":{"line":650,"column":15}},"333":{"start":{"line":646,"column":34},"end":{"line":646,"column":90}},"334":{"start":{"line":647,"column":16},"end":{"line":647,"column":82}},"335":{"start":{"line":648,"column":16},"end":{"line":648,"column":41}},"336":{"start":{"line":649,"column":16},"end":{"line":649,"column":23}},"337":{"start":{"line":653,"column":4},"end":{"line":663,"column":7}},"338":{"start":{"line":654,"column":8},"end":{"line":662,"column":11}},"339":{"start":{"line":655,"column":12},"end":{"line":661,"column":15}},"340":{"start":{"line":656,"column":16},"end":{"line":660,"column":19}},"341":{"start":{"line":658,"column":20},"end":{"line":658,"column":61}},"342":{"start":{"line":659,"column":20},"end":{"line":659,"column":27}},"343":{"start":{"line":664,"column":4},"end":{"line":683,"column":7}},"344":{"start":{"line":665,"column":8},"end":{"line":676,"column":11}},"345":{"start":{"line":666,"column":12},"end":{"line":675,"column":15}},"346":{"start":{"line":667,"column":16},"end":{"line":674,"column":19}},"347":{"start":{"line":672,"column":20},"end":{"line":672,"column":63}},"348":{"start":{"line":673,"column":20},"end":{"line":673,"column":27}},"349":{"start":{"line":677,"column":8},"end":{"line":682,"column":11}},"350":{"start":{"line":678,"column":12},"end":{"line":681,"column":15}},"351":{"start":{"line":679,"column":16},"end":{"line":679,"column":85}},"352":{"start":{"line":680,"column":16},"end":{"line":680,"column":23}},"353":{"start":{"line":684,"column":4},"end":{"line":696,"column":7}},"354":{"start":{"line":685,"column":8},"end":{"line":695,"column":11}},"355":{"start":{"line":689,"column":12},"end":{"line":692,"column":15}},"356":{"start":{"line":694,"column":12},"end":{"line":694,"column":19}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":33},"end":{"line":12,"column":34}},"loc":{"start":{"line":12,"column":39},"end":{"line":697,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":152,"column":29},"end":{"line":152,"column":30}},"loc":{"start":{"line":152,"column":45},"end":{"line":156,"column":5}},"line":152},"3":{"name":"(anonymous_3)","decl":{"start":{"line":153,"column":45},"end":{"line":153,"column":46}},"loc":{"start":{"line":153,"column":51},"end":{"line":155,"column":9}},"line":153},"4":{"name":"(anonymous_4)","decl":{"start":{"line":157,"column":39},"end":{"line":157,"column":40}},"loc":{"start":{"line":157,"column":45},"end":{"line":202,"column":5}},"line":157},"5":{"name":"(anonymous_5)","decl":{"start":{"line":158,"column":51},"end":{"line":158,"column":52}},"loc":{"start":{"line":158,"column":67},"end":{"line":178,"column":9}},"line":158},"6":{"name":"(anonymous_6)","decl":{"start":{"line":159,"column":55},"end":{"line":159,"column":56}},"loc":{"start":{"line":159,"column":66},"end":{"line":177,"column":13}},"line":159},"7":{"name":"(anonymous_7)","decl":{"start":{"line":173,"column":24},"end":{"line":173,"column":25}},"loc":{"start":{"line":173,"column":40},"end":{"line":176,"column":17}},"line":173},"8":{"name":"(anonymous_8)","decl":{"start":{"line":179,"column":49},"end":{"line":179,"column":50}},"loc":{"start":{"line":179,"column":65},"end":{"line":201,"column":9}},"line":179},"9":{"name":"(anonymous_9)","decl":{"start":{"line":197,"column":61},"end":{"line":197,"column":62}},"loc":{"start":{"line":197,"column":70},"end":{"line":200,"column":13}},"line":197},"10":{"name":"(anonymous_10)","decl":{"start":{"line":203,"column":39},"end":{"line":203,"column":40}},"loc":{"start":{"line":203,"column":45},"end":{"line":231,"column":5}},"line":203},"11":{"name":"(anonymous_11)","decl":{"start":{"line":204,"column":51},"end":{"line":204,"column":52}},"loc":{"start":{"line":204,"column":67},"end":{"line":224,"column":9}},"line":204},"12":{"name":"(anonymous_12)","decl":{"start":{"line":205,"column":58},"end":{"line":205,"column":59}},"loc":{"start":{"line":205,"column":69},"end":{"line":223,"column":13}},"line":205},"13":{"name":"(anonymous_13)","decl":{"start":{"line":219,"column":24},"end":{"line":219,"column":25}},"loc":{"start":{"line":219,"column":40},"end":{"line":222,"column":17}},"line":219},"14":{"name":"(anonymous_14)","decl":{"start":{"line":225,"column":62},"end":{"line":225,"column":63}},"loc":{"start":{"line":225,"column":78},"end":{"line":230,"column":9}},"line":225},"15":{"name":"(anonymous_15)","decl":{"start":{"line":226,"column":60},"end":{"line":226,"column":61}},"loc":{"start":{"line":226,"column":69},"end":{"line":229,"column":13}},"line":226},"16":{"name":"(anonymous_16)","decl":{"start":{"line":232,"column":34},"end":{"line":232,"column":35}},"loc":{"start":{"line":232,"column":40},"end":{"line":260,"column":5}},"line":232},"17":{"name":"(anonymous_17)","decl":{"start":{"line":233,"column":48},"end":{"line":233,"column":49}},"loc":{"start":{"line":233,"column":64},"end":{"line":253,"column":9}},"line":233},"18":{"name":"(anonymous_18)","decl":{"start":{"line":234,"column":52},"end":{"line":234,"column":53}},"loc":{"start":{"line":234,"column":63},"end":{"line":252,"column":13}},"line":234},"19":{"name":"(anonymous_19)","decl":{"start":{"line":248,"column":24},"end":{"line":248,"column":25}},"loc":{"start":{"line":248,"column":40},"end":{"line":251,"column":17}},"line":248},"20":{"name":"(anonymous_20)","decl":{"start":{"line":254,"column":62},"end":{"line":254,"column":63}},"loc":{"start":{"line":254,"column":78},"end":{"line":259,"column":9}},"line":254},"21":{"name":"(anonymous_21)","decl":{"start":{"line":255,"column":55},"end":{"line":255,"column":56}},"loc":{"start":{"line":255,"column":62},"end":{"line":258,"column":13}},"line":255},"22":{"name":"(anonymous_22)","decl":{"start":{"line":261,"column":45},"end":{"line":261,"column":46}},"loc":{"start":{"line":261,"column":51},"end":{"line":283,"column":5}},"line":261},"23":{"name":"(anonymous_23)","decl":{"start":{"line":262,"column":65},"end":{"line":262,"column":66}},"loc":{"start":{"line":262,"column":81},"end":{"line":282,"column":9}},"line":262},"24":{"name":"(anonymous_24)","decl":{"start":{"line":263,"column":68},"end":{"line":263,"column":69}},"loc":{"start":{"line":263,"column":79},"end":{"line":281,"column":13}},"line":263},"25":{"name":"(anonymous_25)","decl":{"start":{"line":277,"column":24},"end":{"line":277,"column":25}},"loc":{"start":{"line":277,"column":40},"end":{"line":280,"column":17}},"line":277},"26":{"name":"(anonymous_26)","decl":{"start":{"line":284,"column":48},"end":{"line":284,"column":49}},"loc":{"start":{"line":284,"column":54},"end":{"line":319,"column":5}},"line":284},"27":{"name":"(anonymous_27)","decl":{"start":{"line":285,"column":41},"end":{"line":285,"column":42}},"loc":{"start":{"line":285,"column":57},"end":{"line":289,"column":9}},"line":285},"28":{"name":"(anonymous_28)","decl":{"start":{"line":286,"column":58},"end":{"line":286,"column":59}},"loc":{"start":{"line":286,"column":64},"end":{"line":288,"column":13}},"line":286},"29":{"name":"(anonymous_29)","decl":{"start":{"line":290,"column":64},"end":{"line":290,"column":65}},"loc":{"start":{"line":290,"column":80},"end":{"line":303,"column":9}},"line":290},"30":{"name":"(anonymous_30)","decl":{"start":{"line":291,"column":57},"end":{"line":291,"column":58}},"loc":{"start":{"line":291,"column":68},"end":{"line":302,"column":13}},"line":291},"31":{"name":"(anonymous_31)","decl":{"start":{"line":304,"column":66},"end":{"line":304,"column":67}},"loc":{"start":{"line":304,"column":82},"end":{"line":318,"column":9}},"line":304},"32":{"name":"(anonymous_32)","decl":{"start":{"line":305,"column":59},"end":{"line":305,"column":60}},"loc":{"start":{"line":305,"column":70},"end":{"line":317,"column":13}},"line":305},"33":{"name":"(anonymous_33)","decl":{"start":{"line":320,"column":41},"end":{"line":320,"column":42}},"loc":{"start":{"line":320,"column":47},"end":{"line":342,"column":5}},"line":320},"34":{"name":"(anonymous_34)","decl":{"start":{"line":321,"column":57},"end":{"line":321,"column":58}},"loc":{"start":{"line":321,"column":73},"end":{"line":341,"column":9}},"line":321},"35":{"name":"(anonymous_35)","decl":{"start":{"line":322,"column":59},"end":{"line":322,"column":60}},"loc":{"start":{"line":322,"column":70},"end":{"line":340,"column":13}},"line":322},"36":{"name":"(anonymous_36)","decl":{"start":{"line":336,"column":24},"end":{"line":336,"column":25}},"loc":{"start":{"line":336,"column":40},"end":{"line":339,"column":17}},"line":336},"37":{"name":"(anonymous_37)","decl":{"start":{"line":343,"column":30},"end":{"line":343,"column":31}},"loc":{"start":{"line":343,"column":36},"end":{"line":365,"column":5}},"line":343},"38":{"name":"(anonymous_38)","decl":{"start":{"line":344,"column":51},"end":{"line":344,"column":52}},"loc":{"start":{"line":344,"column":67},"end":{"line":364,"column":9}},"line":344},"39":{"name":"(anonymous_39)","decl":{"start":{"line":345,"column":47},"end":{"line":345,"column":48}},"loc":{"start":{"line":345,"column":58},"end":{"line":363,"column":13}},"line":345},"40":{"name":"(anonymous_40)","decl":{"start":{"line":359,"column":24},"end":{"line":359,"column":25}},"loc":{"start":{"line":359,"column":40},"end":{"line":362,"column":17}},"line":359},"41":{"name":"(anonymous_41)","decl":{"start":{"line":366,"column":31},"end":{"line":366,"column":32}},"loc":{"start":{"line":366,"column":37},"end":{"line":388,"column":5}},"line":366},"42":{"name":"(anonymous_42)","decl":{"start":{"line":367,"column":56},"end":{"line":367,"column":57}},"loc":{"start":{"line":367,"column":72},"end":{"line":387,"column":9}},"line":367},"43":{"name":"(anonymous_43)","decl":{"start":{"line":368,"column":49},"end":{"line":368,"column":50}},"loc":{"start":{"line":368,"column":60},"end":{"line":386,"column":13}},"line":368},"44":{"name":"(anonymous_44)","decl":{"start":{"line":374,"column":24},"end":{"line":374,"column":25}},"loc":{"start":{"line":374,"column":40},"end":{"line":385,"column":17}},"line":374},"45":{"name":"(anonymous_45)","decl":{"start":{"line":389,"column":38},"end":{"line":389,"column":39}},"loc":{"start":{"line":389,"column":44},"end":{"line":411,"column":5}},"line":389},"46":{"name":"(anonymous_46)","decl":{"start":{"line":390,"column":60},"end":{"line":390,"column":61}},"loc":{"start":{"line":390,"column":76},"end":{"line":410,"column":9}},"line":390},"47":{"name":"(anonymous_47)","decl":{"start":{"line":391,"column":55},"end":{"line":391,"column":56}},"loc":{"start":{"line":391,"column":66},"end":{"line":409,"column":13}},"line":391},"48":{"name":"(anonymous_48)","decl":{"start":{"line":405,"column":24},"end":{"line":405,"column":25}},"loc":{"start":{"line":405,"column":40},"end":{"line":408,"column":17}},"line":405},"49":{"name":"(anonymous_49)","decl":{"start":{"line":412,"column":40},"end":{"line":412,"column":41}},"loc":{"start":{"line":412,"column":46},"end":{"line":439,"column":5}},"line":412},"50":{"name":"(anonymous_50)","decl":{"start":{"line":413,"column":47},"end":{"line":413,"column":48}},"loc":{"start":{"line":413,"column":63},"end":{"line":417,"column":9}},"line":413},"51":{"name":"(anonymous_51)","decl":{"start":{"line":414,"column":58},"end":{"line":414,"column":59}},"loc":{"start":{"line":414,"column":64},"end":{"line":416,"column":13}},"line":414},"52":{"name":"(anonymous_52)","decl":{"start":{"line":418,"column":62},"end":{"line":418,"column":63}},"loc":{"start":{"line":418,"column":78},"end":{"line":438,"column":9}},"line":418},"53":{"name":"(anonymous_53)","decl":{"start":{"line":419,"column":57},"end":{"line":419,"column":58}},"loc":{"start":{"line":419,"column":68},"end":{"line":437,"column":13}},"line":419},"54":{"name":"(anonymous_54)","decl":{"start":{"line":433,"column":24},"end":{"line":433,"column":25}},"loc":{"start":{"line":433,"column":40},"end":{"line":436,"column":17}},"line":433},"55":{"name":"(anonymous_55)","decl":{"start":{"line":440,"column":37},"end":{"line":440,"column":38}},"loc":{"start":{"line":440,"column":43},"end":{"line":615,"column":5}},"line":440},"56":{"name":"(anonymous_56)","decl":{"start":{"line":441,"column":37},"end":{"line":441,"column":38}},"loc":{"start":{"line":441,"column":53},"end":{"line":447,"column":9}},"line":441},"57":{"name":"(anonymous_57)","decl":{"start":{"line":444,"column":58},"end":{"line":444,"column":59}},"loc":{"start":{"line":444,"column":64},"end":{"line":446,"column":13}},"line":444},"58":{"name":"(anonymous_58)","decl":{"start":{"line":448,"column":78},"end":{"line":448,"column":79}},"loc":{"start":{"line":448,"column":94},"end":{"line":459,"column":9}},"line":448},"59":{"name":"(anonymous_59)","decl":{"start":{"line":452,"column":61},"end":{"line":452,"column":62}},"loc":{"start":{"line":452,"column":72},"end":{"line":458,"column":13}},"line":452},"60":{"name":"(anonymous_60)","decl":{"start":{"line":460,"column":87},"end":{"line":460,"column":88}},"loc":{"start":{"line":460,"column":103},"end":{"line":471,"column":9}},"line":460},"61":{"name":"(anonymous_61)","decl":{"start":{"line":465,"column":61},"end":{"line":465,"column":62}},"loc":{"start":{"line":465,"column":72},"end":{"line":470,"column":13}},"line":465},"62":{"name":"(anonymous_62)","decl":{"start":{"line":472,"column":75},"end":{"line":472,"column":76}},"loc":{"start":{"line":472,"column":91},"end":{"line":482,"column":9}},"line":472},"63":{"name":"(anonymous_63)","decl":{"start":{"line":476,"column":61},"end":{"line":476,"column":62}},"loc":{"start":{"line":476,"column":72},"end":{"line":481,"column":13}},"line":476},"64":{"name":"(anonymous_64)","decl":{"start":{"line":483,"column":71},"end":{"line":483,"column":72}},"loc":{"start":{"line":483,"column":87},"end":{"line":493,"column":9}},"line":483},"65":{"name":"(anonymous_65)","decl":{"start":{"line":487,"column":61},"end":{"line":487,"column":62}},"loc":{"start":{"line":487,"column":72},"end":{"line":492,"column":13}},"line":487},"66":{"name":"(anonymous_66)","decl":{"start":{"line":494,"column":75},"end":{"line":494,"column":76}},"loc":{"start":{"line":494,"column":91},"end":{"line":504,"column":9}},"line":494},"67":{"name":"(anonymous_67)","decl":{"start":{"line":498,"column":61},"end":{"line":498,"column":62}},"loc":{"start":{"line":498,"column":72},"end":{"line":503,"column":13}},"line":498},"68":{"name":"(anonymous_68)","decl":{"start":{"line":505,"column":69},"end":{"line":505,"column":70}},"loc":{"start":{"line":505,"column":85},"end":{"line":516,"column":9}},"line":505},"69":{"name":"(anonymous_69)","decl":{"start":{"line":509,"column":61},"end":{"line":509,"column":62}},"loc":{"start":{"line":509,"column":72},"end":{"line":515,"column":13}},"line":509},"70":{"name":"(anonymous_70)","decl":{"start":{"line":517,"column":73},"end":{"line":517,"column":74}},"loc":{"start":{"line":517,"column":89},"end":{"line":526,"column":9}},"line":517},"71":{"name":"(anonymous_71)","decl":{"start":{"line":521,"column":61},"end":{"line":521,"column":62}},"loc":{"start":{"line":521,"column":72},"end":{"line":525,"column":13}},"line":521},"72":{"name":"(anonymous_72)","decl":{"start":{"line":527,"column":68},"end":{"line":527,"column":69}},"loc":{"start":{"line":527,"column":84},"end":{"line":537,"column":9}},"line":527},"73":{"name":"(anonymous_73)","decl":{"start":{"line":531,"column":61},"end":{"line":531,"column":62}},"loc":{"start":{"line":531,"column":72},"end":{"line":536,"column":13}},"line":531},"74":{"name":"(anonymous_74)","decl":{"start":{"line":538,"column":72},"end":{"line":538,"column":73}},"loc":{"start":{"line":538,"column":88},"end":{"line":548,"column":9}},"line":538},"75":{"name":"(anonymous_75)","decl":{"start":{"line":542,"column":61},"end":{"line":542,"column":62}},"loc":{"start":{"line":542,"column":72},"end":{"line":547,"column":13}},"line":542},"76":{"name":"(anonymous_76)","decl":{"start":{"line":549,"column":68},"end":{"line":549,"column":69}},"loc":{"start":{"line":549,"column":84},"end":{"line":558,"column":9}},"line":549},"77":{"name":"(anonymous_77)","decl":{"start":{"line":553,"column":61},"end":{"line":553,"column":62}},"loc":{"start":{"line":553,"column":72},"end":{"line":557,"column":13}},"line":553},"78":{"name":"(anonymous_78)","decl":{"start":{"line":559,"column":72},"end":{"line":559,"column":73}},"loc":{"start":{"line":559,"column":88},"end":{"line":570,"column":9}},"line":559},"79":{"name":"(anonymous_79)","decl":{"start":{"line":563,"column":61},"end":{"line":563,"column":62}},"loc":{"start":{"line":563,"column":72},"end":{"line":569,"column":13}},"line":563},"80":{"name":"(anonymous_80)","decl":{"start":{"line":571,"column":93},"end":{"line":571,"column":94}},"loc":{"start":{"line":571,"column":109},"end":{"line":581,"column":9}},"line":571},"81":{"name":"(anonymous_81)","decl":{"start":{"line":575,"column":61},"end":{"line":575,"column":62}},"loc":{"start":{"line":575,"column":72},"end":{"line":580,"column":13}},"line":575},"82":{"name":"(anonymous_82)","decl":{"start":{"line":582,"column":98},"end":{"line":582,"column":99}},"loc":{"start":{"line":582,"column":114},"end":{"line":593,"column":9}},"line":582},"83":{"name":"(anonymous_83)","decl":{"start":{"line":587,"column":61},"end":{"line":587,"column":62}},"loc":{"start":{"line":587,"column":72},"end":{"line":592,"column":13}},"line":587},"84":{"name":"(anonymous_84)","decl":{"start":{"line":594,"column":85},"end":{"line":594,"column":86}},"loc":{"start":{"line":594,"column":101},"end":{"line":605,"column":9}},"line":594},"85":{"name":"(anonymous_85)","decl":{"start":{"line":599,"column":61},"end":{"line":599,"column":62}},"loc":{"start":{"line":599,"column":72},"end":{"line":604,"column":13}},"line":599},"86":{"name":"(anonymous_86)","decl":{"start":{"line":606,"column":101},"end":{"line":606,"column":102}},"loc":{"start":{"line":606,"column":117},"end":{"line":614,"column":9}},"line":606},"87":{"name":"(anonymous_87)","decl":{"start":{"line":610,"column":61},"end":{"line":610,"column":62}},"loc":{"start":{"line":610,"column":72},"end":{"line":613,"column":13}},"line":610},"88":{"name":"(anonymous_88)","decl":{"start":{"line":616,"column":35},"end":{"line":616,"column":36}},"loc":{"start":{"line":616,"column":41},"end":{"line":632,"column":5}},"line":616},"89":{"name":"(anonymous_89)","decl":{"start":{"line":617,"column":63},"end":{"line":617,"column":64}},"loc":{"start":{"line":617,"column":79},"end":{"line":631,"column":9}},"line":617},"90":{"name":"(anonymous_90)","decl":{"start":{"line":624,"column":62},"end":{"line":624,"column":63}},"loc":{"start":{"line":624,"column":73},"end":{"line":630,"column":13}},"line":624},"91":{"name":"(anonymous_91)","decl":{"start":{"line":633,"column":35},"end":{"line":633,"column":36}},"loc":{"start":{"line":633,"column":41},"end":{"line":641,"column":5}},"line":633},"92":{"name":"(anonymous_92)","decl":{"start":{"line":634,"column":66},"end":{"line":634,"column":67}},"loc":{"start":{"line":634,"column":82},"end":{"line":640,"column":9}},"line":634},"93":{"name":"(anonymous_93)","decl":{"start":{"line":635,"column":53},"end":{"line":635,"column":54}},"loc":{"start":{"line":635,"column":60},"end":{"line":639,"column":13}},"line":635},"94":{"name":"(anonymous_94)","decl":{"start":{"line":642,"column":36},"end":{"line":642,"column":37}},"loc":{"start":{"line":642,"column":42},"end":{"line":652,"column":5}},"line":642},"95":{"name":"(anonymous_95)","decl":{"start":{"line":644,"column":66},"end":{"line":644,"column":67}},"loc":{"start":{"line":644,"column":82},"end":{"line":651,"column":9}},"line":644},"96":{"name":"(anonymous_96)","decl":{"start":{"line":645,"column":54},"end":{"line":645,"column":55}},"loc":{"start":{"line":645,"column":63},"end":{"line":650,"column":13}},"line":645},"97":{"name":"(anonymous_97)","decl":{"start":{"line":653,"column":35},"end":{"line":653,"column":36}},"loc":{"start":{"line":653,"column":41},"end":{"line":663,"column":5}},"line":653},"98":{"name":"(anonymous_98)","decl":{"start":{"line":654,"column":43},"end":{"line":654,"column":44}},"loc":{"start":{"line":654,"column":59},"end":{"line":662,"column":9}},"line":654},"99":{"name":"(anonymous_99)","decl":{"start":{"line":655,"column":53},"end":{"line":655,"column":54}},"loc":{"start":{"line":655,"column":59},"end":{"line":661,"column":13}},"line":655},"100":{"name":"(anonymous_100)","decl":{"start":{"line":657,"column":26},"end":{"line":657,"column":27}},"loc":{"start":{"line":657,"column":40},"end":{"line":660,"column":17}},"line":657},"101":{"name":"(anonymous_101)","decl":{"start":{"line":664,"column":37},"end":{"line":664,"column":38}},"loc":{"start":{"line":664,"column":43},"end":{"line":683,"column":5}},"line":664},"102":{"name":"(anonymous_102)","decl":{"start":{"line":665,"column":44},"end":{"line":665,"column":45}},"loc":{"start":{"line":665,"column":60},"end":{"line":676,"column":9}},"line":665},"103":{"name":"(anonymous_103)","decl":{"start":{"line":666,"column":55},"end":{"line":666,"column":56}},"loc":{"start":{"line":666,"column":61},"end":{"line":675,"column":13}},"line":666},"104":{"name":"(anonymous_104)","decl":{"start":{"line":671,"column":24},"end":{"line":671,"column":25}},"loc":{"start":{"line":671,"column":40},"end":{"line":674,"column":17}},"line":671},"105":{"name":"(anonymous_105)","decl":{"start":{"line":677,"column":61},"end":{"line":677,"column":62}},"loc":{"start":{"line":677,"column":77},"end":{"line":682,"column":9}},"line":677},"106":{"name":"(anonymous_106)","decl":{"start":{"line":678,"column":57},"end":{"line":678,"column":58}},"loc":{"start":{"line":678,"column":66},"end":{"line":681,"column":13}},"line":678},"107":{"name":"(anonymous_107)","decl":{"start":{"line":684,"column":22},"end":{"line":684,"column":23}},"loc":{"start":{"line":684,"column":38},"end":{"line":696,"column":5}},"line":684},"108":{"name":"(anonymous_108)","decl":{"start":{"line":688,"column":16},"end":{"line":688,"column":17}},"loc":{"start":{"line":688,"column":22},"end":{"line":693,"column":9}},"line":688},"109":{"name":"(anonymous_109)","decl":{"start":{"line":693,"column":16},"end":{"line":693,"column":17}},"loc":{"start":{"line":693,"column":22},"end":{"line":695,"column":9}},"line":693}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"279":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"320":1,"321":1,"322":1,"323":1,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"330":1,"331":1,"332":1,"333":1,"334":1,"335":1,"336":1,"337":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/product.service.spec.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/product.service.spec.ts"],"names":[],"mappings":";;;;;AAAA,sEAAkE;AAClE,gEAA4E;AAC5E,+BAA8B;AAC9B,wDAA+D;AAE/D,wEAAiF;AACjF,gDAAwB;AAGxB,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IAClC,MAAM,oBAAoB,GAAmB,IAAI,gCAAc,EAAE,CAAC;IAGlE,MAAM,KAAK,GAAmB;QAC1B,MAAM,EAAE,CAAC;QACT,KAAK,EAAE,KAAK;QACZ,MAAM,EAAE,GAAG;QACX,QAAQ,EAAE,OAAO;QACjB,QAAQ,EAAE,UAAU;QACpB,QAAQ,EAAE,iBAAiB;QAC3B,SAAS,EAAE,MAAM;QACjB,QAAQ,EAAE,KAAK;QACf,MAAM,EAAE,MAAM;QACd,WAAW,EAAE,SAAS;QACtB,aAAa,EAAE,iBAAiB;QAChC,UAAU,EAAE,OAAO;QACnB,WAAW,EAAE,iBAAiB;QAC9B,cAAc,EAAE,aAAa;QAC7B,SAAS,EAAE,CAAC;QACZ,aAAa,EAAE,CAAC;QAChB,YAAY,EAAE,CAAC;KAClB,CAAC;IAEF,MAAM,QAAQ,GAAsB;QAChC,SAAS,EAAG,CAAC;QACb,WAAW,EAAE,SAAS;QACtB,kBAAkB,EAAE,+BAA+B;QACnD,YAAY,EAAE,EAAE;QAChB,eAAe,EAAE,MAAM;QACvB,eAAe,EAAE,IAAI;QACrB,eAAe,EAAE,IAAI;QACrB,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAChC,QAAQ,EAAE,IAAI;QACd,UAAU,EAAE,KAAK;QACjB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,KAAK;QACjB,WAAW,EAAE,IAAI;QACjB,MAAM,EAAE,CAAC;QACT,OAAO,EAAE,IAAI;KAChB,CAAC;IAEF,MAAM,QAAQ,GAAsB;QAChC,SAAS,EAAG,CAAC;QACb,WAAW,EAAE,SAAS;QACtB,kBAAkB,EAAE,oCAAoC;QACxD,YAAY,EAAE,EAAE;QAChB,eAAe,EAAE,MAAM;QACvB,eAAe,EAAE,IAAI;QACrB,eAAe,EAAE,IAAI;QACrB,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAChC,QAAQ,EAAE,IAAI;QACd,UAAU,EAAE,KAAK;QACjB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,KAAK;QACjB,WAAW,EAAE,IAAI;QACjB,MAAM,EAAE,CAAC;QACT,OAAO,EAAE,IAAI;KAChB,CAAC;IAEF,MAAM,QAAQ,GAAsB;QAChC,SAAS,EAAG,CAAC;QACb,WAAW,EAAE,WAAW;QACxB,kBAAkB,EAAE,+BAA+B;QACnD,YAAY,EAAE,EAAE;QAChB,eAAe,EAAE,MAAM;QACvB,eAAe,EAAE,IAAI;QACrB,eAAe,EAAE,IAAI;QACrB,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAChC,QAAQ,EAAE,IAAI;QACd,UAAU,EAAE,KAAK;QACjB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,KAAK;QACjB,WAAW,EAAE,IAAI;QACjB,MAAM,EAAE,CAAC;QACT,OAAO,EAAE,IAAI;KAChB,CAAC;IAEF,MAAM,QAAQ,GAAsB;QAChC,SAAS,EAAG,CAAC;QACb,WAAW,EAAE,OAAO;QACpB,kBAAkB,EAAE,wEAAwE;QAC5F,YAAY,EAAE,GAAG;QACjB,eAAe,EAAE,gCAAgC;QACjD,eAAe,EAAE,MAAM;QACvB,eAAe,EAAE,IAAI;QACrB,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAChC,QAAQ,EAAE,IAAI;QACd,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,IAAI;QAChB,WAAW,EAAE,IAAI;QACjB,MAAM,EAAE,CAAC;QACT,OAAO,EAAE,IAAI;KAEhB,CAAC;IACF,MAAM,QAAQ,GAAsB;QAChC,SAAS,EAAG,CAAC;QACb,WAAW,EAAE,QAAQ;QACrB,kBAAkB,EAAE,kGAAkG;QACtH,YAAY,EAAE,EAAE;QAChB,eAAe,EAAE,eAAe;QAChC,eAAe,EAAE,MAAM;QACvB,eAAe,EAAE,KAAK;QACtB,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAChC,QAAQ,EAAE,IAAI;QACd,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,IAAI;QAChB,WAAW,EAAE,KAAK;QAClB,MAAM,EAAE,CAAC;QACT,OAAO,EAAE,IAAI;KAEhB,CAAC;IACF,MAAM,QAAQ,GAAsB;QAChC,SAAS,EAAG,CAAC;QACb,WAAW,EAAE,SAAS;QACtB,kBAAkB,EAAE,2BAA2B;QAC/C,YAAY,EAAE,GAAG;QACjB,eAAe,EAAE,eAAe;QAChC,eAAe,EAAE,QAAQ;QACzB,eAAe,EAAE,KAAK;QACtB,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAChC,QAAQ,EAAE,IAAI;QACd,UAAU,EAAE,IAAI;QAChB,SAAS,EAAE,IAAI;QACf,UAAU,EAAE,KAAK;QACjB,WAAW,EAAE,IAAI;QACjB,MAAM,EAAE,CAAC;QACT,OAAO,EAAE,IAAI;KAEhB,CAAC;IAEF,MAAM,QAAQ,GAAsB;QAChC,SAAS,EAAG,CAAC;QACb,WAAW,EAAE,WAAW;QACxB,kBAAkB,EAAE,qCAAqC;QACzD,YAAY,EAAE,EAAE;QAChB,eAAe,EAAE,MAAM;QACvB,eAAe,EAAE,IAAI;QACrB,eAAe,EAAE,IAAI;QACrB,UAAU,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;QAChC,QAAQ,EAAE,IAAI;QACd,UAAU,EAAE,KAAK;QACjB,SAAS,EAAE,KAAK;QAChB,UAAU,EAAE,KAAK;QACjB,WAAW,EAAE,IAAI;QACjB,MAAM,EAAE,CAAC;QACT,OAAO,EAAE,CAAC;KACb,CAAC;IAEF,MAAM,CAAC,gBAAgB,EAAE,UAAS,IAAI;QAClC,iBAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACzB,IAAI,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACpC,EAAE,CAAC,sCAAsC,EAAE,UAAS,IAAI;YACpD,oBAAoB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACjD,aAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtC,aAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;gBAChD,aAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAAC;gBAC7E,aAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC1C,aAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACjD,aAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC3C,aAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC1C,aAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC3C,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,uBAAO,CAAC,OAAO,CAAC;oBACZ,KAAK,EAAE;wBACH,WAAW,EAAE,SAAS;qBACzB;iBACJ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACnB,aAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBACxC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,oCAAoC,EAAE,UAAS,IAAI;YAClD,MAAM,aAAa,GAAsB;gBACrC,SAAS,EAAG,IAAI;gBAChB,WAAW,EAAE,IAAI;gBACjB,kBAAkB,EAAE,IAAI;gBACxB,YAAY,EAAE,IAAI;gBAClB,eAAe,EAAE,IAAI;gBACrB,eAAe,EAAE,IAAI;gBACrB,eAAe,EAAE,IAAI;gBACrB,UAAU,EAAE,IAAI;gBAChB,QAAQ,EAAE,IAAI;gBACd,UAAU,EAAE,KAAK;gBACjB,SAAS,EAAE,KAAK;gBAChB,UAAU,EAAE,KAAK;gBACjB,WAAW,EAAE,IAAI;gBACjB,MAAM,EAAE,IAAI;gBACZ,OAAO,EAAE,IAAI;aAChB,CAAC;YACF,oBAAoB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBACrD,aAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBACjC,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACpC,EAAE,CAAC,sCAAsC,EAAE,UAAS,IAAI;YACpD,oBAAoB,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACpD,aAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtC,aAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;gBAChD,aAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,oCAAoC,CAAC,CAAC;gBAClF,aAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC1C,aAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACjD,aAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC3C,aAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC1C,aAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC3C,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,uBAAO,CAAC,OAAO,CAAC;oBACZ,KAAK,EAAE;wBACH,WAAW,EAAE,SAAS;qBACzB;iBACJ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACnB,aAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBACxC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,iDAAiD,EAAE,UAAS,IAAI;YAC/D,oBAAoB,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBACpD,aAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAAA;gBAC/D,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAC/B,EAAE,CAAC,mCAAmC,EAAE,UAAS,IAAI;YACjD,oBAAoB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBAC9C,aAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtC,aAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;gBAChD,aAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,oCAAoC,CAAC,CAAC;gBAClF,aAAM,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC1C,aAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACjD,aAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC3C,aAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC1C,aAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC3C,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,uBAAO,CAAC,OAAO,CAAC;oBACZ,KAAK,EAAE;wBACH,WAAW,EAAE,SAAS;qBACzB;iBACJ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACnB,aAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBACxC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,iDAAiD,EAAE,UAAS,IAAI;YAC/D,oBAAoB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;gBAC7C,aAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,gCAAgC,CAAC,CAAC;gBAC/D,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,8BAA8B,EAAE,GAAG,EAAE;QAC1C,EAAE,CAAC,oDAAoD,EAAE,UAAS,IAAI;YAClE,oBAAoB,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBAC9D,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;gBACnD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,oCAAoC,CAAC,CAAC;gBACrF,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC9C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC9C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtC,uBAAO,CAAC,OAAO,CAAC;oBACZ,KAAK,EAAE;wBACH,WAAW,EAAE,SAAS;qBACzB;iBACJ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACnB,aAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBACxC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,iCAAiC,EAAE,GAAG,EAAE;QAC7C,MAAM,CAAC,wBAAwB,EAAE,UAAS,IAAI;YAC1C,uBAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC/B,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,mDAAmD,EAAE,UAAS,IAAI;YACjE,oBAAoB,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACnD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;gBACrD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,qCAAqC,CAAC,CAAC;gBACtF,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC9C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC9C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtC,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,qDAAqD,EAAE,UAAS,IAAI;YACnE,oBAAoB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACrD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;gBACrD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,qCAAqC,CAAC,CAAC;gBACtF,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC9C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC9C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACvC,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACtC,EAAE,CAAC,4CAA4C,EAAE,UAAS,IAAI;YAC1D,oBAAoB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACrD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;gBACnD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,oCAAoC,CAAC,CAAC;gBACrF,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC9C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC9C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtC,uBAAO,CAAC,OAAO,CAAC;oBACZ,KAAK,EAAE;wBACH,WAAW,EAAE,SAAS;qBACzB;iBACJ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACnB,aAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBACxC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC3B,EAAE,CAAC,sCAAsC,EAAE,UAAS,IAAI;YACpD,oBAAoB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;gBACnD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,oCAAoC,CAAC,CAAC;gBACrF,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC9C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC9C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtC,uBAAO,CAAC,OAAO,CAAC;oBACZ,KAAK,EAAE;wBACH,WAAW,EAAE,SAAS;qBACzB;iBACJ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACnB,aAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBACxC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC5B,EAAE,CAAC,2CAA2C,EAAE,UAAS,IAAI;YACzD,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBAC3C,aAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC5B,uBAAO,CAAC,OAAO,CAAC;oBACZ,KAAK,EAAE;wBACH,SAAS,EAAE,OAAO;qBACrB;iBACJ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACnB,aAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC3C,aAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;oBACrD,aAAM,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,oCAAoC,CAAC,CAAC;oBACvF,aAAM,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;oBAC/C,aAAM,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;oBACtD,aAAM,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBAC/C,aAAM,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;oBAC/C,aAAM,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBAChD,aAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;oBACxC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAA;YAGN,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACnC,EAAE,CAAC,+CAA+C,EAAE,UAAS,IAAI;YAC7D,oBAAoB,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACjD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;gBACnD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,oCAAoC,CAAC,CAAC;gBACrF,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC9C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtC,uBAAO,CAAC,OAAO,CAAC;oBACZ,KAAK,EAAE;wBACH,WAAW,EAAE,SAAS;qBACzB;iBACJ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACnB,aAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBACxC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACrC,MAAM,CAAC,8BAA8B,EAAE,UAAS,IAAI;YAChD,uBAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC/B,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,iDAAiD,EAAE,UAAS,IAAI;YAC/D,oBAAoB,CAAC,gBAAgB,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACnD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;gBACrD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAAC;gBAChF,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC9C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;gBAC7C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC9C,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACtC,uBAAO,CAAC,OAAO,CAAC;oBACZ,KAAK,EAAE;wBACH,WAAW,EAAE,WAAW;qBAC3B;iBACJ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACnB,aAAM,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBACxC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAClC,MAAM,CAAC,oBAAoB,EAAE,UAAS,IAAI;YACtC,uBAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACzB,uBAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACzB,uBAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC/B,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,iEAAiE,EAAE,UAAS,IAAI;YAC/E,MAAM,OAAO,GAAkB;gBAC3B,IAAI,EAAE,GAAG;aACZ,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACP,EAAE,CAAC,0EAA0E,EAAE,UAAS,IAAI;YACxF,MAAM,OAAO,GAAkB;gBAC3B,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,GAAG;aAChB,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACP,EAAE,CAAC,8DAA8D,EAAE,UAAS,IAAI;YAC5E,MAAM,OAAO,GAAkB;gBAC3B,QAAQ,EAAE,MAAM;aACnB,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACP,EAAE,CAAC,0DAA0D,EAAE,UAAS,IAAI;YACxE,MAAM,OAAO,GAAkB;gBAC3B,QAAQ,EAAE,IAAI;aACjB,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACP,EAAE,CAAC,8DAA8D,EAAE,UAAS,IAAI;YAC5E,MAAM,OAAO,GAAkB;gBAC3B,QAAQ,EAAE,KAAK;aAClB,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACP,EAAE,CAAC,wDAAwD,EAAE,UAAS,IAAI;YACtE,MAAM,OAAO,GAAkB;gBAC3B,SAAS,EAAE,IAAI;aAClB,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACP,EAAE,CAAC,4DAA4D,EAAE,UAAS,IAAI;YAC1E,MAAM,OAAO,GAAkB;gBAC3B,SAAS,EAAE,KAAK;aACnB,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACP,EAAE,CAAC,uDAAuD,EAAE,UAAS,IAAI;YACrE,MAAM,OAAO,GAAkB;gBAC3B,UAAU,EAAE,IAAI;aACnB,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACP,EAAE,CAAC,2DAA2D,EAAE,UAAS,IAAI;YACzE,MAAM,OAAO,GAAkB;gBAC3B,UAAU,EAAE,KAAK;aACpB,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACP,EAAE,CAAC,uDAAuD,EAAE,UAAS,IAAI;YACrE,MAAM,OAAO,GAAkB;gBAC1B,SAAS,EAAE,IAAI;aACnB,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACP,EAAE,CAAC,2DAA2D,EAAE,UAAS,IAAI;YACzE,MAAM,OAAO,GAAkB;gBAC1B,SAAS,EAAE,KAAK;aACpB,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEP,EAAE,CAAC,gFAAgF,EAAE,UAAS,IAAI;YAC9F,MAAM,OAAO,GAAkB;gBAC3B,QAAQ,EAAE,eAAe;aAC5B,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACP,EAAE,CAAC,qFAAqF,EAAE,UAAS,IAAI;YACnG,MAAM,OAAO,GAAkB;gBAC3B,IAAI,EAAE,GAAG;gBACT,SAAS,EAAE,IAAI;aAClB,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEP,EAAE,CAAC,wEAAwE,EAAE,UAAS,IAAI;YACtF,MAAM,OAAO,GAAkB;gBAC3B,QAAQ,EAAE,IAAI;gBACd,SAAS,EAAE,IAAI;aAClB,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACzC,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAGP,EAAE,CAAC,wFAAwF,EAAE,UAAS,IAAI;YACtG,MAAM,OAAO,GAAkB;gBAC3B,IAAI,EAAE,SAAS;aAClB,CAAC;YACF,oBAAoB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;gBACvD,aAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,EAAE,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEP,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,kDAAkD,EAAE,UAAS,IAAI;YAChE,MAAM,SAAS,GAAG,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,sBAAsB,CAAC,CAAC;YAC/D,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;YACzB,MAAM,OAAO,GAAuB;gBAChC,QAAQ,EAAE,WAAW;gBACrB,IAAI,EAAE,SAAS;aAClB,CAAA;YACD,oBAAoB,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;gBACxD,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC3C,aAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClC,aAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;gBACzC,aAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACpC,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,qDAAqD,EAAE,UAAS,IAAI;YACnE,oBAAoB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;gBAC3C,aAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBACnC,aAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAC/B,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACjC,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,EAAE,CAAC,qDAAqD,EAAE,UAAS,IAAI;YACnE,oBAAoB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;gBAC9C,MAAM,SAAS,GAAG,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,GAAG,KAAK,CAAC,CAAC;gBACjE,aAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,cAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjD,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;gBACzB,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,8BAA8B,EAAE,UAAS,IAAI;YAC5C,oBAAoB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC1C,iCAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;qBACvB,IAAI,CAAC,UAAU,CAAC,EAAE;oBACf,aAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBAClC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAClC,EAAE,CAAC,+BAA+B,EAAE,UAAS,IAAI;YAC7C,oBAAoB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC5C,uBAAO,CAAC,OAAO,CAAC;oBACZ,KAAK,EAAE;wBACH,WAAW,EAAE,SAAS;qBACzB;iBACJ,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBACnB,aAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;oBACpC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,gDAAgD,EAAE,UAAS,IAAI;YAC9D,oBAAoB,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;gBACjD,aAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,+BAA+B,CAAC,CAAC;gBAC9D,IAAI,EAAE,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IACH,KAAK,CAAC,UAAU,EAAE,UAAS,IAAI;QAC3B,iBAAI,CAAC,OAAO,CAAC;YACT,QAAQ,EAAE,IAAI;YACd,eAAe,EAAE,IAAI;SACxB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACT,uBAAO,CAAC,OAAO,CAAC;gBACZ,QAAQ,EAAE,IAAI;gBACd,eAAe,EAAE,IAAI;aACxB,CAAC,CAAA;QACN,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACT,IAAI,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { ProductService } from './../../services/product.service';\nimport { Product, ProductAttributes   } from './../../models/product.model';\nimport { expect } from 'chai';\nimport { User, UserAttributes } from '../../models/user.model';\nimport {SearchRequest} from '../../models/search.model';\nimport {ImageGetAttributes, ProductImage} from '../../models/productimage.model';\nimport path from 'path';\n\n\ndescribe('ProductService Tests', () => {\n    const testedProductService: ProductService = new ProductService();\n\n    // Create a user: A user is required to create a product\n    const user1: UserAttributes = {\n        userId: 1,\n        admin: false,\n        wallet: 500,\n        userName: 'jacky',\n        password: 'jacky123',\n        userMail: 'jacky@gmail.com',\n        firstName: 'Jack',\n        lastName: 'Doe',\n        gender: 'male',\n        phoneNumber: 768927361,\n        addressStreet: 'Pinnacle Street',\n        addressPin: '77889',\n        addressCity: 'Hannington Town',\n        addressCountry: 'Saint Isles',\n        gameScore: 0,\n        activityScore: 0,\n        overallScore: 0\n    };\n\n    const product1: ProductAttributes = {\n        productId : 1,\n        productName: 'Schoggi',\n        productDescription: 'E feini Schoggi us Guetemala.',\n        productPrice: 10,\n        productCategory: 'food',\n        productLocation: null,\n        productDelivery: true,\n        uploadDate: new Date(Date.now()),\n        sellDate: null,\n        isApproved: false,\n        isService: false,\n        isRentable: false,\n        isAvailable: true,\n        userId: 1,\n        buyerId: null\n    };\n\n    const product2: ProductAttributes = {\n        productId : 1,\n        productName: 'Schoggi',\n        productDescription: 'E sehr feini Schoggi us Guetemala.',\n        productPrice: 20,\n        productCategory: 'food',\n        productLocation: null,\n        productDelivery: true,\n        uploadDate: new Date(Date.now()),\n        sellDate: null,\n        isApproved: false,\n        isService: false,\n        isRentable: false,\n        isAvailable: true,\n        userId: 1,\n        buyerId: null\n    };\n\n    const product3: ProductAttributes = {\n        productId : 2,\n        productName: 'Formaggio',\n        productDescription: 'Un buono formaggio di Ticino.',\n        productPrice: 30,\n        productCategory: 'food',\n        productLocation: null,\n        productDelivery: true,\n        uploadDate: new Date(Date.now()),\n        sellDate: null,\n        isApproved: false,\n        isService: false,\n        isRentable: false,\n        isAvailable: true,\n        userId: 1,\n        buyerId: null\n    };\n\n    const product4: ProductAttributes = {\n        productId : 3,\n        productName: 'Drone',\n        productDescription: 'Endlessly flying drone with autonomous electricity due to solar power.',\n        productPrice: 850,\n        productCategory: 'ComputerAndComputerAccessories',\n        productLocation: 'Bern',\n        productDelivery: true,\n        uploadDate: new Date(Date.now()),\n        sellDate: null,\n        isApproved: true,\n        isService: false,\n        isRentable: true,\n        isAvailable: true,\n        userId: 1,\n        buyerId: null\n\n    };\n    const product5: ProductAttributes = {\n        productId : 4,\n        productName: 'Shovel',\n        productDescription: 'A strong shovel made from steel, useful for various tasks around the house in winter and summer.',\n        productPrice: 15,\n        productCategory: 'Miscellaneous',\n        productLocation: 'Bern',\n        productDelivery: false,\n        uploadDate: new Date(Date.now()),\n        sellDate: null,\n        isApproved: true,\n        isService: false,\n        isRentable: true,\n        isAvailable: false,\n        userId: 1,\n        buyerId: null\n\n    };\n    const product6: ProductAttributes = {\n        productId : 5,\n        productName: 'Massage',\n        productDescription: 'One hour of thai massage.',\n        productPrice: 120,\n        productCategory: 'Miscellaneous',\n        productLocation: 'Zürich',\n        productDelivery: false,\n        uploadDate: new Date(Date.now()),\n        sellDate: null,\n        isApproved: true,\n        isService: true,\n        isRentable: false,\n        isAvailable: true,\n        userId: 1,\n        buyerId: null\n\n    };\n\n    const product7: ProductAttributes = {\n        productId : 7,\n        productName: 'Formaggio',\n        productDescription: 'Un molto buono formaggio di Ticino.',\n        productPrice: 30,\n        productCategory: 'food',\n        productLocation: null,\n        productDelivery: true,\n        uploadDate: new Date(Date.now()),\n        sellDate: null,\n        isApproved: false,\n        isService: false,\n        isRentable: false,\n        isAvailable: true,\n        userId: 1,\n        buyerId: 2\n    };\n\n    before('add user to db', function(done) {\n        User.create(user1).then(() => {\n            done();\n        });\n    });\n    describe('Test Creating Products', () => {\n        it('should successfully create a product', function(done){\n            testedProductService.create(product1).then(product => {\n                expect(product.productId).to.be.eq(1);\n                expect(product.productName).to.be.eq('Schoggi');\n                expect(product.productDescription).to.be.eq('E feini Schoggi us Guetemala.');\n                expect(product.productPrice).to.be.eq(10);\n                expect(product.productCategory).to.be.eq('food');\n                expect(product.isApproved).to.be.eq(false);\n                expect(product.isService).to.be.eq(false);\n                expect(product.isAvailable).to.be.eq(true);\n                expect(product.userId).to.be.eq(1);\n                Product.findOne({\n                    where: {\n                        productName: 'Schoggi'\n                    }\n                }).then(foundProduct => {\n                    expect(foundProduct).not.to.be.eq(null);\n                    done();\n                });\n            });\n        });\n        it('should not create a faulty product', function(done) {\n            const productFaulty: ProductAttributes = {\n                productId : null,\n                productName: null,\n                productDescription: null,\n                productPrice: null,\n                productCategory: null,\n                productLocation: null,\n                productDelivery: true,\n                uploadDate: null,\n                sellDate: null,\n                isApproved: false,\n                isService: false,\n                isRentable: false,\n                isAvailable: true,\n                userId: null,\n                buyerId: null,\n            };\n            testedProductService.create(productFaulty).catch(error => {\n                expect(error).not.to.be.eq(null);\n                done();\n            });\n        });\n    });\n    describe('Test Updating Products', () => {\n        it('should successfully update a product', function(done){\n            testedProductService.update(1, product2).then(product => {\n                expect(product.productId).to.be.eq(1);\n                expect(product.productName).to.be.eq('Schoggi');\n                expect(product.productDescription).to.be.eq('E sehr feini Schoggi us Guetemala.');\n                expect(product.productPrice).to.be.eq(20);\n                expect(product.productCategory).to.be.eq('food');\n                expect(product.isApproved).to.be.eq(false);\n                expect(product.isService).to.be.eq(false);\n                expect(product.isAvailable).to.be.eq(true);\n                expect(product.userId).to.be.eq(1);\n                Product.findOne({\n                    where: {\n                        productName: 'Schoggi'\n                    }\n                }).then(foundProduct => {\n                    expect(foundProduct).not.to.be.eq(null);\n                    done();\n                });\n            });\n        });\n        it('should not update a product that does not exist', function(done){\n            testedProductService.update(13, product2).catch(error => {\n                expect(error.message).to.be.eq('Product with id 13 not found!')\n                done();\n            });\n        });\n    });\n    describe('Test getProduct()', () => {\n        it('should successfully get a product', function(done){\n            testedProductService.getProduct(1).then(product => {\n                expect(product.productId).to.be.eq(1);\n                expect(product.productName).to.be.eq('Schoggi');\n                expect(product.productDescription).to.be.eq('E sehr feini Schoggi us Guetemala.');\n                expect(product.productPrice).to.be.eq(20);\n                expect(product.productCategory).to.be.eq('food');\n                expect(product.isApproved).to.be.eq(false);\n                expect(product.isService).to.be.eq(false);\n                expect(product.isAvailable).to.be.eq(true);\n                expect(product.userId).to.be.eq(1);\n                Product.findOne({\n                    where: {\n                        productName: 'Schoggi'\n                    }\n                }).then(foundProduct => {\n                    expect(foundProduct).not.to.be.eq(null);\n                    done();\n                });\n            });\n        });\n        it('should return a error if product does not exist', function(done){\n            testedProductService.getProduct(300).catch(err => {\n                expect(err.message).to.be.eq('Product with id 300 not found!');\n                done();\n            });\n        });\n    });\n    describe('Test getProductsOfCategory()', () => {\n        it('should successfully get all products of a category', function(done){\n            testedProductService.getProductsOfCategory('food').then(product => {\n                expect(product[0].productId).to.be.eq(1);\n                expect(product[0].productName).to.be.eq('Schoggi');\n                expect(product[0].productDescription).to.be.eq('E sehr feini Schoggi us Guetemala.');\n                expect(product[0].productPrice).to.be.eq(20);\n                expect(product[0].productCategory).to.be.eq('food');\n                expect(product[0].isApproved).to.be.eq(false);\n                expect(product[0].isService).to.be.eq(false);\n                expect(product[0].isAvailable).to.be.eq(true);\n                expect(product[0].userId).to.be.eq(1);\n                Product.findOne({\n                    where: {\n                        productName: 'Schoggi'\n                    }\n                }).then(foundProduct => {\n                    expect(foundProduct).not.to.be.eq(null);\n                    done();\n                });\n            });\n        });\n    });\n    describe('Test get sold or bough products', () => {\n        before('add sold product to db', function(done) {\n            Product.create(product7).then(() => {\n                done();\n            });\n        });\n        it('should successfully get all sold products of user', function(done){\n            testedProductService.getSoldProducts(1).then(product => {\n                expect(product[0].productId).to.be.eq(7);\n                expect(product[0].productName).to.be.eq('Formaggio');\n                expect(product[0].productDescription).to.be.eq('Un molto buono formaggio di Ticino.');\n                expect(product[0].productPrice).to.be.eq(30);\n                expect(product[0].productCategory).to.be.eq('food');\n                expect(product[0].isApproved).to.be.eq(false);\n                expect(product[0].isService).to.be.eq(false);\n                expect(product[0].isAvailable).to.be.eq(true);\n                expect(product[0].userId).to.be.eq(1);\n                done();\n            });\n        });\n        it('should successfully get all bought products of user', function(done){\n            testedProductService.getBoughtProducts(2).then(product => {\n                expect(product[0].productId).to.be.eq(7);\n                expect(product[0].productName).to.be.eq('Formaggio');\n                expect(product[0].productDescription).to.be.eq('Un molto buono formaggio di Ticino.');\n                expect(product[0].productPrice).to.be.eq(30);\n                expect(product[0].productCategory).to.be.eq('food');\n                expect(product[0].isApproved).to.be.eq(false);\n                expect(product[0].isService).to.be.eq(false);\n                expect(product[0].isAvailable).to.be.eq(true);\n                expect(product[0].userId).to.be.eq(1);\n                expect(product[0].buyerId).to.be.eq(2);\n                done();\n            });\n        });\n    });\n    describe('Test getProductsOfUser()', () => {\n        it('should successfully get products of a user', function(done){\n            testedProductService.getProductsOfUser(1).then(product => {\n                expect(product[0].productId).to.be.eq(1);\n                expect(product[0].productName).to.be.eq('Schoggi');\n                expect(product[0].productDescription).to.be.eq('E sehr feini Schoggi us Guetemala.');\n                expect(product[0].productPrice).to.be.eq(20);\n                expect(product[0].productCategory).to.be.eq('food');\n                expect(product[0].isApproved).to.be.eq(false);\n                expect(product[0].isService).to.be.eq(false);\n                expect(product[0].isAvailable).to.be.eq(true);\n                expect(product[0].userId).to.be.eq(1);\n                Product.findOne({\n                    where: {\n                        productName: 'Schoggi'\n                    }\n                }).then(foundProduct => {\n                    expect(foundProduct).not.to.be.eq(null);\n                    done();\n                });\n            });\n        });\n    });\n    describe('Test getAll()', () => {\n        it('should successfully get all products', function(done){\n            testedProductService.getAll().then(product => {\n                expect(product[0].productId).to.be.eq(1);\n                expect(product[0].productName).to.be.eq('Schoggi');\n                expect(product[0].productDescription).to.be.eq('E sehr feini Schoggi us Guetemala.');\n                expect(product[0].productPrice).to.be.eq(20);\n                expect(product[0].productCategory).to.be.eq('food');\n                expect(product[0].isApproved).to.be.eq(false);\n                expect(product[0].isService).to.be.eq(false);\n                expect(product[0].isAvailable).to.be.eq(true);\n                expect(product[0].userId).to.be.eq(1);\n                Product.findOne({\n                    where: {\n                        productName: 'Schoggi'\n                    }\n                }).then(foundProduct => {\n                    expect(foundProduct).not.to.be.eq(null);\n                    done();\n                });\n            });\n        });\n    });\n    describe('Test approve()', () => {\n        it('should successfully approve product by id', function(done){\n            testedProductService.approve(1).then(product => {\n                expect(product).to.be.eq(1);\n                Product.findOne({\n                    where: {\n                        productId: product\n                    }\n                }).then(foundproduct => {\n                    expect(foundproduct.productId).to.be.eq(1);\n                    expect(foundproduct.productName).to.be.eq('Schoggi');\n                    expect(foundproduct.productDescription).to.be.eq('E sehr feini Schoggi us Guetemala.');\n                    expect(foundproduct.productPrice).to.be.eq(20);\n                    expect(foundproduct.productCategory).to.be.eq('food');\n                    expect(foundproduct.isApproved).to.be.eq(true);\n                    expect(foundproduct.isService).to.be.eq(false);\n                    expect(foundproduct.isAvailable).to.be.eq(true);\n                    expect(foundproduct.userId).to.be.eq(1);\n                    done();\n                })\n                \n                    \n            });\n        });\n    });\n    \n    describe('Test getAllApproved()', () => {\n        it('should successfully get all approved products', function(done){\n            testedProductService.getAllApproved().then(product => {\n                expect(product[0].productId).to.be.eq(1);\n                expect(product[0].productName).to.be.eq('Schoggi');\n                expect(product[0].productDescription).to.be.eq('E sehr feini Schoggi us Guetemala.');\n                expect(product[0].productPrice).to.be.eq(20);\n                expect(product[0].productCategory).to.be.eq('food');\n                expect(product[0].isApproved).to.be.eq(true);\n                expect(product[0].isService).to.be.eq(false);\n                expect(product[0].isAvailable).to.be.eq(true);\n                expect(product[0].userId).to.be.eq(1);\n                Product.findOne({\n                    where: {\n                        productName: 'Schoggi'\n                    }\n                }).then(foundProduct => {\n                    expect(foundProduct).not.to.be.eq(null);\n                    done();\n                });\n            });\n        });\n    });\n    describe('Test getAllUnapproved()', () => {\n        before('add unapproved product to db', function(done) {\n            Product.create(product3).then(() => {\n                done();\n            });\n        });\n        it('should successfully get all unapproved products', function(done){\n            testedProductService.getAllUnapproved().then(product => {\n                expect(product[0].productId).to.be.eq(2);\n                expect(product[0].productName).to.be.eq('Formaggio');\n                expect(product[0].productDescription).to.be.eq('Un buono formaggio di Ticino.');\n                expect(product[0].productPrice).to.be.eq(30);\n                expect(product[0].productCategory).to.be.eq('food');\n                expect(product[0].isApproved).to.be.eq(false);\n                expect(product[0].isService).to.be.eq(false);\n                expect(product[0].isAvailable).to.be.eq(true);\n                expect(product[0].userId).to.be.eq(1);\n                Product.findOne({\n                    where: {\n                        productName: 'Formaggio'\n                    }\n                }).then(foundProduct => {\n                    expect(foundProduct).not.to.be.eq(null);\n                    done();\n                });\n            });\n        });\n    });\n    describe('Test searchProduct()', () => {\n        before('add products to db', function(done) {\n            Product.create(product4);\n            Product.create(product5);\n            Product.create(product6).then(() => {\n                done();\n            });\n        });\n        it('should successfully search products containing the letter \\\"s\\\"', function(done){\n            const request: SearchRequest = {\n                name: \"s\"\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(1);\n                expect(product[1].productId).to.be.eq(4);\n                expect(product[2].productId).to.be.eq(5);\n                expect(product.length).to.be.eq(3);\n                done();\n                });\n            });\n        it('should successfully search products that have a price range of 20 to 500', function(done){\n            const request: SearchRequest = {\n                priceMin: 20,\n                priceMax: 500\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(1);\n                expect(product[1].productId).to.be.eq(5);\n                expect(product.length).to.be.eq(2);\n                done();\n                });\n            });    \n        it('should successfully search products that are located in Bern', function(done){\n            const request: SearchRequest = {\n                location: 'Bern'\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(3);\n                expect(product[1].productId).to.be.eq(4);\n                expect(product.length).to.be.eq(2);\n                done();\n                });\n            });\n        it('should successfully search products that are deliverable', function(done){\n            const request: SearchRequest = {\n                delivery: true\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(1);\n                expect(product[1].productId).to.be.eq(3);\n                expect(product.length).to.be.eq(2);\n                done();\n                });\n            });\n        it('should successfully search products that are not deliverable', function(done){\n            const request: SearchRequest = {\n                delivery: false\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(4);\n                expect(product[1].productId).to.be.eq(5);\n                expect(product.length).to.be.eq(2);\n                done();\n                });\n            });            \n        it('should successfully search products that are available', function(done){\n            const request: SearchRequest = {\n                available: true\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(1);\n                expect(product[1].productId).to.be.eq(3);\n                expect(product[2].productId).to.be.eq(5);\n                expect(product.length).to.be.eq(3);\n                done();\n                });\n            });   \n        it('should successfully search products that are not available', function(done){\n            const request: SearchRequest = {\n                available: false\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(4);\n                expect(product.length).to.be.eq(1);\n                done();\n                });\n            });\n        it('should successfully search products that are rentable', function(done){\n            const request: SearchRequest = {\n                isRentable: true\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(3);\n                expect(product[1].productId).to.be.eq(4);\n                expect(product.length).to.be.eq(2);\n                done();\n                });\n            });\n        it('should successfully search products that are not rentable', function(done){\n            const request: SearchRequest = {\n                isRentable: false\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(1);\n                expect(product[1].productId).to.be.eq(5);\n                expect(product.length).to.be.eq(2);\n                done();\n                });\n            });    \n        it('should successfully search products that are services', function(done){\n            const request: SearchRequest = {\n                 isService: true\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(5);\n                expect(product.length).to.be.eq(1);\n                done();\n                });\n            });  \n        it('should successfully search products that are not services', function(done){\n            const request: SearchRequest = {\n                 isService: false\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(1);\n                expect(product[1].productId).to.be.eq(3);\n                expect(product[2].productId).to.be.eq(4);\n                expect(product.length).to.be.eq(3);\n                done();\n                });\n            });                             \n                              \n        it('should successfully search products that are in the category \\\"Miscellaneous\\\"', function(done){\n            const request: SearchRequest = {\n                category: 'Miscellaneous'\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(4);\n                expect(product[1].productId).to.be.eq(5);\n                expect(product.length).to.be.eq(2);\n                done();\n                });\n            });                                                  \n        it('should successfully search products that contain the letter \\\"e\\\" and are available', function(done){\n            const request: SearchRequest = {\n                name: 'e',\n                available: true\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(3);\n                expect(product[1].productId).to.be.eq(5);\n                expect(product.length).to.be.eq(2);\n                done();\n                });\n            });    \n        \n        it('should successfully search products that are deliverable and available', function(done){\n            const request: SearchRequest = {\n                delivery: true,\n                available: true\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product[0].productId).to.be.eq(1);\n                expect(product[1].productId).to.be.eq(3);\n                expect(product.length).to.be.eq(2);\n                done();\n                });\n            });    \n        \n        \n        it('should successfully search products that contain \\\"abcdefg\\\" and return an empty array', function(done){\n            const request: SearchRequest = {\n                name: 'abcdefg'\n            };\n            testedProductService.searchProduct(request).then(product => {\n                expect(product.length).to.be.eq(0);\n                done();\n                });\n            });    \n        });\n\n    describe('Test uploadImage()', () => {\n        it('should successfully upload an image to a product', function(done) {\n            const imagePath = path.join(__dirname, '../../test/test.jpeg');\n            const fs = require('fs');\n            const request: ImageGetAttributes = {\n                filename: \"test.jpeg\",\n                path: imagePath\n            }\n            testedProductService.uploadImage(request, 1).then((image) => {\n                fs.writeFileSync(request.path, image.data);\n                expect(image.imageId).to.be.eq(3);\n                expect(image.imageType).to.be.eq('jpeg');\n                expect(image.productId).to.be.eq(1);\n                done();\n            });\n        });\n    });        \n    \n    describe('Test getImageIds()', () => {\n        it('should successfully get the imageIds from a product', function(done) {\n            testedProductService.getImageIds(1).then(ids => {\n                expect(ids[0].imageId).to.be.eq(3);\n                expect(ids.length).to.be.eq(1);\n                done();\n            });\n        });\n    });        \n\n    describe('Test getImageById()', () => {\n        const fs = require('fs');\n        it('should successfully get the image with the given id', function(done) {\n            testedProductService.getImageById(3).then(image => {\n                const imagePath = path.join(__dirname, '../../../temp/' + image);\n                expect(image).to.be.eq(path.basename(imagePath));\n                fs.unlinkSync(imagePath);\n                done();\n            });\n        });\n    });            \n\n    describe('Test deleteImage()', () => {\n        it('should delete an image by id', function(done) {\n            testedProductService.deleteImage(3).then(() => {\n                ProductImage.findByPk(3)\n                .then(foundImage => {\n                    expect(foundImage).to.be.eq(null);\n                    done();\n                });\n            });\n        });\n    });\n\n    describe('Test deleteProduct()', () => {\n        it('should delete a product by id', function(done) {\n            testedProductService.deleteProduct(1).then(() => {\n                Product.findOne({\n                    where: {\n                        productName: 'Schoggi'\n                    }\n                }).then(foundProduct => {\n                    expect(foundProduct).to.be.eq(null);\n                    done();\n                });\n            });\n        });\n        it('should not delete a product if id is not found', function(done) {\n            testedProductService.deleteProduct(14).catch((err) => {\n                expect(err.message).to.be.eq('Product with id 14 not found!');\n                done();\n            });\n        });\n    });\n    after('clean up', function(done) {\n        User.destroy({\n            truncate: true,\n            restartIdentity: true\n        }).then(() => {\n            Product.destroy({\n                truncate: true,\n                restartIdentity: true\n            })\n        }).then(() => {\n            done();\n        });\n    });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"de11d52db4fde9fe38391e1aa9067fd32be2958a","contentHash":"4c64c945543f1339b2b5ac4dd7c72f433ebd966f247673a34442dc7ba3ce3ab2"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/transaction.service.spec.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/transaction.service.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":63}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":55}},"4":{"start":{"line":6,"column":28},"end":{"line":6,"column":69}},"5":{"start":{"line":7,"column":30},"end":{"line":7,"column":75}},"6":{"start":{"line":8,"column":0},"end":{"line":398,"column":3}},"7":{"start":{"line":9,"column":37},"end":{"line":9,"column":83}},"8":{"start":{"line":10,"column":19},"end":{"line":28,"column":5}},"9":{"start":{"line":29,"column":18},"end":{"line":47,"column":5}},"10":{"start":{"line":48,"column":21},"end":{"line":64,"column":5}},"11":{"start":{"line":65,"column":21},"end":{"line":81,"column":5}},"12":{"start":{"line":82,"column":25},"end":{"line":94,"column":5}},"13":{"start":{"line":95,"column":25},"end":{"line":107,"column":5}},"14":{"start":{"line":108,"column":25},"end":{"line":120,"column":5}},"15":{"start":{"line":121,"column":4},"end":{"line":129,"column":7}},"16":{"start":{"line":122,"column":8},"end":{"line":128,"column":11}},"17":{"start":{"line":123,"column":12},"end":{"line":123,"column":44}},"18":{"start":{"line":125,"column":12},"end":{"line":125,"column":53}},"19":{"start":{"line":127,"column":12},"end":{"line":127,"column":19}},"20":{"start":{"line":130,"column":4},"end":{"line":164,"column":7}},"21":{"start":{"line":131,"column":8},"end":{"line":146,"column":11}},"22":{"start":{"line":132,"column":12},"end":{"line":145,"column":15}},"23":{"start":{"line":133,"column":16},"end":{"line":133,"column":69}},"24":{"start":{"line":134,"column":16},"end":{"line":134,"column":73}},"25":{"start":{"line":135,"column":16},"end":{"line":135,"column":62}},"26":{"start":{"line":136,"column":16},"end":{"line":136,"column":63}},"27":{"start":{"line":137,"column":16},"end":{"line":144,"column":19}},"28":{"start":{"line":142,"column":20},"end":{"line":142,"column":71}},"29":{"start":{"line":143,"column":20},"end":{"line":143,"column":27}},"30":{"start":{"line":147,"column":8},"end":{"line":157,"column":11}},"31":{"start":{"line":148,"column":12},"end":{"line":156,"column":15}},"32":{"start":{"line":154,"column":16},"end":{"line":154,"column":63}},"33":{"start":{"line":155,"column":16},"end":{"line":155,"column":23}},"34":{"start":{"line":158,"column":8},"end":{"line":163,"column":11}},"35":{"start":{"line":159,"column":12},"end":{"line":162,"column":15}},"36":{"start":{"line":160,"column":16},"end":{"line":160,"column":54}},"37":{"start":{"line":161,"column":16},"end":{"line":161,"column":23}},"38":{"start":{"line":165,"column":4},"end":{"line":232,"column":7}},"39":{"start":{"line":166,"column":8},"end":{"line":171,"column":11}},"40":{"start":{"line":167,"column":12},"end":{"line":167,"column":53}},"41":{"start":{"line":168,"column":12},"end":{"line":170,"column":15}},"42":{"start":{"line":169,"column":16},"end":{"line":169,"column":23}},"43":{"start":{"line":172,"column":8},"end":{"line":186,"column":11}},"44":{"start":{"line":173,"column":12},"end":{"line":185,"column":15}},"45":{"start":{"line":174,"column":16},"end":{"line":174,"column":72}},"46":{"start":{"line":175,"column":16},"end":{"line":175,"column":68}},"47":{"start":{"line":176,"column":16},"end":{"line":176,"column":66}},"48":{"start":{"line":177,"column":16},"end":{"line":177,"column":65}},"49":{"start":{"line":178,"column":16},"end":{"line":178,"column":88}},"50":{"start":{"line":179,"column":16},"end":{"line":179,"column":80}},"51":{"start":{"line":180,"column":16},"end":{"line":180,"column":72}},"52":{"start":{"line":181,"column":16},"end":{"line":181,"column":80}},"53":{"start":{"line":182,"column":16},"end":{"line":182,"column":71}},"54":{"start":{"line":184,"column":16},"end":{"line":184,"column":23}},"55":{"start":{"line":187,"column":8},"end":{"line":201,"column":11}},"56":{"start":{"line":188,"column":12},"end":{"line":200,"column":15}},"57":{"start":{"line":189,"column":16},"end":{"line":189,"column":72}},"58":{"start":{"line":190,"column":16},"end":{"line":190,"column":68}},"59":{"start":{"line":191,"column":16},"end":{"line":191,"column":66}},"60":{"start":{"line":192,"column":16},"end":{"line":192,"column":65}},"61":{"start":{"line":193,"column":16},"end":{"line":193,"column":88}},"62":{"start":{"line":194,"column":16},"end":{"line":194,"column":80}},"63":{"start":{"line":195,"column":16},"end":{"line":195,"column":72}},"64":{"start":{"line":196,"column":16},"end":{"line":196,"column":80}},"65":{"start":{"line":197,"column":16},"end":{"line":197,"column":71}},"66":{"start":{"line":199,"column":16},"end":{"line":199,"column":23}},"67":{"start":{"line":202,"column":8},"end":{"line":216,"column":11}},"68":{"start":{"line":203,"column":12},"end":{"line":215,"column":15}},"69":{"start":{"line":204,"column":16},"end":{"line":204,"column":72}},"70":{"start":{"line":205,"column":16},"end":{"line":205,"column":68}},"71":{"start":{"line":206,"column":16},"end":{"line":206,"column":66}},"72":{"start":{"line":207,"column":16},"end":{"line":207,"column":65}},"73":{"start":{"line":208,"column":16},"end":{"line":208,"column":88}},"74":{"start":{"line":209,"column":16},"end":{"line":209,"column":80}},"75":{"start":{"line":210,"column":16},"end":{"line":210,"column":72}},"76":{"start":{"line":211,"column":16},"end":{"line":211,"column":80}},"77":{"start":{"line":212,"column":16},"end":{"line":212,"column":71}},"78":{"start":{"line":214,"column":16},"end":{"line":214,"column":23}},"79":{"start":{"line":217,"column":8},"end":{"line":231,"column":11}},"80":{"start":{"line":218,"column":12},"end":{"line":230,"column":15}},"81":{"start":{"line":219,"column":16},"end":{"line":219,"column":72}},"82":{"start":{"line":220,"column":16},"end":{"line":220,"column":68}},"83":{"start":{"line":221,"column":16},"end":{"line":221,"column":66}},"84":{"start":{"line":222,"column":16},"end":{"line":222,"column":65}},"85":{"start":{"line":223,"column":16},"end":{"line":223,"column":86}},"86":{"start":{"line":224,"column":16},"end":{"line":224,"column":81}},"87":{"start":{"line":225,"column":16},"end":{"line":225,"column":72}},"88":{"start":{"line":226,"column":16},"end":{"line":226,"column":79}},"89":{"start":{"line":227,"column":16},"end":{"line":227,"column":71}},"90":{"start":{"line":229,"column":16},"end":{"line":229,"column":23}},"91":{"start":{"line":233,"column":4},"end":{"line":341,"column":7}},"92":{"start":{"line":234,"column":8},"end":{"line":243,"column":11}},"93":{"start":{"line":235,"column":12},"end":{"line":242,"column":15}},"94":{"start":{"line":236,"column":16},"end":{"line":236,"column":69}},"95":{"start":{"line":237,"column":16},"end":{"line":237,"column":73}},"96":{"start":{"line":238,"column":16},"end":{"line":238,"column":62}},"97":{"start":{"line":239,"column":16},"end":{"line":239,"column":63}},"98":{"start":{"line":240,"column":16},"end":{"line":240,"column":65}},"99":{"start":{"line":241,"column":16},"end":{"line":241,"column":23}},"100":{"start":{"line":244,"column":8},"end":{"line":255,"column":11}},"101":{"start":{"line":245,"column":12},"end":{"line":254,"column":15}},"102":{"start":{"line":252,"column":16},"end":{"line":252,"column":63}},"103":{"start":{"line":253,"column":16},"end":{"line":253,"column":23}},"104":{"start":{"line":256,"column":8},"end":{"line":266,"column":11}},"105":{"start":{"line":257,"column":12},"end":{"line":265,"column":15}},"106":{"start":{"line":263,"column":16},"end":{"line":263,"column":60}},"107":{"start":{"line":264,"column":16},"end":{"line":264,"column":23}},"108":{"start":{"line":267,"column":8},"end":{"line":277,"column":11}},"109":{"start":{"line":268,"column":12},"end":{"line":276,"column":15}},"110":{"start":{"line":274,"column":16},"end":{"line":274,"column":60}},"111":{"start":{"line":275,"column":16},"end":{"line":275,"column":23}},"112":{"start":{"line":278,"column":8},"end":{"line":288,"column":11}},"113":{"start":{"line":279,"column":12},"end":{"line":287,"column":15}},"114":{"start":{"line":285,"column":16},"end":{"line":285,"column":60}},"115":{"start":{"line":286,"column":16},"end":{"line":286,"column":23}},"116":{"start":{"line":289,"column":8},"end":{"line":299,"column":11}},"117":{"start":{"line":290,"column":12},"end":{"line":298,"column":15}},"118":{"start":{"line":296,"column":16},"end":{"line":296,"column":60}},"119":{"start":{"line":297,"column":16},"end":{"line":297,"column":23}},"120":{"start":{"line":300,"column":8},"end":{"line":310,"column":11}},"121":{"start":{"line":301,"column":12},"end":{"line":309,"column":15}},"122":{"start":{"line":307,"column":16},"end":{"line":307,"column":60}},"123":{"start":{"line":308,"column":16},"end":{"line":308,"column":23}},"124":{"start":{"line":311,"column":8},"end":{"line":321,"column":11}},"125":{"start":{"line":312,"column":12},"end":{"line":320,"column":15}},"126":{"start":{"line":318,"column":16},"end":{"line":318,"column":60}},"127":{"start":{"line":319,"column":16},"end":{"line":319,"column":23}},"128":{"start":{"line":322,"column":8},"end":{"line":333,"column":11}},"129":{"start":{"line":323,"column":12},"end":{"line":332,"column":15}},"130":{"start":{"line":324,"column":16},"end":{"line":326,"column":19}},"131":{"start":{"line":328,"column":16},"end":{"line":331,"column":19}},"132":{"start":{"line":329,"column":20},"end":{"line":329,"column":108}},"133":{"start":{"line":330,"column":20},"end":{"line":330,"column":27}},"134":{"start":{"line":334,"column":8},"end":{"line":340,"column":11}},"135":{"start":{"line":335,"column":12},"end":{"line":339,"column":15}},"136":{"start":{"line":336,"column":16},"end":{"line":336,"column":54}},"137":{"start":{"line":337,"column":16},"end":{"line":337,"column":78}},"138":{"start":{"line":338,"column":16},"end":{"line":338,"column":23}},"139":{"start":{"line":342,"column":4},"end":{"line":382,"column":7}},"140":{"start":{"line":343,"column":8},"end":{"line":347,"column":11}},"141":{"start":{"line":344,"column":12},"end":{"line":346,"column":15}},"142":{"start":{"line":345,"column":16},"end":{"line":345,"column":23}},"143":{"start":{"line":348,"column":8},"end":{"line":363,"column":11}},"144":{"start":{"line":349,"column":12},"end":{"line":362,"column":15}},"145":{"start":{"line":350,"column":16},"end":{"line":350,"column":69}},"146":{"start":{"line":351,"column":16},"end":{"line":351,"column":73}},"147":{"start":{"line":352,"column":16},"end":{"line":352,"column":62}},"148":{"start":{"line":353,"column":16},"end":{"line":353,"column":63}},"149":{"start":{"line":354,"column":16},"end":{"line":361,"column":19}},"150":{"start":{"line":359,"column":20},"end":{"line":359,"column":71}},"151":{"start":{"line":360,"column":20},"end":{"line":360,"column":27}},"152":{"start":{"line":364,"column":8},"end":{"line":374,"column":11}},"153":{"start":{"line":365,"column":12},"end":{"line":373,"column":15}},"154":{"start":{"line":371,"column":16},"end":{"line":371,"column":63}},"155":{"start":{"line":372,"column":16},"end":{"line":372,"column":23}},"156":{"start":{"line":375,"column":8},"end":{"line":381,"column":11}},"157":{"start":{"line":376,"column":12},"end":{"line":380,"column":15}},"158":{"start":{"line":377,"column":16},"end":{"line":377,"column":54}},"159":{"start":{"line":378,"column":16},"end":{"line":378,"column":78}},"160":{"start":{"line":379,"column":16},"end":{"line":379,"column":23}},"161":{"start":{"line":383,"column":4},"end":{"line":397,"column":7}},"162":{"start":{"line":384,"column":8},"end":{"line":396,"column":11}},"163":{"start":{"line":389,"column":12},"end":{"line":392,"column":15}},"164":{"start":{"line":395,"column":12},"end":{"line":395,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":36},"end":{"line":8,"column":37}},"loc":{"start":{"line":8,"column":42},"end":{"line":398,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":121,"column":42},"end":{"line":121,"column":43}},"loc":{"start":{"line":121,"column":58},"end":{"line":129,"column":5}},"line":121},"2":{"name":"(anonymous_2)","decl":{"start":{"line":122,"column":46},"end":{"line":122,"column":47}},"loc":{"start":{"line":122,"column":52},"end":{"line":124,"column":9}},"line":122},"3":{"name":"(anonymous_3)","decl":{"start":{"line":124,"column":16},"end":{"line":124,"column":17}},"loc":{"start":{"line":124,"column":22},"end":{"line":126,"column":9}},"line":124},"4":{"name":"(anonymous_4)","decl":{"start":{"line":126,"column":16},"end":{"line":126,"column":17}},"loc":{"start":{"line":126,"column":22},"end":{"line":128,"column":9}},"line":126},"5":{"name":"(anonymous_5)","decl":{"start":{"line":130,"column":40},"end":{"line":130,"column":41}},"loc":{"start":{"line":130,"column":46},"end":{"line":164,"column":5}},"line":130},"6":{"name":"(anonymous_6)","decl":{"start":{"line":131,"column":59},"end":{"line":131,"column":60}},"loc":{"start":{"line":131,"column":75},"end":{"line":146,"column":9}},"line":131},"7":{"name":"(anonymous_7)","decl":{"start":{"line":132,"column":73},"end":{"line":132,"column":74}},"loc":{"start":{"line":132,"column":88},"end":{"line":145,"column":13}},"line":132},"8":{"name":"(anonymous_8)","decl":{"start":{"line":141,"column":24},"end":{"line":141,"column":25}},"loc":{"start":{"line":141,"column":44},"end":{"line":144,"column":17}},"line":141},"9":{"name":"(anonymous_9)","decl":{"start":{"line":147,"column":60},"end":{"line":147,"column":61}},"loc":{"start":{"line":147,"column":76},"end":{"line":157,"column":9}},"line":147},"10":{"name":"(anonymous_10)","decl":{"start":{"line":153,"column":20},"end":{"line":153,"column":21}},"loc":{"start":{"line":153,"column":36},"end":{"line":156,"column":13}},"line":153},"11":{"name":"(anonymous_11)","decl":{"start":{"line":158,"column":57},"end":{"line":158,"column":58}},"loc":{"start":{"line":158,"column":73},"end":{"line":163,"column":9}},"line":158},"12":{"name":"(anonymous_12)","decl":{"start":{"line":159,"column":66},"end":{"line":159,"column":67}},"loc":{"start":{"line":159,"column":73},"end":{"line":162,"column":13}},"line":159},"13":{"name":"(anonymous_13)","decl":{"start":{"line":165,"column":42},"end":{"line":165,"column":43}},"loc":{"start":{"line":165,"column":48},"end":{"line":232,"column":5}},"line":165},"14":{"name":"(anonymous_14)","decl":{"start":{"line":166,"column":51},"end":{"line":166,"column":52}},"loc":{"start":{"line":166,"column":67},"end":{"line":171,"column":9}},"line":166},"15":{"name":"(anonymous_15)","decl":{"start":{"line":168,"column":70},"end":{"line":168,"column":71}},"loc":{"start":{"line":168,"column":76},"end":{"line":170,"column":13}},"line":168},"16":{"name":"(anonymous_16)","decl":{"start":{"line":172,"column":51},"end":{"line":172,"column":52}},"loc":{"start":{"line":172,"column":67},"end":{"line":186,"column":9}},"line":172},"17":{"name":"(anonymous_17)","decl":{"start":{"line":173,"column":71},"end":{"line":173,"column":72}},"loc":{"start":{"line":173,"column":86},"end":{"line":183,"column":13}},"line":173},"18":{"name":"(anonymous_18)","decl":{"start":{"line":183,"column":20},"end":{"line":183,"column":21}},"loc":{"start":{"line":183,"column":26},"end":{"line":185,"column":13}},"line":183},"19":{"name":"(anonymous_19)","decl":{"start":{"line":187,"column":52},"end":{"line":187,"column":53}},"loc":{"start":{"line":187,"column":68},"end":{"line":201,"column":9}},"line":187},"20":{"name":"(anonymous_20)","decl":{"start":{"line":188,"column":72},"end":{"line":188,"column":73}},"loc":{"start":{"line":188,"column":87},"end":{"line":198,"column":13}},"line":188},"21":{"name":"(anonymous_21)","decl":{"start":{"line":198,"column":20},"end":{"line":198,"column":21}},"loc":{"start":{"line":198,"column":26},"end":{"line":200,"column":13}},"line":198},"22":{"name":"(anonymous_22)","decl":{"start":{"line":202,"column":63},"end":{"line":202,"column":64}},"loc":{"start":{"line":202,"column":79},"end":{"line":216,"column":9}},"line":202},"23":{"name":"(anonymous_23)","decl":{"start":{"line":203,"column":71},"end":{"line":203,"column":72}},"loc":{"start":{"line":203,"column":86},"end":{"line":213,"column":13}},"line":203},"24":{"name":"(anonymous_24)","decl":{"start":{"line":213,"column":20},"end":{"line":213,"column":21}},"loc":{"start":{"line":213,"column":26},"end":{"line":215,"column":13}},"line":213},"25":{"name":"(anonymous_25)","decl":{"start":{"line":217,"column":64},"end":{"line":217,"column":65}},"loc":{"start":{"line":217,"column":80},"end":{"line":231,"column":9}},"line":217},"26":{"name":"(anonymous_26)","decl":{"start":{"line":218,"column":72},"end":{"line":218,"column":73}},"loc":{"start":{"line":218,"column":87},"end":{"line":228,"column":13}},"line":218},"27":{"name":"(anonymous_27)","decl":{"start":{"line":228,"column":20},"end":{"line":228,"column":21}},"loc":{"start":{"line":228,"column":26},"end":{"line":230,"column":13}},"line":228},"28":{"name":"(anonymous_28)","decl":{"start":{"line":233,"column":41},"end":{"line":233,"column":42}},"loc":{"start":{"line":233,"column":47},"end":{"line":341,"column":5}},"line":233},"29":{"name":"(anonymous_29)","decl":{"start":{"line":234,"column":70},"end":{"line":234,"column":71}},"loc":{"start":{"line":234,"column":86},"end":{"line":243,"column":9}},"line":234},"30":{"name":"(anonymous_30)","decl":{"start":{"line":235,"column":64},"end":{"line":235,"column":65}},"loc":{"start":{"line":235,"column":79},"end":{"line":242,"column":13}},"line":235},"31":{"name":"(anonymous_31)","decl":{"start":{"line":244,"column":60},"end":{"line":244,"column":61}},"loc":{"start":{"line":244,"column":76},"end":{"line":255,"column":9}},"line":244},"32":{"name":"(anonymous_32)","decl":{"start":{"line":251,"column":20},"end":{"line":251,"column":21}},"loc":{"start":{"line":251,"column":36},"end":{"line":254,"column":13}},"line":251},"33":{"name":"(anonymous_33)","decl":{"start":{"line":256,"column":62},"end":{"line":256,"column":63}},"loc":{"start":{"line":256,"column":78},"end":{"line":266,"column":9}},"line":256},"34":{"name":"(anonymous_34)","decl":{"start":{"line":262,"column":20},"end":{"line":262,"column":21}},"loc":{"start":{"line":262,"column":33},"end":{"line":265,"column":13}},"line":262},"35":{"name":"(anonymous_35)","decl":{"start":{"line":267,"column":70},"end":{"line":267,"column":71}},"loc":{"start":{"line":267,"column":86},"end":{"line":277,"column":9}},"line":267},"36":{"name":"(anonymous_36)","decl":{"start":{"line":273,"column":20},"end":{"line":273,"column":21}},"loc":{"start":{"line":273,"column":33},"end":{"line":276,"column":13}},"line":273},"37":{"name":"(anonymous_37)","decl":{"start":{"line":278,"column":69},"end":{"line":278,"column":70}},"loc":{"start":{"line":278,"column":85},"end":{"line":288,"column":9}},"line":278},"38":{"name":"(anonymous_38)","decl":{"start":{"line":284,"column":20},"end":{"line":284,"column":21}},"loc":{"start":{"line":284,"column":33},"end":{"line":287,"column":13}},"line":284},"39":{"name":"(anonymous_39)","decl":{"start":{"line":289,"column":62},"end":{"line":289,"column":63}},"loc":{"start":{"line":289,"column":78},"end":{"line":299,"column":9}},"line":289},"40":{"name":"(anonymous_40)","decl":{"start":{"line":295,"column":20},"end":{"line":295,"column":21}},"loc":{"start":{"line":295,"column":33},"end":{"line":298,"column":13}},"line":295},"41":{"name":"(anonymous_41)","decl":{"start":{"line":300,"column":70},"end":{"line":300,"column":71}},"loc":{"start":{"line":300,"column":86},"end":{"line":310,"column":9}},"line":300},"42":{"name":"(anonymous_42)","decl":{"start":{"line":306,"column":20},"end":{"line":306,"column":21}},"loc":{"start":{"line":306,"column":33},"end":{"line":309,"column":13}},"line":306},"43":{"name":"(anonymous_43)","decl":{"start":{"line":311,"column":69},"end":{"line":311,"column":70}},"loc":{"start":{"line":311,"column":85},"end":{"line":321,"column":9}},"line":311},"44":{"name":"(anonymous_44)","decl":{"start":{"line":317,"column":20},"end":{"line":317,"column":21}},"loc":{"start":{"line":317,"column":33},"end":{"line":320,"column":13}},"line":317},"45":{"name":"(anonymous_45)","decl":{"start":{"line":322,"column":83},"end":{"line":322,"column":84}},"loc":{"start":{"line":322,"column":99},"end":{"line":333,"column":9}},"line":322},"46":{"name":"(anonymous_46)","decl":{"start":{"line":323,"column":47},"end":{"line":323,"column":48}},"loc":{"start":{"line":323,"column":62},"end":{"line":327,"column":13}},"line":323},"47":{"name":"(anonymous_47)","decl":{"start":{"line":327,"column":20},"end":{"line":327,"column":21}},"loc":{"start":{"line":327,"column":26},"end":{"line":332,"column":13}},"line":327},"48":{"name":"(anonymous_48)","decl":{"start":{"line":328,"column":69},"end":{"line":328,"column":70}},"loc":{"start":{"line":328,"column":78},"end":{"line":331,"column":17}},"line":328},"49":{"name":"(anonymous_49)","decl":{"start":{"line":334,"column":60},"end":{"line":334,"column":61}},"loc":{"start":{"line":334,"column":76},"end":{"line":340,"column":9}},"line":334},"50":{"name":"(anonymous_50)","decl":{"start":{"line":335,"column":66},"end":{"line":335,"column":67}},"loc":{"start":{"line":335,"column":73},"end":{"line":339,"column":13}},"line":335},"51":{"name":"(anonymous_51)","decl":{"start":{"line":342,"column":42},"end":{"line":342,"column":43}},"loc":{"start":{"line":342,"column":48},"end":{"line":382,"column":5}},"line":342},"52":{"name":"(anonymous_52)","decl":{"start":{"line":343,"column":51},"end":{"line":343,"column":52}},"loc":{"start":{"line":343,"column":67},"end":{"line":347,"column":9}},"line":343},"53":{"name":"(anonymous_53)","decl":{"start":{"line":344,"column":70},"end":{"line":344,"column":71}},"loc":{"start":{"line":344,"column":76},"end":{"line":346,"column":13}},"line":344},"54":{"name":"(anonymous_54)","decl":{"start":{"line":348,"column":56},"end":{"line":348,"column":57}},"loc":{"start":{"line":348,"column":72},"end":{"line":363,"column":9}},"line":348},"55":{"name":"(anonymous_55)","decl":{"start":{"line":349,"column":64},"end":{"line":349,"column":65}},"loc":{"start":{"line":349,"column":79},"end":{"line":362,"column":13}},"line":349},"56":{"name":"(anonymous_56)","decl":{"start":{"line":358,"column":24},"end":{"line":358,"column":25}},"loc":{"start":{"line":358,"column":44},"end":{"line":361,"column":17}},"line":358},"57":{"name":"(anonymous_57)","decl":{"start":{"line":364,"column":60},"end":{"line":364,"column":61}},"loc":{"start":{"line":364,"column":76},"end":{"line":374,"column":9}},"line":364},"58":{"name":"(anonymous_58)","decl":{"start":{"line":370,"column":20},"end":{"line":370,"column":21}},"loc":{"start":{"line":370,"column":36},"end":{"line":373,"column":13}},"line":370},"59":{"name":"(anonymous_59)","decl":{"start":{"line":375,"column":60},"end":{"line":375,"column":61}},"loc":{"start":{"line":375,"column":76},"end":{"line":381,"column":9}},"line":375},"60":{"name":"(anonymous_60)","decl":{"start":{"line":376,"column":66},"end":{"line":376,"column":67}},"loc":{"start":{"line":376,"column":73},"end":{"line":380,"column":13}},"line":376},"61":{"name":"(anonymous_61)","decl":{"start":{"line":383,"column":22},"end":{"line":383,"column":23}},"loc":{"start":{"line":383,"column":34},"end":{"line":397,"column":5}},"line":383},"62":{"name":"(anonymous_62)","decl":{"start":{"line":388,"column":18},"end":{"line":388,"column":19}},"loc":{"start":{"line":388,"column":24},"end":{"line":393,"column":9}},"line":388},"63":{"name":"(anonymous_63)","decl":{"start":{"line":394,"column":18},"end":{"line":394,"column":19}},"loc":{"start":{"line":394,"column":24},"end":{"line":396,"column":9}},"line":394}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/transaction.service.spec.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/transaction.service.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai';\nimport { Product, ProductAttributes   } from './../../models/product.model';\nimport { User, UserAttributes } from '../../models/user.model';\nimport { Transaction, TransactionAttributes  } from '../../models/transaction.model';\nimport { TransactionService } from '../../services/transaction.service';\n\n\ndescribe('TransactionService Test', () => { \n    const testedTransactionService: TransactionService = new TransactionService();\n\n    // Create a user: A user is required to create a product\n    const seller: UserAttributes = {\n        userId: 1,\n        admin: false,\n        wallet: 500,\n        userName: 'shello',\n        password: 'jacky123',\n        userMail: 'jacky@gmail.com',\n        firstName: 'Jack',\n        lastName: 'Doe',\n        gender: 'male',\n        phoneNumber: 768927361,\n        addressStreet: 'Pinnacle Street',\n        addressPin: '77889',\n        addressCity: 'Hannington Town',\n        addressCountry: 'Saint Isles',\n        gameScore: 3,\n        activityScore: 0,\n        overallScore: 0\n    };\n\n    // second user: two users are required for a transaction\n    const buyer: UserAttributes = {\n        userId: 2,\n        admin: true,\n        wallet: 500,\n        userName: 'jacko',\n        password: '$2b$12$XVwWZfAd2fjjd.QjrvMJXOh4WPuxJ4.tpNzkg9wpSSNOShAoDOYWC', // adminPW\n        userMail: 'superAdmin@admins.com',\n        firstName: 'Jack',\n        lastName: 'Hammington',\n        gender: 'male',\n        phoneNumber: 796666666,\n        addressStreet: null,\n        addressPin: null,\n        addressCity: null,\n        addressCountry: 'England',\n        gameScore: 3,\n        activityScore: 0,\n        overallScore: 0\n    };\n\n    const product1: ProductAttributes = {\n        productId : 1,\n        productName: 'Schoggi',\n        productDescription: 'E feini Schoggi us Guetemala.',\n        productPrice: 10,\n        productCategory: 'food',\n        productLocation: null,\n        productDelivery: true,\n        uploadDate: new Date(Date.now()),\n        sellDate: null,\n        isApproved: true,\n        isService: false,\n        isRentable: false,\n        isAvailable: true,\n        userId: 1,\n        buyerId: null\n    };\n    const product2: ProductAttributes = {\n        productId : 2,\n        productName: 'Formaggio',\n        productDescription: 'Un buono formaggio di Ticino.',\n        productPrice: 30,\n        productCategory: 'food',\n        productLocation: null,\n        productDelivery: true,\n        uploadDate: new Date(Date.now()),\n        sellDate: null,\n        isApproved: false,\n        isService: false,\n        isRentable: false,\n        isAvailable: false,\n        userId: 1,\n        buyerId: null\n    };\n\n    const transaction1: TransactionAttributes = {\n        transactionId: 1,\n        productId: 1,\n        userId: 1,\n        buyerId: 2,   \n        transactionStatus: 1,\n        deliveryFirstName: null, \n        deliveryLastName: null,\n        deliveryStreet: null, \n        deliveryPin: null,\n        deliveryCity: null,\n        deliveryCountry: null\n    }\n\n    const transaction2: TransactionAttributes = {\n        transactionId: 2,\n        productId: 2,\n        userId: 2,\n        buyerId: 1,   \n        transactionStatus: 2,\n        deliveryFirstName: null, \n        deliveryLastName: null,\n        deliveryStreet: null, \n        deliveryPin: null,\n        deliveryCity: null,\n        deliveryCountry: null\n    }\n\n    const transaction3: TransactionAttributes = {\n        transactionId: 3,\n        productId: 2,\n        userId: 2,\n        buyerId: 1,   \n        transactionStatus: 1,\n        deliveryFirstName: null, \n        deliveryLastName: null,\n        deliveryStreet: null, \n        deliveryPin: null,\n        deliveryCity: null,\n        deliveryCountry: null\n    }\n\n    before('add users and product to db', function(done) { // applicationPromise value must be assigned to app!!!\n        User.create(seller).then(() => {\n            User.create(buyer);\n        }).then(() => {\n            Product.create(product1);\n        }).then(() => {\n            done();\n        });\n    });\n    describe('Test startTransaction()', () => { \n        it('should successfully initialize a transaction', function(done) { \n            testedTransactionService.startTransaction(transaction1).then(transaction => {\n                expect(transaction.transactionId).to.be.eq(1);\n                expect(transaction.transactionStatus).to.be.eq(1);\n                expect(transaction.userId).to.be.eq(1);\n                expect(transaction.buyerId).to.be.eq(2);\n                Transaction.findOne({\n                    where: {\n                        transactionId: 1\n                    }\n                }).then(foundTransaction => {\n                    expect(foundTransaction).not.to.be.eq(null);\n                    done();\n                });   \n            });\n        });\n        it('should update the product to buy successfully', function(done) {                 \n            Product.findOne({\n                where: {\n                    productId: 1,\n                    isAvailable: false,\n                }\n            }).then(foundProduct => {\n                expect(foundProduct).not.to.be.eq(null);\n                done();\n            });\n        });\n        it('should not initialize a faulty transaction', function(done) { \n            testedTransactionService.startTransaction(null).catch(err => {\n                expect(err).not.to.be.eq(null);\n                done();  \n            });\n        });\n    });\n    describe('Test getting Transactions', () => {\n        before('add additional transaction to db', function(done) {\n            Product.create(product2);\n            Transaction.create(transaction2).then(() => {\n                done();\n            });\n        });\n        it('should get all transactions of buyer', function(done) {\n            testedTransactionService.getAllTransactionsOfBuyer(1).then(transaction => {\n                expect(transaction[0].transactionId).to.be.eq(2);\n                expect(transaction[0].productId).to.be.eq(2);\n                expect(transaction[0].buyerId).to.be.eq(1);\n                expect(transaction[0].userId).to.be.eq(2);\n                expect(transaction[0].product.productName).to.be.eq('Formaggio');\n                expect(transaction[0].seller.userName).to.be.eq('jacko');\n                expect(transaction[0].seller.userId).to.be.eq(2);\n                expect(transaction[0].buyer.userName).to.be.eq('shello');\n                expect(transaction[0].buyer.userId).to.be.eq(1);\n            }).then(() =>{\n                done();\n            });\n        });\n        it('should get all transactions of seller', function(done) {\n            testedTransactionService.getAllTransactionsOfSeller(2).then(transaction => {\n                expect(transaction[0].transactionId).to.be.eq(2);\n                expect(transaction[0].productId).to.be.eq(2);\n                expect(transaction[0].buyerId).to.be.eq(1);\n                expect(transaction[0].userId).to.be.eq(2);\n                expect(transaction[0].product.productName).to.be.eq('Formaggio');\n                expect(transaction[0].seller.userName).to.be.eq('jacko');\n                expect(transaction[0].seller.userId).to.be.eq(2);\n                expect(transaction[0].buyer.userName).to.be.eq('shello');\n                expect(transaction[0].buyer.userId).to.be.eq(1);\n            }).then(() =>{\n                done();\n            });\n        });\n        it('should get all transactions of buyer with status', function(done) {\n            testedTransactionService.getTransactionsOfBuyer(1, 2).then(transaction => {\n                expect(transaction[0].transactionId).to.be.eq(2);\n                expect(transaction[0].productId).to.be.eq(2);\n                expect(transaction[0].buyerId).to.be.eq(1);\n                expect(transaction[0].userId).to.be.eq(2);\n                expect(transaction[0].product.productName).to.be.eq('Formaggio');\n                expect(transaction[0].seller.userName).to.be.eq('jacko');\n                expect(transaction[0].seller.userId).to.be.eq(2);\n                expect(transaction[0].buyer.userName).to.be.eq('shello');\n                expect(transaction[0].buyer.userId).to.be.eq(1);\n            }).then(() =>{\n                done();\n            });\n        });\n        it('should get all transactions of seller with status', function(done) {\n            testedTransactionService.getTransactionsOfSeller(1, 1).then(transaction => {\n                expect(transaction[0].transactionId).to.be.eq(1);\n                expect(transaction[0].productId).to.be.eq(1);\n                expect(transaction[0].buyerId).to.be.eq(2);\n                expect(transaction[0].userId).to.be.eq(1);\n                expect(transaction[0].product.productName).to.be.eq('Schoggi');\n                expect(transaction[0].seller.userName).to.be.eq('shello');\n                expect(transaction[0].seller.userId).to.be.eq(1);\n                expect(transaction[0].buyer.userName).to.be.eq('jacko');\n                expect(transaction[0].buyer.userId).to.be.eq(2);\n            }).then(() =>{\n                done();\n            });\n        });\n    });\n    describe('Test confirm Transaction', () => {      \n        it('should successfully confirm and execute the transaction', function(done) {\n            testedTransactionService.confirmTransaction(1).then(transaction => {\n                expect(transaction.transactionId).to.be.eq(1);\n                expect(transaction.transactionStatus).to.be.eq(2);\n                expect(transaction.userId).to.be.eq(1);\n                expect(transaction.buyerId).to.be.eq(2);\n                expect(transaction.productId).to.be.eq(1);\n                done();\n            });\n        });\n        it('should update the bought product successfully', function(done) {\n            Product.findOne({\n                where: {\n                    productId: 1,\n                    isAvailable: false,\n                    buyerId: 2\n                }\n            }).then(foundProduct => {\n                expect(foundProduct).not.to.be.eq(null);\n                done();\n            });\n        });\n        it('should update the buyer\\' s wallet successfully', function(done) {\n            User.findOne({\n                where: {\n                    userId: 2,\n                    wallet: 490\n                }\n            }).then(foundUser => {\n                expect(foundUser).not.to.be.eq(null);\n                done();\n            });\n        });\n        it('should update the buyer\\' s activity score successfully', function(done) {\n            User.findOne({\n                where: {\n                    userId: 2,\n                    activityScore: 1 \n                }\n            }).then(foundUser => {\n                expect(foundUser).not.to.be.eq(null);\n                done();\n            });\n        });\n        it('should update the buyer\\' s overall score successfully', function(done) {\n            User.findOne({\n                where: {\n                    userId: 2,\n                    overallScore: 4 \n                }\n            }).then(foundUser => {\n                expect(foundUser).not.to.be.eq(null);\n                done();\n            });\n        });\n        it('should update the seller\\'s wallet successfully', function(done) {\n            User.findOne({\n                where: {\n                    userId: 1,\n                    wallet: 510\n                }\n            }).then(foundUser => {\n                expect(foundUser).not.to.be.eq(null);\n                done();\n            });\n        });\n        it('should update the seller\\'s activity score successfully', function(done) {\n            User.findOne({\n                where: {\n                    userId: 1,\n                    activityScore: 2\n                }\n            }).then(foundUser => {\n                expect(foundUser).not.to.be.eq(null);\n                done();\n            });\n        });\n        it('should update the seller\\'s overall score successfully', function(done) {\n            User.findOne({\n                where: {\n                    userId: 1,\n                    overallScore: 5\n                }\n            }).then(foundUser => {\n                expect(foundUser).not.to.be.eq(null);\n                done();\n            });\n        });\n        it('should not confirm a transaction if buyer does not have enough money', function(done) {        \n            User.findByPk(2).then((foundUser) => {\n                foundUser.update({\n                    wallet: 9\n                })\n            }).then(() => {\n                testedTransactionService.confirmTransaction(1).catch(error => {\n                    expect(error.message).to.be.eq('Not enough money available to buy the product!');\n                    done();\n                });\n            });\n        });\n        it('should not confirm a non-existent transaction', function(done) { \n            testedTransactionService.confirmTransaction(11).catch(err => {\n                expect(err).not.to.be.eq(null);\n                expect(err.message).to.be.eq('Transaction not found!');\n                done();  \n            });\n        });\n    });\n    describe('Test declineTransaction()', () => { \n        before('add additional transaction to db', function(done) {\n            Transaction.create(transaction3).then(() => {\n                done();\n            });\n        });\n        it('should successfully decline a transaction', function(done) { \n            testedTransactionService.declineTransaction(3).then(transaction => {\n                expect(transaction.transactionId).to.be.eq(3);\n                expect(transaction.transactionStatus).to.be.eq(3);\n                expect(transaction.userId).to.be.eq(2);\n                expect(transaction.buyerId).to.be.eq(1);\n                Transaction.findOne({\n                    where: {\n                        transactionId: 3\n                    }\n                }).then(foundTransaction => {\n                    expect(foundTransaction).not.to.be.eq(null);\n                    done();\n                });   \n            });\n        });\n        it('should update the product to buy successfully', function(done) {                 \n            Product.findOne({\n                where: {\n                    productId: 2,\n                    isAvailable: true,\n                }\n            }).then(foundProduct => {\n                expect(foundProduct).not.to.be.eq(null);\n                done();\n            });\n        });\n        it('should not decline a non-existent transaction', function(done) { \n            testedTransactionService.declineTransaction(11).catch(err => {\n                expect(err).not.to.be.eq(null);\n                expect(err.message).to.be.eq('Transaction not found!');\n                done();  \n            });\n        });\n    });\n    after('clean up', function() {\n        User.destroy({\n            truncate: true,\n            restartIdentity: true\n        })\n        .then(() => {\n            Product.destroy({\n                truncate: true,\n                restartIdentity: true\n            })\n        })\n        .then(() => {        \n            Promise.resolve();\n        });\n\n    });   \n});"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"94ef749e62c558ad475ff11fd559711d8ed67399","contentHash":"0930501ff3190be75ed5b2c8096d473af5179298ac7ef94042e9d7583989a86c"},"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/user.service.spec.ts":{"path":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/user.service.spec.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":23},"end":{"line":3,"column":63}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":57}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":30}},"4":{"start":{"line":6,"column":0},"end":{"line":406,"column":3}},"5":{"start":{"line":7,"column":30},"end":{"line":7,"column":62}},"6":{"start":{"line":8,"column":18},"end":{"line":26,"column":5}},"7":{"start":{"line":27,"column":4},"end":{"line":118,"column":7}},"8":{"start":{"line":28,"column":8},"end":{"line":42,"column":11}},"9":{"start":{"line":29,"column":12},"end":{"line":41,"column":15}},"10":{"start":{"line":30,"column":16},"end":{"line":30,"column":63}},"11":{"start":{"line":31,"column":16},"end":{"line":31,"column":68}},"12":{"start":{"line":32,"column":16},"end":{"line":40,"column":19}},"13":{"start":{"line":37,"column":20},"end":{"line":37,"column":64}},"14":{"start":{"line":38,"column":20},"end":{"line":38,"column":79}},"15":{"start":{"line":39,"column":20},"end":{"line":39,"column":27}},"16":{"start":{"line":43,"column":8},"end":{"line":67,"column":11}},"17":{"start":{"line":44,"column":26},"end":{"line":62,"column":13}},"18":{"start":{"line":63,"column":12},"end":{"line":66,"column":15}},"19":{"start":{"line":64,"column":16},"end":{"line":64,"column":111}},"20":{"start":{"line":65,"column":16},"end":{"line":65,"column":23}},"21":{"start":{"line":68,"column":8},"end":{"line":92,"column":11}},"22":{"start":{"line":69,"column":26},"end":{"line":87,"column":13}},"23":{"start":{"line":88,"column":12},"end":{"line":91,"column":15}},"24":{"start":{"line":89,"column":16},"end":{"line":89,"column":111}},"25":{"start":{"line":90,"column":16},"end":{"line":90,"column":23}},"26":{"start":{"line":93,"column":8},"end":{"line":117,"column":11}},"27":{"start":{"line":94,"column":26},"end":{"line":112,"column":13}},"28":{"start":{"line":113,"column":12},"end":{"line":116,"column":15}},"29":{"start":{"line":114,"column":16},"end":{"line":114,"column":56}},"30":{"start":{"line":115,"column":16},"end":{"line":115,"column":23}},"31":{"start":{"line":119,"column":4},"end":{"line":159,"column":7}},"32":{"start":{"line":120,"column":8},"end":{"line":129,"column":11}},"33":{"start":{"line":121,"column":12},"end":{"line":128,"column":15}},"34":{"start":{"line":125,"column":16},"end":{"line":125,"column":66}},"35":{"start":{"line":126,"column":16},"end":{"line":126,"column":65}},"36":{"start":{"line":127,"column":16},"end":{"line":127,"column":23}},"37":{"start":{"line":130,"column":8},"end":{"line":139,"column":11}},"38":{"start":{"line":131,"column":12},"end":{"line":138,"column":15}},"39":{"start":{"line":135,"column":16},"end":{"line":135,"column":66}},"40":{"start":{"line":136,"column":16},"end":{"line":136,"column":65}},"41":{"start":{"line":137,"column":16},"end":{"line":137,"column":23}},"42":{"start":{"line":140,"column":8},"end":{"line":149,"column":11}},"43":{"start":{"line":141,"column":12},"end":{"line":148,"column":15}},"44":{"start":{"line":145,"column":16},"end":{"line":145,"column":63}},"45":{"start":{"line":146,"column":16},"end":{"line":146,"column":72}},"46":{"start":{"line":147,"column":16},"end":{"line":147,"column":23}},"47":{"start":{"line":150,"column":8},"end":{"line":158,"column":11}},"48":{"start":{"line":151,"column":12},"end":{"line":157,"column":15}},"49":{"start":{"line":155,"column":16},"end":{"line":155,"column":63}},"50":{"start":{"line":156,"column":16},"end":{"line":156,"column":23}},"51":{"start":{"line":160,"column":4},"end":{"line":168,"column":7}},"52":{"start":{"line":161,"column":8},"end":{"line":167,"column":11}},"53":{"start":{"line":162,"column":12},"end":{"line":166,"column":15}},"54":{"start":{"line":163,"column":16},"end":{"line":163,"column":57}},"55":{"start":{"line":164,"column":16},"end":{"line":164,"column":71}},"56":{"start":{"line":165,"column":16},"end":{"line":165,"column":23}},"57":{"start":{"line":169,"column":4},"end":{"line":185,"column":7}},"58":{"start":{"line":170,"column":8},"end":{"line":178,"column":11}},"59":{"start":{"line":171,"column":12},"end":{"line":177,"column":15}},"60":{"start":{"line":172,"column":16},"end":{"line":172,"column":50}},"61":{"start":{"line":173,"column":16},"end":{"line":176,"column":19}},"62":{"start":{"line":174,"column":20},"end":{"line":174,"column":61}},"63":{"start":{"line":175,"column":20},"end":{"line":175,"column":27}},"64":{"start":{"line":179,"column":8},"end":{"line":184,"column":11}},"65":{"start":{"line":180,"column":12},"end":{"line":183,"column":15}},"66":{"start":{"line":181,"column":16},"end":{"line":181,"column":50}},"67":{"start":{"line":182,"column":16},"end":{"line":182,"column":23}},"68":{"start":{"line":186,"column":4},"end":{"line":219,"column":7}},"69":{"start":{"line":187,"column":8},"end":{"line":191,"column":11}},"70":{"start":{"line":188,"column":12},"end":{"line":190,"column":15}},"71":{"start":{"line":189,"column":16},"end":{"line":189,"column":23}},"72":{"start":{"line":192,"column":8},"end":{"line":211,"column":11}},"73":{"start":{"line":193,"column":12},"end":{"line":210,"column":15}},"74":{"start":{"line":198,"column":16},"end":{"line":198,"column":58}},"75":{"start":{"line":199,"column":16},"end":{"line":209,"column":19}},"76":{"start":{"line":200,"column":20},"end":{"line":200,"column":68}},"77":{"start":{"line":201,"column":20},"end":{"line":208,"column":23}},"78":{"start":{"line":206,"column":24},"end":{"line":206,"column":70}},"79":{"start":{"line":207,"column":24},"end":{"line":207,"column":31}},"80":{"start":{"line":212,"column":8},"end":{"line":218,"column":11}},"81":{"start":{"line":213,"column":12},"end":{"line":217,"column":15}},"82":{"start":{"line":214,"column":16},"end":{"line":214,"column":54}},"83":{"start":{"line":215,"column":16},"end":{"line":215,"column":63}},"84":{"start":{"line":216,"column":16},"end":{"line":216,"column":23}},"85":{"start":{"line":220,"column":4},"end":{"line":234,"column":7}},"86":{"start":{"line":221,"column":8},"end":{"line":227,"column":11}},"87":{"start":{"line":222,"column":12},"end":{"line":226,"column":15}},"88":{"start":{"line":223,"column":16},"end":{"line":223,"column":55}},"89":{"start":{"line":224,"column":16},"end":{"line":224,"column":63}},"90":{"start":{"line":225,"column":16},"end":{"line":225,"column":23}},"91":{"start":{"line":228,"column":8},"end":{"line":233,"column":11}},"92":{"start":{"line":229,"column":12},"end":{"line":232,"column":15}},"93":{"start":{"line":230,"column":16},"end":{"line":230,"column":71}},"94":{"start":{"line":231,"column":16},"end":{"line":231,"column":23}},"95":{"start":{"line":235,"column":4},"end":{"line":296,"column":7}},"96":{"start":{"line":236,"column":8},"end":{"line":257,"column":11}},"97":{"start":{"line":237,"column":12},"end":{"line":256,"column":15}},"98":{"start":{"line":250,"column":16},"end":{"line":250,"column":78}},"99":{"start":{"line":251,"column":16},"end":{"line":255,"column":19}},"100":{"start":{"line":252,"column":20},"end":{"line":252,"column":87}},"101":{"start":{"line":253,"column":20},"end":{"line":253,"column":76}},"102":{"start":{"line":254,"column":20},"end":{"line":254,"column":27}},"103":{"start":{"line":258,"column":8},"end":{"line":276,"column":11}},"104":{"start":{"line":259,"column":12},"end":{"line":275,"column":15}},"105":{"start":{"line":272,"column":16},"end":{"line":272,"column":54}},"106":{"start":{"line":273,"column":16},"end":{"line":273,"column":63}},"107":{"start":{"line":274,"column":16},"end":{"line":274,"column":23}},"108":{"start":{"line":277,"column":8},"end":{"line":295,"column":11}},"109":{"start":{"line":278,"column":12},"end":{"line":294,"column":15}},"110":{"start":{"line":291,"column":16},"end":{"line":291,"column":54}},"111":{"start":{"line":292,"column":16},"end":{"line":292,"column":63}},"112":{"start":{"line":293,"column":16},"end":{"line":293,"column":23}},"113":{"start":{"line":297,"column":4},"end":{"line":320,"column":7}},"114":{"start":{"line":298,"column":8},"end":{"line":298,"column":28}},"115":{"start":{"line":299,"column":8},"end":{"line":308,"column":11}},"116":{"start":{"line":300,"column":12},"end":{"line":307,"column":15}},"117":{"start":{"line":301,"column":16},"end":{"line":301,"column":84}},"118":{"start":{"line":302,"column":16},"end":{"line":302,"column":23}},"119":{"start":{"line":304,"column":16},"end":{"line":304,"column":33}},"120":{"start":{"line":305,"column":16},"end":{"line":305,"column":52}},"121":{"start":{"line":306,"column":16},"end":{"line":306,"column":23}},"122":{"start":{"line":309,"column":8},"end":{"line":319,"column":11}},"123":{"start":{"line":310,"column":12},"end":{"line":318,"column":15}},"124":{"start":{"line":311,"column":16},"end":{"line":311,"column":34}},"125":{"start":{"line":312,"column":16},"end":{"line":312,"column":52}},"126":{"start":{"line":313,"column":16},"end":{"line":313,"column":23}},"127":{"start":{"line":315,"column":16},"end":{"line":315,"column":54}},"128":{"start":{"line":316,"column":16},"end":{"line":316,"column":63}},"129":{"start":{"line":317,"column":16},"end":{"line":317,"column":23}},"130":{"start":{"line":321,"column":4},"end":{"line":345,"column":7}},"131":{"start":{"line":322,"column":8},"end":{"line":334,"column":11}},"132":{"start":{"line":323,"column":12},"end":{"line":333,"column":15}},"133":{"start":{"line":324,"column":16},"end":{"line":332,"column":19}},"134":{"start":{"line":329,"column":20},"end":{"line":329,"column":126}},"135":{"start":{"line":330,"column":20},"end":{"line":330,"column":70}},"136":{"start":{"line":331,"column":20},"end":{"line":331,"column":27}},"137":{"start":{"line":335,"column":8},"end":{"line":344,"column":11}},"138":{"start":{"line":336,"column":12},"end":{"line":343,"column":15}},"139":{"start":{"line":337,"column":16},"end":{"line":337,"column":52}},"140":{"start":{"line":338,"column":16},"end":{"line":338,"column":23}},"141":{"start":{"line":340,"column":16},"end":{"line":340,"column":54}},"142":{"start":{"line":341,"column":16},"end":{"line":341,"column":63}},"143":{"start":{"line":342,"column":16},"end":{"line":342,"column":23}},"144":{"start":{"line":346,"column":4},"end":{"line":357,"column":7}},"145":{"start":{"line":347,"column":8},"end":{"line":356,"column":11}},"146":{"start":{"line":348,"column":12},"end":{"line":355,"column":15}},"147":{"start":{"line":349,"column":16},"end":{"line":354,"column":19}},"148":{"start":{"line":350,"column":20},"end":{"line":350,"column":59}},"149":{"start":{"line":351,"column":20},"end":{"line":351,"column":62}},"150":{"start":{"line":352,"column":20},"end":{"line":352,"column":66}},"151":{"start":{"line":353,"column":20},"end":{"line":353,"column":27}},"152":{"start":{"line":358,"column":4},"end":{"line":393,"column":7}},"153":{"start":{"line":359,"column":8},"end":{"line":383,"column":11}},"154":{"start":{"line":360,"column":26},"end":{"line":378,"column":13}},"155":{"start":{"line":379,"column":12},"end":{"line":382,"column":15}},"156":{"start":{"line":380,"column":16},"end":{"line":380,"column":55}},"157":{"start":{"line":381,"column":16},"end":{"line":381,"column":23}},"158":{"start":{"line":384,"column":8},"end":{"line":392,"column":11}},"159":{"start":{"line":385,"column":12},"end":{"line":391,"column":15}},"160":{"start":{"line":386,"column":16},"end":{"line":386,"column":59}},"161":{"start":{"line":387,"column":16},"end":{"line":387,"column":67}},"162":{"start":{"line":388,"column":16},"end":{"line":388,"column":62}},"163":{"start":{"line":389,"column":16},"end":{"line":389,"column":59}},"164":{"start":{"line":390,"column":16},"end":{"line":390,"column":23}},"165":{"start":{"line":394,"column":4},"end":{"line":405,"column":7}},"166":{"start":{"line":395,"column":8},"end":{"line":404,"column":11}},"167":{"start":{"line":396,"column":12},"end":{"line":403,"column":15}},"168":{"start":{"line":397,"column":16},"end":{"line":397,"column":59}},"169":{"start":{"line":398,"column":16},"end":{"line":398,"column":67}},"170":{"start":{"line":399,"column":16},"end":{"line":399,"column":65}},"171":{"start":{"line":400,"column":16},"end":{"line":400,"column":59}},"172":{"start":{"line":401,"column":16},"end":{"line":401,"column":66}},"173":{"start":{"line":402,"column":16},"end":{"line":402,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":30},"end":{"line":6,"column":31}},"loc":{"start":{"line":6,"column":36},"end":{"line":406,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":30},"end":{"line":27,"column":31}},"loc":{"start":{"line":27,"column":36},"end":{"line":118,"column":5}},"line":27},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":48},"end":{"line":28,"column":49}},"loc":{"start":{"line":28,"column":64},"end":{"line":42,"column":9}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":51},"end":{"line":29,"column":52}},"loc":{"start":{"line":29,"column":59},"end":{"line":41,"column":13}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":24},"end":{"line":36,"column":25}},"loc":{"start":{"line":36,"column":37},"end":{"line":40,"column":17}},"line":36},"5":{"name":"(anonymous_5)","decl":{"start":{"line":43,"column":62},"end":{"line":43,"column":63}},"loc":{"start":{"line":43,"column":78},"end":{"line":67,"column":9}},"line":43},"6":{"name":"(anonymous_6)","decl":{"start":{"line":63,"column":52},"end":{"line":63,"column":53}},"loc":{"start":{"line":63,"column":61},"end":{"line":66,"column":13}},"line":63},"7":{"name":"(anonymous_7)","decl":{"start":{"line":68,"column":59},"end":{"line":68,"column":60}},"loc":{"start":{"line":68,"column":75},"end":{"line":92,"column":9}},"line":68},"8":{"name":"(anonymous_8)","decl":{"start":{"line":88,"column":52},"end":{"line":88,"column":53}},"loc":{"start":{"line":88,"column":61},"end":{"line":91,"column":13}},"line":88},"9":{"name":"(anonymous_9)","decl":{"start":{"line":93,"column":46},"end":{"line":93,"column":47}},"loc":{"start":{"line":93,"column":62},"end":{"line":117,"column":9}},"line":93},"10":{"name":"(anonymous_10)","decl":{"start":{"line":113,"column":52},"end":{"line":113,"column":53}},"loc":{"start":{"line":113,"column":61},"end":{"line":116,"column":13}},"line":113},"11":{"name":"(anonymous_11)","decl":{"start":{"line":119,"column":27},"end":{"line":119,"column":28}},"loc":{"start":{"line":119,"column":33},"end":{"line":159,"column":5}},"line":119},"12":{"name":"(anonymous_12)","decl":{"start":{"line":120,"column":40},"end":{"line":120,"column":41}},"loc":{"start":{"line":120,"column":56},"end":{"line":129,"column":9}},"line":120},"13":{"name":"(anonymous_13)","decl":{"start":{"line":124,"column":20},"end":{"line":124,"column":21}},"loc":{"start":{"line":124,"column":32},"end":{"line":128,"column":13}},"line":124},"14":{"name":"(anonymous_14)","decl":{"start":{"line":130,"column":54},"end":{"line":130,"column":55}},"loc":{"start":{"line":130,"column":70},"end":{"line":139,"column":9}},"line":130},"15":{"name":"(anonymous_15)","decl":{"start":{"line":134,"column":20},"end":{"line":134,"column":21}},"loc":{"start":{"line":134,"column":32},"end":{"line":138,"column":13}},"line":134},"16":{"name":"(anonymous_16)","decl":{"start":{"line":140,"column":51},"end":{"line":140,"column":52}},"loc":{"start":{"line":140,"column":67},"end":{"line":149,"column":9}},"line":140},"17":{"name":"(anonymous_17)","decl":{"start":{"line":144,"column":21},"end":{"line":144,"column":22}},"loc":{"start":{"line":144,"column":28},"end":{"line":148,"column":13}},"line":144},"18":{"name":"(anonymous_18)","decl":{"start":{"line":150,"column":51},"end":{"line":150,"column":52}},"loc":{"start":{"line":150,"column":67},"end":{"line":158,"column":9}},"line":150},"19":{"name":"(anonymous_19)","decl":{"start":{"line":154,"column":21},"end":{"line":154,"column":22}},"loc":{"start":{"line":154,"column":28},"end":{"line":157,"column":13}},"line":154},"20":{"name":"(anonymous_20)","decl":{"start":{"line":160,"column":28},"end":{"line":160,"column":29}},"loc":{"start":{"line":160,"column":34},"end":{"line":168,"column":5}},"line":160},"21":{"name":"(anonymous_21)","decl":{"start":{"line":161,"column":36},"end":{"line":161,"column":37}},"loc":{"start":{"line":161,"column":52},"end":{"line":167,"column":9}},"line":161},"22":{"name":"(anonymous_22)","decl":{"start":{"line":162,"column":44},"end":{"line":162,"column":45}},"loc":{"start":{"line":162,"column":54},"end":{"line":166,"column":13}},"line":162},"23":{"name":"(anonymous_23)","decl":{"start":{"line":169,"column":32},"end":{"line":169,"column":33}},"loc":{"start":{"line":169,"column":38},"end":{"line":185,"column":5}},"line":169},"24":{"name":"(anonymous_24)","decl":{"start":{"line":170,"column":48},"end":{"line":170,"column":49}},"loc":{"start":{"line":170,"column":64},"end":{"line":178,"column":9}},"line":170},"25":{"name":"(anonymous_25)","decl":{"start":{"line":171,"column":49},"end":{"line":171,"column":50}},"loc":{"start":{"line":171,"column":59},"end":{"line":177,"column":13}},"line":171},"26":{"name":"(anonymous_26)","decl":{"start":{"line":173,"column":49},"end":{"line":173,"column":50}},"loc":{"start":{"line":173,"column":59},"end":{"line":176,"column":17}},"line":173},"27":{"name":"(anonymous_27)","decl":{"start":{"line":179,"column":53},"end":{"line":179,"column":54}},"loc":{"start":{"line":179,"column":69},"end":{"line":184,"column":9}},"line":179},"28":{"name":"(anonymous_28)","decl":{"start":{"line":180,"column":49},"end":{"line":180,"column":50}},"loc":{"start":{"line":180,"column":59},"end":{"line":183,"column":13}},"line":180},"29":{"name":"(anonymous_29)","decl":{"start":{"line":186,"column":35},"end":{"line":186,"column":36}},"loc":{"start":{"line":186,"column":41},"end":{"line":219,"column":5}},"line":186},"30":{"name":"(anonymous_30)","decl":{"start":{"line":187,"column":33},"end":{"line":187,"column":34}},"loc":{"start":{"line":187,"column":49},"end":{"line":191,"column":9}},"line":187},"31":{"name":"(anonymous_31)","decl":{"start":{"line":188,"column":49},"end":{"line":188,"column":50}},"loc":{"start":{"line":188,"column":55},"end":{"line":190,"column":13}},"line":188},"32":{"name":"(anonymous_32)","decl":{"start":{"line":192,"column":60},"end":{"line":192,"column":61}},"loc":{"start":{"line":192,"column":76},"end":{"line":211,"column":9}},"line":192},"33":{"name":"(anonymous_33)","decl":{"start":{"line":197,"column":20},"end":{"line":197,"column":21}},"loc":{"start":{"line":197,"column":28},"end":{"line":210,"column":13}},"line":197},"34":{"name":"(anonymous_34)","decl":{"start":{"line":199,"column":56},"end":{"line":199,"column":57}},"loc":{"start":{"line":199,"column":71},"end":{"line":209,"column":17}},"line":199},"35":{"name":"(anonymous_35)","decl":{"start":{"line":205,"column":28},"end":{"line":205,"column":29}},"loc":{"start":{"line":205,"column":41},"end":{"line":208,"column":21}},"line":205},"36":{"name":"(anonymous_36)","decl":{"start":{"line":212,"column":88},"end":{"line":212,"column":89}},"loc":{"start":{"line":212,"column":104},"end":{"line":218,"column":9}},"line":212},"37":{"name":"(anonymous_37)","decl":{"start":{"line":213,"column":53},"end":{"line":213,"column":54}},"loc":{"start":{"line":213,"column":60},"end":{"line":217,"column":13}},"line":213},"38":{"name":"(anonymous_38)","decl":{"start":{"line":220,"column":35},"end":{"line":220,"column":36}},"loc":{"start":{"line":220,"column":41},"end":{"line":234,"column":5}},"line":220},"39":{"name":"(anonymous_39)","decl":{"start":{"line":221,"column":45},"end":{"line":221,"column":46}},"loc":{"start":{"line":221,"column":61},"end":{"line":227,"column":9}},"line":221},"40":{"name":"(anonymous_40)","decl":{"start":{"line":222,"column":52},"end":{"line":222,"column":53}},"loc":{"start":{"line":222,"column":60},"end":{"line":226,"column":13}},"line":222},"41":{"name":"(anonymous_41)","decl":{"start":{"line":228,"column":56},"end":{"line":228,"column":57}},"loc":{"start":{"line":228,"column":72},"end":{"line":233,"column":9}},"line":228},"42":{"name":"(anonymous_42)","decl":{"start":{"line":229,"column":57},"end":{"line":229,"column":58}},"loc":{"start":{"line":229,"column":64},"end":{"line":232,"column":13}},"line":229},"43":{"name":"(anonymous_43)","decl":{"start":{"line":235,"column":32},"end":{"line":235,"column":33}},"loc":{"start":{"line":235,"column":38},"end":{"line":296,"column":5}},"line":235},"44":{"name":"(anonymous_44)","decl":{"start":{"line":236,"column":52},"end":{"line":236,"column":53}},"loc":{"start":{"line":236,"column":68},"end":{"line":257,"column":9}},"line":236},"45":{"name":"(anonymous_45)","decl":{"start":{"line":249,"column":20},"end":{"line":249,"column":21}},"loc":{"start":{"line":249,"column":28},"end":{"line":256,"column":13}},"line":249},"46":{"name":"(anonymous_46)","decl":{"start":{"line":251,"column":51},"end":{"line":251,"column":52}},"loc":{"start":{"line":251,"column":64},"end":{"line":255,"column":17}},"line":251},"47":{"name":"(anonymous_47)","decl":{"start":{"line":258,"column":56},"end":{"line":258,"column":57}},"loc":{"start":{"line":258,"column":72},"end":{"line":276,"column":9}},"line":258},"48":{"name":"(anonymous_48)","decl":{"start":{"line":271,"column":21},"end":{"line":271,"column":22}},"loc":{"start":{"line":271,"column":28},"end":{"line":275,"column":13}},"line":271},"49":{"name":"(anonymous_49)","decl":{"start":{"line":277,"column":67},"end":{"line":277,"column":68}},"loc":{"start":{"line":277,"column":83},"end":{"line":295,"column":9}},"line":277},"50":{"name":"(anonymous_50)","decl":{"start":{"line":290,"column":21},"end":{"line":290,"column":22}},"loc":{"start":{"line":290,"column":28},"end":{"line":294,"column":13}},"line":290},"51":{"name":"(anonymous_51)","decl":{"start":{"line":297,"column":44},"end":{"line":297,"column":45}},"loc":{"start":{"line":297,"column":56},"end":{"line":320,"column":5}},"line":297},"52":{"name":"(anonymous_52)","decl":{"start":{"line":299,"column":63},"end":{"line":299,"column":64}},"loc":{"start":{"line":299,"column":79},"end":{"line":308,"column":9}},"line":299},"53":{"name":"(anonymous_53)","decl":{"start":{"line":300,"column":82},"end":{"line":300,"column":83}},"loc":{"start":{"line":300,"column":90},"end":{"line":303,"column":13}},"line":300},"54":{"name":"(anonymous_54)","decl":{"start":{"line":303,"column":21},"end":{"line":303,"column":22}},"loc":{"start":{"line":303,"column":28},"end":{"line":307,"column":13}},"line":303},"55":{"name":"(anonymous_55)","decl":{"start":{"line":309,"column":64},"end":{"line":309,"column":65}},"loc":{"start":{"line":309,"column":80},"end":{"line":319,"column":9}},"line":309},"56":{"name":"(anonymous_56)","decl":{"start":{"line":310,"column":83},"end":{"line":310,"column":84}},"loc":{"start":{"line":310,"column":91},"end":{"line":314,"column":13}},"line":310},"57":{"name":"(anonymous_57)","decl":{"start":{"line":314,"column":21},"end":{"line":314,"column":22}},"loc":{"start":{"line":314,"column":28},"end":{"line":318,"column":13}},"line":314},"58":{"name":"(anonymous_58)","decl":{"start":{"line":321,"column":37},"end":{"line":321,"column":38}},"loc":{"start":{"line":321,"column":43},"end":{"line":345,"column":5}},"line":321},"59":{"name":"(anonymous_59)","decl":{"start":{"line":322,"column":50},"end":{"line":322,"column":51}},"loc":{"start":{"line":322,"column":66},"end":{"line":334,"column":9}},"line":322},"60":{"name":"(anonymous_60)","decl":{"start":{"line":323,"column":68},"end":{"line":323,"column":69}},"loc":{"start":{"line":323,"column":74},"end":{"line":333,"column":13}},"line":323},"61":{"name":"(anonymous_61)","decl":{"start":{"line":328,"column":24},"end":{"line":328,"column":25}},"loc":{"start":{"line":328,"column":32},"end":{"line":332,"column":17}},"line":328},"62":{"name":"(anonymous_62)","decl":{"start":{"line":335,"column":77},"end":{"line":335,"column":78}},"loc":{"start":{"line":335,"column":93},"end":{"line":344,"column":9}},"line":335},"63":{"name":"(anonymous_63)","decl":{"start":{"line":336,"column":79},"end":{"line":336,"column":80}},"loc":{"start":{"line":336,"column":85},"end":{"line":339,"column":13}},"line":336},"64":{"name":"(anonymous_64)","decl":{"start":{"line":339,"column":21},"end":{"line":339,"column":22}},"loc":{"start":{"line":339,"column":28},"end":{"line":343,"column":13}},"line":339},"65":{"name":"(anonymous_65)","decl":{"start":{"line":346,"column":37},"end":{"line":346,"column":38}},"loc":{"start":{"line":346,"column":43},"end":{"line":357,"column":5}},"line":346},"66":{"name":"(anonymous_66)","decl":{"start":{"line":347,"column":68},"end":{"line":347,"column":69}},"loc":{"start":{"line":347,"column":84},"end":{"line":356,"column":9}},"line":347},"67":{"name":"(anonymous_67)","decl":{"start":{"line":348,"column":57},"end":{"line":348,"column":58}},"loc":{"start":{"line":348,"column":63},"end":{"line":355,"column":13}},"line":348},"68":{"name":"(anonymous_68)","decl":{"start":{"line":349,"column":51},"end":{"line":349,"column":52}},"loc":{"start":{"line":349,"column":61},"end":{"line":354,"column":17}},"line":349},"69":{"name":"(anonymous_69)","decl":{"start":{"line":358,"column":38},"end":{"line":358,"column":39}},"loc":{"start":{"line":358,"column":44},"end":{"line":393,"column":5}},"line":358},"70":{"name":"(anonymous_70)","decl":{"start":{"line":359,"column":38},"end":{"line":359,"column":39}},"loc":{"start":{"line":359,"column":54},"end":{"line":383,"column":9}},"line":359},"71":{"name":"(anonymous_71)","decl":{"start":{"line":379,"column":51},"end":{"line":379,"column":52}},"loc":{"start":{"line":379,"column":59},"end":{"line":382,"column":13}},"line":379},"72":{"name":"(anonymous_72)","decl":{"start":{"line":384,"column":55},"end":{"line":384,"column":56}},"loc":{"start":{"line":384,"column":71},"end":{"line":392,"column":9}},"line":384},"73":{"name":"(anonymous_73)","decl":{"start":{"line":385,"column":55},"end":{"line":385,"column":56}},"loc":{"start":{"line":385,"column":66},"end":{"line":391,"column":13}},"line":385},"74":{"name":"(anonymous_74)","decl":{"start":{"line":394,"column":41},"end":{"line":394,"column":42}},"loc":{"start":{"line":394,"column":47},"end":{"line":405,"column":5}},"line":394},"75":{"name":"(anonymous_75)","decl":{"start":{"line":395,"column":68},"end":{"line":395,"column":69}},"loc":{"start":{"line":395,"column":84},"end":{"line":404,"column":9}},"line":395},"76":{"name":"(anonymous_76)","decl":{"start":{"line":396,"column":58},"end":{"line":396,"column":59}},"loc":{"start":{"line":396,"column":69},"end":{"line":403,"column":13}},"line":396}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":0,"120":0,"121":0,"122":1,"123":1,"124":0,"125":0,"126":0,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":0,"140":0,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":0,"55":1,"56":0,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":0,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1},"b":{},"inputSourceMap":{"version":3,"file":"/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/user.service.spec.ts","sources":["/home/tercy/Documents/UniBern/HS20/ESE/ese2020-team9/backend/src/test/services/user.service.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { UserService } from './../../services/user.service';\nimport { User, UserAttributes } from './../../models/user.model';\nimport { expect } from 'chai';\nimport { userInfo } from 'os';\n\ndescribe('UserService Tests', () => {\n\n    const testedUserService: UserService = new UserService();\n\n    const user1: UserAttributes = {\n        userId: 1,\n        admin: false,\n        wallet: 500,\n        userName: 'jacky',\n        password: 'jacky123',\n        userMail: 'jacky@gmail.com',\n        firstName: 'Jack',\n        lastName: 'Doe',\n        gender: 'male',\n        phoneNumber: 768927361,\n        addressStreet: 'Pinnacle Street',\n        addressPin: '77889',\n        addressCity: 'Hannington Town',\n        addressCountry: 'Saint Isles',\n        gameScore: 1,\n        activityScore: 2,\n        overallScore: 2\n    };\n\n    describe('Test register', () => {\n        it('should register user successfully', function(done) {\n            testedUserService.register(user1).then(user => {\n                expect(user.userName).to.be.eq('jacky');\n                expect(user.phoneNumber).to.be.eq(768927361);\n                User.findOne({\n                    where: {\n                        userName: 'jacky'\n                    }\n                }).then(foundUser => {\n                    expect(foundUser).not.to.be.eq(null);\n                    expect(foundUser.password).not.to.be.eq('jacky123'); // password must not be stored as plaintext in db\n                    done();\n                });\n            });\n        });\n        it('should not register user with existing userName', function(done) {\n            const user2: UserAttributes = {\n                userId: 2,\n                admin: false,\n                wallet: 500,\n                userName: 'jacky',\n                password: 'j1234',\n                userMail: 'he@me.com',\n                firstName: 'Brent',\n                lastName: 'Eastwood',\n                gender: 'male',\n                phoneNumber: 7655555,\n                addressStreet: 'Kensington Road',\n                addressPin: '4404',\n                addressCity: 'Creed Town',\n                addressCountry: 'Mercy Islands',\n                gameScore: 0,\n                activityScore: 0,\n                overallScore: 0\n            };\n            testedUserService.register(user2).catch(error => {\n                expect(error.message).to.be.eq('This username or email address is already being used!');\n                done();\n            });\n        });\n        it('should not register user with existing email', function(done) {\n            const user2: UserAttributes = {\n                userId: 2,\n                admin: false,\n                wallet: 500,\n                userName: 'brent',\n                password: 'j1234',\n                userMail: 'jacky@gmail.com',\n                firstName: 'Brent',\n                lastName: 'Eastwood',\n                gender: 'male',\n                phoneNumber: 7655555,\n                addressStreet: 'Kensington Road',\n                addressPin: '4404',\n                addressCity: 'Creed Town',\n                addressCountry: 'Mercy Islands',\n                gameScore: 0,\n                activityScore: 0,\n                overallScore: 0\n            };\n            testedUserService.register(user2).catch(error => {\n                expect(error.message).to.be.eq('This username or email address is already being used!');\n                done();\n            });\n        });\n        it('should not register faulty user', function(done) {\n            const user2: UserAttributes = {\n                userId: null,\n                admin: null,\n                wallet: null,\n                userName: null,\n                password: '1234',\n                userMail: 'he@me.com',\n                firstName: null,\n                lastName: null,\n                gender: null,\n                phoneNumber: null,\n                addressStreet: null,\n                addressPin: null,\n                addressCity: null,\n                addressCountry: null,\n                gameScore: 0,\n                activityScore: 0,\n                overallScore: 0\n            };\n            testedUserService.register(user2).catch(error => {\n                expect(error).not.to.be.eq(null);\n                done();\n            });\n        });\n    });\n    describe('Test login', () => {\n        it('should login successfully', function(done) {\n            testedUserService.login({\n                userLogin: 'jacky',\n                password: 'jacky123'\n            }).then(response => {\n                expect(response).to.have.property('token');\n                expect(response).to.have.property('user');\n                done();\n            });\n        });\n        it('should login successfully with userMail', function(done) {\n            testedUserService.login({\n                userLogin: 'jacky@gmail.com',\n                password: 'jacky123'\n            }).then(response => {\n                expect(response).to.have.property('token');\n                expect(response).to.have.property('user');\n                done();\n            });\n        });\n        it('should not login when password wrong', function(done) {\n            testedUserService.login({\n                userLogin: 'jacky@gmail.com',\n                password: 'j123'\n            }).catch(err => {\n                expect(err).to.have.property('message');\n                expect(err.message).to.contain('Wrong password');\n                done();\n            });\n        });\n        it('should not login not registered user', function(done) {\n            testedUserService.login({\n                userLogin: 'gandalf',\n                password: 'gandalf4ever'\n            }).catch(err => {\n                expect(err).to.have.property('message');\n                done();\n            });\n        });\n    });\n    describe('Test getAll', () => {\n        it('should find all users', function(done) {\n            testedUserService.getAll().then(values => {\n                expect(values.length).to.be.eq(1);\n                expect(values.pop().userName).to.be.eq('jacky');\n                done();\n            });\n        });\n    });\n    describe('Test deleteUser', () => {\n        it('should delete user when id exists', function(done) {\n            testedUserService.deleteUser(1).then(number => {\n                expect(number).to.be.eq(1);\n                User.findAll().then(values => {\n                    expect(values.length).to.be.eq(0);\n                    done();\n                });\n            });\n        });\n        it('should return 0 when id does not exist', function(done) {\n            testedUserService.deleteUser(1).then(number => {\n                expect(number).to.be.eq(0);\n                done();\n            });\n        });\n    });\n    describe('Test makeUserAdmin', () => {\n        before('add user to db', function(done) {\n            User.create(user1).then(() => {\n                done();\n            });\n        });\n        it('should make user to admin when user not admin', function(done) {\n            User.findOne({\n                where: {\n                    userName: 'jacky'\n                }\n            }).then(user => {\n                expect(user.admin).to.be.eq(false);\n                testedUserService.makeUserAdmin(1).then(updatedUser => {\n                    expect(updatedUser.admin).to.be.eq(true);\n                    User.findOne({\n                        where: {\n                            userName: 'jacky'\n                        }\n                    }).then(foundUser => {\n                        expect(foundUser.admin).to.be.eq(true);\n                        done();\n                    });\n                });\n            });\n        });\n        it('should get an error, when wanting to make user admin which does not exist', function(done) {\n            testedUserService.makeUserAdmin(3).catch(err => {\n                expect(err).not.to.be.eq(null);\n                expect(err).to.have.property('message');\n                done();\n            });\n        });\n    });\n    describe('Test getSingleUser', () => {\n        it('should return user when exists', function(done) {\n            testedUserService.getSingleUser(1).then(user => {\n                expect(user).not.to.be.eq(null);\n                expect(user.userName).to.be.eq('jacky');\n                done();\n            });\n        });\n        it('should return error, when user not exists', function(done) {\n            testedUserService.getSingleUser(32907).catch(err => {\n                expect(err.message).to.be.eq('User not found!');\n                done();\n            });\n        });\n    });\n    describe('Test changeUser', () => {\n        it('should correctly update existing user', function(done) {\n            testedUserService.changeUser({\n                userId: 1,\n                userName: 'jacky',\n                userMail: 'jack.doe@outlook.com',\n                firstName: 'Jack',\n                lastName: 'Doe',\n                gender: 'male',\n                phoneNumber: 77788889,\n                addressStreet: 'Pinnacle Street',\n                addressPin: '77889',\n                addressCity: 'Hannington Town',\n                addressCountry: 'Saint Isles'\n            }).then(user => {\n                expect(user.userMail).to.be.eq('jack.doe@outlook.com');\n                User.findByPk(1).then(foundUser => {\n                    expect(foundUser.userMail).to.be.eq('jack.doe@outlook.com');\n                    expect(foundUser.phoneNumber).to.be.eq(77788889);\n                    done();\n                });\n            });\n        });\n        it('should return error, when user not exists', function(done) {\n            testedUserService.changeUser({\n                userId: 524456,\n                userName: 'fake',\n                userMail: 'fake.user@fake.com',\n                firstName: 'Faking',\n                lastName: 'Dude',\n                gender: 'male',\n                phoneNumber: 1,\n                addressStreet: null,\n                addressPin: null,\n                addressCity: null,\n                addressCountry: null\n            }).catch(err => {\n                expect(err).not.to.be.eq(null);\n                expect(err).to.have.property('message');\n                done();\n            });\n        });\n        it('should return error, when to be updated data is poor', function(done) {\n            testedUserService.changeUser({\n                userId: 1,\n                userName: null,\n                userMail: 'jack.doe@outlook.com',\n                firstName: 'Jack',\n                lastName: 'Doe',\n                gender: 'male',\n                phoneNumber: 77788889,\n                addressStreet: 'Pinnacle Street',\n                addressPin: '77889',\n                addressCity: 'Hannington Town',\n                addressCountry: 'Saint Isles'\n            }).catch(err => {\n                expect(err).not.to.be.eq(null);\n                expect(err).to.have.property('message');\n                done();\n            });\n        });\n    });\n    describe('Test sendEmailWithResetLink', function() {\n        this.timeout(12000);\n        it('should send email successfully when email exists', function(done) {\n            testedUserService.sendEmailWithResetLink('jack.doe@outlook.com').then(info => {\n                expect(info.envelope.to[0]).to.be.eq('jack.doe@outlook.com');\n                done();\n            }).catch(err => {\n                console.log(err);\n                expect(true).to.be.eq(false); // should never reach here!\n                done();\n            });\n        });\n        it('should not send email, when email does not exists', function(done) {\n            testedUserService.sendEmailWithResetLink('notexistend@email.com').then(info => {\n                console.log(info);\n                expect(true).to.be.eq(false); // should never reach here!\n                done();\n            }).catch(err => {\n                expect(err).not.to.be.eq(null);\n                expect(err).to.have.property('message');\n                done();\n            });\n        });\n    });\n    describe('Test restorePassword', () => {\n        it('should successfully change password', function(done) {\n            testedUserService.restorePassword('jacky', '1234').then(() => {\n                User.findOne({\n                    where: {\n                        userName: 'jacky'\n                    }\n                }).then(user => {\n                    expect(user.password).not.to.be.eq('$2b$12$DS7bJoPX3gH3yk0yu7V9l.jpWFIaOX3W1YzNCwtk/Y6UgYlvxVWS.'); // old password\n                    expect(user.password).not.to.be.eq('1234'); // new password must be hashed\n                    done();\n                });\n            });\n        });\n        it('should not update anything, when requested user does not exist', function(done) {\n            testedUserService.restorePassword('nonExistentUser', 'fakey').then(() => {\n                expect(true).to.be.eq(false); // should never reach here!\n                done();\n            }).catch(err => {\n                expect(err).not.to.be.eq(null);\n                expect(err).to.have.property('message');\n                done();\n            });\n        });\n    });\n    describe('Test updateGameScore', () => {\n        it('should successfully update the game and overall score', function(done) {\n            testedUserService.updateGameScore(1, 5).then(() => {\n                User.findByPk(1).then((user) => {\n                    expect(user).not.to.be.eq(null);\n                    expect(user.gameScore).to.be.eq(5);\n                    expect(user.overallScore).to.be.eq(10);\n                    done();\n                });\n            });\n        });\n    });\n    describe('Test getGameHighScore', () => {\n        it('should add another user', function(done) {\n            const user2: UserAttributes = {\n                userId: 2,\n                admin: false,\n                wallet: 500,\n                userName: 'brent',\n                password: 'j1234',\n                userMail: 'brent@gmail.com',\n                firstName: 'Brent',\n                lastName: 'Eastwood',\n                gender: 'male',\n                phoneNumber: 7655555,\n                addressStreet: 'Kensington Road',\n                addressPin: '4404',\n                addressCity: 'Creed Town',\n                addressCountry: 'Mercy Islands',\n                gameScore: 6,\n                activityScore: 1,\n                overallScore: 6\n            };\n            testedUserService.register(user2).then(user => {\n                expect(user).not.to.be.eq(null);\n                done();\n            });\n        });\n        it('should successfully get game high scores', function(done) {\n            testedUserService.getGameHighScores().then((users) => {\n                expect(users[0].userId).to.be.eq(2);\n                expect(users[0].userName).to.be.eq('brent');\n                expect(users[0].gameScore).to.be.eq(6);\n                expect(users[1].userId).to.be.eq(1);\n                done();\n            });\n        });\n    });\n    describe('Test getOverallHighScore', () => {\n        it('should successfully get the three overall high scores', function(done) {\n            testedUserService.getOverallHighScores().then((users) => {\n                expect(users[1].userId).to.be.eq(2);\n                expect(users[1].userName).to.be.eq('brent');\n                expect(users[1].overallScore).to.be.eq(6);\n                expect(users[0].userId).to.be.eq(1);\n                expect(users[0].overallScore).to.be.eq(10);\n                done();\n            });\n        });\n    });\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"04c82aae254251c7a4b6e778d29a4ab9fd19d911","contentHash":"3012756ff60ba306b9f718cec8cd175a555d933b3d01aafd237a98c4acad9117"}}